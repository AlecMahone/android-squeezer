android.support.v4.app.BackStackRecord -> android.support.v4.app.r:
    android.support.v4.app.FragmentManagerImpl mManager -> l
    android.support.v4.app.BackStackRecord$Op mHead -> a
    android.support.v4.app.BackStackRecord$Op mTail -> m
    int mNumOp -> b
    int mEnterAnim -> n
    int mExitAnim -> o
    int mPopEnterAnim -> p
    int mPopExitAnim -> q
    int mTransition -> c
    int mTransitionStyle -> d
    boolean mAddToBackStack -> e
    boolean mAllowAddToBackStack -> r
    java.lang.String mName -> f
    boolean mCommitted -> s
    int mIndex -> g
    int mBreadCrumbTitleRes -> h
    java.lang.CharSequence mBreadCrumbTitleText -> i
    int mBreadCrumbShortTitleRes -> j
    java.lang.CharSequence mBreadCrumbShortTitleText -> k
    212:284:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    317:329:void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    332:333:android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    337:338:android.support.v4.app.FragmentTransaction add$2fdc650e(android.support.v4.app.Fragment) -> a
    347:371:void doAddOp$39f1d44b$a2096f2(android.support.v4.app.Fragment,java.lang.String) -> b
    387:392:android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> b
    502:522:void bumpBackStackNesting(int) -> a
    525:525:int commit() -> a
    529:529:int commitAllowingStateLoss() -> b
    533:542:int commitInternal(boolean) -> b
    546:628:void run() -> run
    631:705:void popFromBackStack(boolean) -> a
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.p:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    95:130:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    134:134:int describeContents() -> describeContents
    138:147:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.n:
    150:150:java.lang.Object[] newArray(int) -> newArray
    150:150:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.a:
    int mStyle -> a
    int mTheme -> L
    boolean mCancelable -> M
    boolean mShowsDialog -> N
    int mBackStackId -> O
    android.app.Dialog mDialog -> P
    boolean mDestroyed -> Q
    boolean mRemoved -> R
    121:124:void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    149:150:void dismiss() -> dismiss
    153:171:void dismissInternal(boolean) -> dismissInternal
    178:178:int getTheme() -> getTheme
    232:244:void onCreate(android.os.Bundle) -> onCreate
    249:265:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    292:292:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    296:296:void onCancel(android.content.DialogInterface) -> onCancel
    299:306:void onDismiss(android.content.DialogInterface) -> onDismiss
    310:333:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    337:342:void onStart() -> onStart
    346:368:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    372:376:void onStop() -> onStop
    383:393:void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> b
    android.view.View mAnimatingAway -> c
    int mStateAfterAnimating -> d
    android.os.Bundle mSavedFragmentState -> e
    android.util.SparseArray mSavedViewState -> f
    int mIndex -> g
    java.lang.String mWho -> L
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    int mFragmentId -> u
    int mContainerId -> v
    java.lang.String mTag -> w
    boolean mHidden -> x
    boolean mDetached -> y
    boolean mRetainInstance -> z
    boolean mRetaining -> A
    boolean mHasMenu -> B
    boolean mMenuVisible -> C
    boolean mCalled -> D
    int mNextAnim -> E
    android.view.ViewGroup mContainer -> F
    android.view.View mView -> G
    android.view.View mInnerView -> H
    boolean mDeferStart -> I
    boolean mUserVisibleHint -> J
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> K
    boolean mLoadersStarted -> M
    boolean mCheckedForLoaderManager -> N
    359:359:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    378:399:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    406:410:void restoreViewState() -> restoreViewState
    413:415:void setIndex(int) -> setIndex
    418:418:boolean isInBackStack() -> isInBackStack
    425:425:boolean equals(java.lang.Object) -> equals
    432:432:int hashCode() -> hashCode
    437:452:java.lang.String toString() -> toString
    468:468:java.lang.String getTag() -> getTag
    479:483:void setArguments(android.os.Bundle) -> setArguments
    490:490:android.os.Bundle getArguments() -> getArguments
    543:543:android.support.v4.app.FragmentActivity getActivity() -> getActivity
    550:553:android.content.res.Resources getResources() -> getResources
    563:563:java.lang.CharSequence getText(int) -> getText
    573:573:java.lang.String getString(int) -> getString
    586:586:java.lang.String getString(int,java.lang.Object[]) -> getString
    597:597:android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    604:604:boolean isAdded() -> isAdded
    662:662:boolean isHidden() -> isHidden
    673:673:void onHiddenChanged(boolean) -> onHiddenChanged
    705:711:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    812:812:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    820:820:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    866:867:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    874:875:void onAttach(android.app.Activity) -> onAttach
    881:881:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    899:900:void onCreate(android.os.Bundle) -> onCreate
    923:923:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    937:937:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    946:946:android.view.View getView() -> getView
    963:964:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    972:984:void onStart() -> onStart
    993:994:void onResume() -> onResume
    1016:1016:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1019:1020:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1028:1029:void onPause() -> onPause
    1037:1038:void onStop() -> onStop
    1041:1042:void onLowMemory() -> onLowMemory
    1054:1055:void onDestroyView() -> onDestroyView
    1062:1072:void onDestroy() -> onDestroy
    1081:1101:void initState() -> initState
    1108:1109:void onDetach() -> onDetach
    1125:1125:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1142:1142:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1152:1152:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    1173:1173:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1184:1184:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    1204:1205:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1250:1250:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1263:1329:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1332:1336:void performStart() -> performStart
    1339:1340:void performStop() -> performStop
    1343:1357:void performReallyStop() -> performReallyStop
    1360:1364:void performDestroyView() -> performDestroyView
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.i:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    304:304:int describeContents() -> describeContents
    309:310:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.u:
    313:313:java.lang.Object[] newArray(int) -> newArray
    313:313:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> e
    boolean mResumed -> f
    boolean mStopped -> c
    boolean mReallyStopped -> g
    boolean mRetaining -> d
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.app.HCSparseArray mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    139:157:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    164:167:void onBackPressed() -> onBackPressed
    174:176:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    183:201:void onCreate(android.os.Bundle) -> onCreate
    208:219:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    227:302:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    310:318:void onDestroy() -> onDestroy
    325:334:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    342:344:void onLowMemory() -> onLowMemory
    351:363:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    372:378:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    385:392:void onPause() -> onPause
    399:403:void onResume() -> onResume
    410:414:void onPostResume() -> onPostResume
    421:431:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    441:472:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    480:485:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    493:526:void onStart() -> onStart
    533:539:void onStop() -> onStop
    550:550:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    564:574:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    587:609:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    612:618:void doReallyStop(boolean) -> doReallyStop
    628:640:void onReallyStop() -> onReallyStop
    650:650:void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    657:657:android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    666:670:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    689:696:void invalidateSupportFragmentIndex(int) -> invalidateSupportFragmentIndex
    715:727:android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.x:
    android.support.v4.app.FragmentActivity this$0 -> a
    82:95:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.l:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.t:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.app.HCSparseArray loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.k:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    void popBackStack$255f295(int) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.d:
    boolean DEBUG -> a
    boolean HONEYCOMB -> f
    java.util.ArrayList mPendingActions -> g
    java.lang.Runnable[] mTmpActions -> h
    boolean mExecutingActions -> i
    java.util.ArrayList mActive -> b
    java.util.ArrayList mAdded -> c
    java.util.ArrayList mAvailIndices -> j
    java.util.ArrayList mBackStack -> k
    java.util.ArrayList mCreatedMenus -> l
    java.util.ArrayList mBackStackIndices -> m
    java.util.ArrayList mAvailBackStackIndices -> n
    java.util.ArrayList mBackStackChangeListeners -> o
    int mCurState -> d
    android.support.v4.app.FragmentActivity mActivity -> p
    boolean mNeedMenuInvalidate -> q
    boolean mStateSaved -> r
    boolean mDestroyed -> s
    java.lang.String mNoTransactionsBecause -> e
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    426:426:android.support.v4.app.FragmentTransaction beginTransaction() -> a
    445:447:boolean popBackStackImmediate() -> b
    468:476:void popBackStack$255f295(int) -> a
    555:561:java.lang.String toString() -> toString
    566:670:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    681:691:android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    695:698:android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    703:757:android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    774:1055:void moveToState(android.support.v4.app.Fragment,int,int,int) -> a
    1058:1059:void moveToState(android.support.v4.app.Fragment) -> a
    1062:1063:void moveToState$2563266(int) -> e
    1066:1096:void moveToState(int,int,int,boolean) -> a
    1099:1107:void startPendingDeferredFragments() -> p
    1143:1159:void addFragment(android.support.v4.app.Fragment,boolean) -> a
    1162:1174:void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    1177:1193:void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    1196:1212:void showFragment(android.support.v4.app.Fragment,int,int) -> c
    1215:1228:void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    1231:1243:void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    1246:1262:android.support.v4.app.Fragment findFragmentById(int) -> b
    1266:1282:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    1298:1306:void checkStateLoss() -> q
    1309:1324:void enqueueAction(java.lang.Runnable,boolean) -> a
    1328:1344:int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    1348:1369:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    1373:1380:void freeBackStackIndex(int) -> c
    1387:1436:boolean execPendingActions() -> c
    1440:1445:void reportBackStackChanged() -> r
    1448:1453:void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    1456:1515:boolean popBackStackState$68507953$44bd8ea3(int,int) -> a
    1519:1533:java.util.ArrayList retainNonConfig() -> d
    1537:1550:void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    1585:1686:android.os.Parcelable saveAllState() -> e
    1692:1792:void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    1795:1797:void attachActivity(android.support.v4.app.FragmentActivity) -> a
    1800:1801:void noteStateNotSaved() -> f
    1804:1806:void dispatchCreate() -> g
    1809:1811:void dispatchActivityCreated() -> h
    1814:1816:void dispatchStart() -> i
    1819:1821:void dispatchResume() -> j
    1824:1825:void dispatchPause() -> k
    1831:1834:void dispatchStop() -> l
    1837:1838:void dispatchReallyStop() -> m
    1841:1845:void dispatchDestroy() -> n
    1848:1856:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    1859:1867:void dispatchLowMemory() -> o
    1870:1897:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1901:1911:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    1915:1925:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    1929:1939:boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    1943:1951:void dispatchOptionsMenuClosed(android.view.Menu) -> b
    1954:1966:int reverseTransit(int) -> d
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.g:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    420:421:void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.f:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    473:474:void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.e:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    983:988:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    991:991:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    994:994:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    353:353:int describeContents() -> describeContents
    357:360:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.h:
    363:363:java.lang.Object[] newArray(int) -> newArray
    363:363:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> c
    int mIndex -> d
    boolean mFromLayout -> e
    int mFragmentId -> f
    int mContainerId -> g
    java.lang.String mTag -> h
    boolean mRetainInstance -> i
    boolean mDetached -> j
    android.os.Bundle mArguments -> k
    android.os.Bundle mSavedFragmentState -> a
    android.support.v4.app.Fragment mInstance -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    88:112:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    116:116:int describeContents() -> describeContents
    120:130:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.m:
    133:133:java.lang.Object[] newArray(int) -> newArray
    133:133:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.w:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add$2fdc650e(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> b
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.HCSparseArray -> android.support.v4.app.b:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    52:52:java.lang.Object get(int) -> a
    87:88:void remove(int) -> b
    94:98:void removeAt(int) -> c
    103:125:void gc() -> c
    133:177:void put(int,java.lang.Object) -> a
    184:188:int size() -> a
    197:201:int keyAt(int) -> d
    210:214:java.lang.Object valueAt(int) -> e
    267:276:void clear() -> b
    313:329:int binarySearch$76412d8d(int[],int,int) -> a
    341:341:int idealIntArraySize(int) -> f
android.support.v4.app.LoaderManager -> android.support.v4.app.c:
    183:183:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.s:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.j:
    boolean DEBUG -> a
    android.support.v4.app.HCSparseArray mLoaders -> d
    android.support.v4.app.HCSparseArray mInactiveLoaders -> e
    android.support.v4.app.FragmentActivity mActivity -> b
    boolean mStarted -> f
    boolean mRetaining -> c
    480:481:void updateActivity(android.support.v4.app.FragmentActivity) -> a
    697:712:void doStart() -> b
    715:727:void doStop() -> c
    730:743:void doRetain() -> d
    746:754:void finishRetain() -> e
    757:760:void doReportNextStart() -> f
    763:766:void doReportStart() -> g
    769:781:void doDestroy() -> h
    785:791:java.lang.String toString() -> toString
    796:816:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    820:826:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.o:
    int mId -> a
    android.os.Bundle mArgs -> l
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> b
    android.support.v4.content.Loader mLoader -> c
    boolean mHaveData -> d
    boolean mDeliveredData -> e
    java.lang.Object mData -> f
    boolean mStarted -> g
    boolean mRetaining -> h
    boolean mRetainingStarted -> i
    boolean mReportNextStart -> j
    boolean mDestroyed -> m
    boolean mListenerRegistered -> k
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    311:321:void stop() -> a
    324:356:void destroy() -> b
    415:432:void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    436:444:java.lang.String toString() -> toString
    448:471:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.v:
    32:41:android.view.ViewGroup wrap(android.view.View) -> a
    53:54:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    61:62:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.q:
android.support.v4.content.Loader -> android.support.v4.c.b:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    129:134:void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    142:149:void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    194:197:void startLoading() -> a
    242:243:void stopLoading() -> b
    290:295:void reset() -> c
    349:354:java.lang.String toString() -> toString
    366:372:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.c.a:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.b:
    36:39:android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    51:51:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    56:56:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.a:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    40:40:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    44:44:java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.d.a:
    28:43:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.d.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    44:45:void close() -> close
    48:49:void flush() -> flush
    52:61:void write(char[],int,int) -> write
    64:68:void flushBuilder() -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    139:139:boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    143:143:boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.q:
    49:61:int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    67:73:int normalizeMetaState(int) -> c
    78:83:boolean metaStateHasModifiers$255f299(int) -> a
    88:88:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    103:103:boolean metaStateHasModifiers$255f299(int) -> a
    108:108:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.u:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.aa:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    156:156:int getActionIndex(android.view.MotionEvent) -> a
    166:166:int findPointerIndex(android.view.MotionEvent,int) -> a
    175:175:int getPointerId(android.view.MotionEvent,int) -> b
    184:184:float getX(android.view.MotionEvent,int) -> c
    193:193:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.p:
    42:46:int findPointerIndex(android.view.MotionEvent,int) -> a
    50:54:int getPointerId(android.view.MotionEvent,int) -> b
    58:61:float getX(android.view.MotionEvent,int) -> c
    65:68:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.z:
    78:78:int findPointerIndex(android.view.MotionEvent,int) -> a
    82:82:int getPointerId(android.view.MotionEvent,int) -> b
    86:86:float getX(android.view.MotionEvent,int) -> c
    90:90:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.c:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.a:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    boolean isViewFromObject$171eb1dd() -> b
    280:281:void registerDataSetObserver(android.database.DataSetObserver) -> a
    284:285:void unregisterDataSetObserver(android.database.DataSetObserver) -> b
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> e
    float mLastKnownPositionOffset -> f
    int mScaledTextSpacing -> g
    boolean mUpdatingText -> h
    boolean mUpdatingPositions -> i
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> j
    int[] ATTRS -> k
    116:131:void onAttachedToWindow() -> onAttachedToWindow
    135:139:void onDetachedFromWindow() -> onDetachedFromWindow
    142:176:void updateText$7a69ae8(int) -> a
    180:183:void requestLayout() -> requestLayout
    186:198:void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    201:244:void updateTextPositions(int,float) -> a
    248:281:void onMeasure(int,int) -> onMeasure
    285:288:void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.o:
    int mScrollState -> a
    android.support.v4.view.PagerTitleStrip this$0 -> b
    296:301:void onPageScrolled$486775f1(int,float) -> a
    305:309:void onPageSelected$13462e() -> a
    313:314:void onPageScrollStateChanged(int) -> a
    323:324:void onChanged() -> onChanged
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ad:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    82:82:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.k:
    40:40:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.r:
    54:54:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.e:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.i:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    142:142:boolean canScrollHorizontally(android.view.View,int) -> a
    166:166:int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.m:
    59:59:boolean canScrollHorizontally(android.view.View,int) -> a
    65:65:int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    87:87:int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.j:
    98:98:boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.f:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.h:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    73:73:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.t:
    39:39:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ab:
    49:49:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.b:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.PagerAdapter mAdapter -> e
    int mCurItem -> f
    int mRestoredCurItem -> g
    android.os.Parcelable mRestoredAdapterState -> h
    java.lang.ClassLoader mRestoredClassLoader -> i
    android.widget.Scroller mScroller -> j
    int mPageMargin -> k
    android.graphics.drawable.Drawable mMarginDrawable -> l
    int mTopPageBounds -> m
    int mBottomPageBounds -> n
    int mChildWidthMeasureSpec -> o
    int mChildHeightMeasureSpec -> p
    boolean mInLayout -> q
    boolean mScrollingCacheEnabled -> r
    boolean mPopulatePending -> s
    boolean mScrolling -> t
    int mOffscreenPageLimit -> u
    boolean mIsBeingDragged -> v
    boolean mIsUnableToDrag -> w
    int mTouchSlop -> x
    float mInitialMotionX -> y
    float mLastMotionX -> z
    float mLastMotionY -> A
    int mActivePointerId -> B
    android.view.VelocityTracker mVelocityTracker -> C
    int mMinimumVelocity -> D
    int mMaximumVelocity -> E
    int mFlingDistance -> F
    boolean mFakeDragging -> G
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> H
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> I
    boolean mFirstLayout -> J
    boolean mCalledSuper -> K
    int mDecorChildCount -> L
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> M
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> N
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> O
    int mScrollState -> P
    298:306:void setScrollState(int) -> a
    370:370:android.support.v4.view.PagerAdapter getAdapter() -> a
    374:375:void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    396:398:void setCurrentItem$2563266(int) -> b
    401:401:int getCurrentItem() -> b
    405:406:void setCurrentItemInternal(int,boolean,boolean) -> a
    409:453:void setCurrentItemInternal(int,boolean,boolean,int) -> a
    472:474:android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    567:567:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    572:577:void drawableStateChanged() -> drawableStateChanged
    647:649:void addNewItem$255f295(int) -> c
    720:821:void populate() -> d
    877:883:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    888:904:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    908:930:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    933:939:android.support.v4.view.ViewPager$ItemInfo infoForChild$31e08638() -> e
    944:950:android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> a
    955:957:void onAttachedToWindow() -> onAttachedToWindow
    966:1033:void onMeasure(int,int) -> onMeasure
    1037:1043:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1070:1151:void onLayout(boolean,int,int,int,int) -> onLayout
    1156:1177:void computeScroll() -> computeScroll
    1180:1191:void pageScrolled(int) -> d
    1256:1282:void completeScroll() -> f
    1292:1415:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1420:1558:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1574:1613:void draw(android.graphics.Canvas) -> draw
    1617:1632:void onDraw(android.graphics.Canvas) -> onDraw
    1751:1763:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    1766:1773:void endDrag() -> g
    1776:1788:void setScrollingCacheEnabled(boolean) -> a
    1802:1821:boolean canScroll(android.view.View,boolean,int,int,int) -> a
    1827:1827:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1865:1900:boolean arrowScroll(int) -> e
    1904:1908:boolean pageLeft() -> h
    1924:1961:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1971:1980:void addTouchables(java.util.ArrayList) -> addTouchables
    1991:2012:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2022:2034:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2039:2039:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2044:2044:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2049:2049:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2054:2054:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    80:80:int[] access$100() -> c
android.support.v4.view.ViewPager$1 -> android.support.v4.view.x:
    100:100:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.w:
    108:109:float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ac:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.l:
    int position -> a
    boolean scrolling -> b
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.d:
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.y:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    840:843:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    847:847:java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.g:
    853:853:java.lang.Object[] newArray(int) -> a
    853:853:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.a.c:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    143:144:void setSize(int,int) -> a
    154:154:boolean isFinished() -> a
    162:163:void finish() -> b
    177:177:boolean onPull(float) -> a
    189:189:boolean onRelease() -> c
    218:218:boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.a.d:
    60:60:java.lang.Object newEdgeEffect(android.content.Context) -> a
    64:64:void setSize(java.lang.Object,int,int) -> a
    67:67:boolean isFinished(java.lang.Object) -> a
    71:71:void finish(java.lang.Object) -> b
    74:74:boolean onPull(java.lang.Object,float) -> a
    78:78:boolean onRelease(java.lang.Object) -> c
    86:86:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.a.a:
    92:92:java.lang.Object newEdgeEffect(android.content.Context) -> a
    96:97:void setSize(java.lang.Object,int,int) -> a
    100:100:boolean isFinished(java.lang.Object) -> a
    104:105:void finish(java.lang.Object) -> b
    108:108:boolean onPull(java.lang.Object,float) -> a
    112:112:boolean onRelease(java.lang.Object) -> c
    120:120:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.a.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.google.android.apps.analytics.AnalyticsParameterEncoder -> com.google.android.apps.analytics.b:
    java.lang.String encode(java.lang.String,java.lang.String) -> a
com.google.android.apps.analytics.AnalyticsReceiver -> com.google.android.apps.analytics.AnalyticsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.android.apps.analytics.CustomVariable -> com.google.android.apps.analytics.h:
    int scope -> a
    java.lang.String name -> b
    java.lang.String value -> c
    int index -> d
    int getScope() -> a
    java.lang.String getName() -> b
    java.lang.String getValue() -> c
    int getIndex() -> d
com.google.android.apps.analytics.CustomVariableBuffer -> com.google.android.apps.analytics.i:
    com.google.android.apps.analytics.CustomVariable[] customVariables -> a
    boolean isIndexAvailable(int) -> a
    void setCustomVariable(com.google.android.apps.analytics.CustomVariable) -> a
    com.google.android.apps.analytics.CustomVariable getCustomVariableAt(int) -> b
    com.google.android.apps.analytics.CustomVariable[] getCustomVariableArray() -> a
    void throwOnInvalidIndex(int) -> c
    boolean hasCustomVariables() -> b
com.google.android.apps.analytics.Dispatcher -> com.google.android.apps.analytics.a:
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    void init(com.google.android.apps.analytics.Dispatcher$Callbacks) -> a
    void stop() -> a
    void setDryRun(boolean) -> a
com.google.android.apps.analytics.Dispatcher$Callbacks -> com.google.android.apps.analytics.aa:
    void hitDispatched(long) -> a
    void dispatchFinished() -> a
com.google.android.apps.analytics.Event -> com.google.android.apps.analytics.v:
    long eventId -> i
    java.lang.String accountId -> a
    int randomVal -> j
    int timestampFirst -> k
    int timestampPrevious -> l
    int timestampCurrent -> m
    int visits -> n
    int userId -> o
    boolean anonymizeIp -> p
    java.lang.String category -> b
    java.lang.String action -> c
    java.lang.String label -> d
    int value -> e
    int screenWidth -> f
    int screenHeight -> g
    com.google.android.apps.analytics.CustomVariableBuffer customVariableBuffer -> h
    com.google.android.apps.analytics.Transaction transaction -> q
    com.google.android.apps.analytics.Item item -> r
    void setRandomVal(int) -> a
    int getRandomVal() -> a
    void setTimestampFirst(int) -> b
    int getTimestampFirst() -> b
    void setTimestampPrevious(int) -> c
    int getTimestampPrevious() -> c
    void setTimestampCurrent(int) -> d
    int getTimestampCurrent() -> d
    void setVisits(int) -> e
    int getVisits() -> e
    void setUserId(int) -> f
    int getUserId() -> f
    void setAnonymizeIp(boolean) -> a
    boolean getAnonymizeIp() -> g
    java.lang.String toString() -> toString
    com.google.android.apps.analytics.Transaction getTransaction() -> h
    void setTransaction(com.google.android.apps.analytics.Transaction) -> a
    com.google.android.apps.analytics.Item getItem() -> i
    void setItem(com.google.android.apps.analytics.Item) -> a
    boolean isSessionInitialized() -> j
com.google.android.apps.analytics.GoogleAnalyticsTracker -> com.google.android.apps.analytics.j:
    com.google.android.apps.analytics.GoogleAnalyticsTracker INSTANCE -> a
    boolean debug -> b
    boolean dryRun -> c
    boolean anonymizeIp -> d
    int sampleRate -> e
    java.lang.String accountId -> f
    android.content.Context parent -> g
    android.net.ConnectivityManager connetivityManager -> h
    java.lang.String userAgentProduct -> i
    java.lang.String userAgentVersion -> j
    int dispatchPeriod -> k
    com.google.android.apps.analytics.HitStore hitStore -> l
    com.google.android.apps.analytics.Dispatcher dispatcher -> m
    boolean powerSaveMode -> n
    boolean dispatcherIsBusy -> o
    com.google.android.apps.analytics.CustomVariableBuffer customVariableBuffer -> p
    java.util.Map transactionMap -> q
    java.util.Map itemMap -> r
    android.os.Handler handler -> s
    java.lang.Runnable dispatchRunner -> t
    com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance() -> a
    void startNewSession(java.lang.String,android.content.Context) -> a
    void trackPageView(java.lang.String) -> a
    void maybeScheduleNextDispatch() -> f
    void cancelPendingDispatches() -> g
    boolean dispatch() -> b
    void dispatchFinished() -> c
    void stopSession() -> d
    boolean getDebug() -> e
    android.os.Handler access$000(com.google.android.apps.analytics.GoogleAnalyticsTracker) -> a
    com.google.android.apps.analytics.HitStore access$100(com.google.android.apps.analytics.GoogleAnalyticsTracker) -> b
com.google.android.apps.analytics.GoogleAnalyticsTracker$1 -> com.google.android.apps.analytics.l:
    com.google.android.apps.analytics.GoogleAnalyticsTracker this$0 -> a
    void run() -> run
com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks -> com.google.android.apps.analytics.c:
    com.google.android.apps.analytics.GoogleAnalyticsTracker this$0 -> a
    void dispatchFinished() -> a
    void hitDispatched(long) -> a
com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks$1 -> com.google.android.apps.analytics.n:
    com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks this$1 -> a
    void run() -> run
com.google.android.apps.analytics.Hit -> com.google.android.apps.analytics.o:
    java.lang.String hitString -> a
    long hitId -> b
com.google.android.apps.analytics.HitBuilder -> com.google.android.apps.analytics.g:
    void appendStringValue(java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    void appendCurrencyValue(java.lang.StringBuilder,java.lang.String,double) -> a
    java.lang.String constructHitRequestPath(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer) -> a
    java.lang.String getCustomVariableParams(com.google.android.apps.analytics.Event) -> a
    void createX10Project(com.google.android.apps.analytics.CustomVariable[],java.lang.StringBuilder,int) -> a
    java.lang.String x10Escape(java.lang.String) -> a
    java.lang.String getEscapedCookieString(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer) -> b
com.google.android.apps.analytics.HitStore -> com.google.android.apps.analytics.t:
    void putEvent(com.google.android.apps.analytics.Event) -> a
    com.google.android.apps.analytics.Hit[] peekHits() -> a
    void deleteHit(long) -> a
    int getNumStoredHits() -> b
    boolean setReferrer(java.lang.String) -> a
    void startNewVisit() -> c
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
com.google.android.apps.analytics.Item -> com.google.android.apps.analytics.u:
    java.lang.String orderId -> a
    java.lang.String itemSKU -> b
    java.lang.String itemName -> c
    java.lang.String itemCategory -> d
    double itemPrice -> e
    long itemCount -> f
    java.lang.String getOrderId() -> a
    java.lang.String getItemSKU() -> b
    java.lang.String getItemName() -> c
    java.lang.String getItemCategory() -> d
    double getItemPrice() -> e
    long getItemCount() -> f
com.google.android.apps.analytics.Item$Builder -> com.google.android.apps.analytics.q:
    java.lang.String orderId -> a
    java.lang.String itemSKU -> b
    double itemPrice -> c
    long itemCount -> d
    java.lang.String itemName -> e
    java.lang.String itemCategory -> f
    com.google.android.apps.analytics.Item$Builder setItemName(java.lang.String) -> a
    com.google.android.apps.analytics.Item$Builder setItemCategory(java.lang.String) -> b
    java.lang.String access$000(com.google.android.apps.analytics.Item$Builder) -> a
    java.lang.String access$100(com.google.android.apps.analytics.Item$Builder) -> b
    double access$200(com.google.android.apps.analytics.Item$Builder) -> c
    long access$300(com.google.android.apps.analytics.Item$Builder) -> d
    java.lang.String access$400(com.google.android.apps.analytics.Item$Builder) -> e
    java.lang.String access$500(com.google.android.apps.analytics.Item$Builder) -> f
com.google.android.apps.analytics.NetworkDispatcher -> com.google.android.apps.analytics.s:
    java.lang.String userAgent -> a
    org.apache.http.HttpHost googleAnalyticsHost -> b
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread dispatcherThread -> c
    boolean dryRun -> d
    void init(com.google.android.apps.analytics.Dispatcher$Callbacks) -> a
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    void setDryRun(boolean) -> a
    boolean isDryRun() -> b
    void stop() -> a
    org.apache.http.HttpHost access$200(com.google.android.apps.analytics.NetworkDispatcher) -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread -> com.google.android.apps.analytics.f:
    android.os.Handler handlerExecuteOnDispatcherThread -> a
    com.google.android.apps.analytics.PipelinedRequester pipelinedRequester -> b
    java.lang.String userAgent -> c
    int lastStatusCode -> d
    int maxEventsPerRequest -> e
    long retryInterval -> f
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask currentTask -> g
    com.google.android.apps.analytics.Dispatcher$Callbacks callbacks -> h
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks requesterCallBacks -> i
    com.google.android.apps.analytics.NetworkDispatcher parent -> j
    void onLooperPrepared() -> onLooperPrepared
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$402(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask) -> a
    int access$500(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> a
    long access$600(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> b
    long access$630$78cf8d4e(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> c
    long access$602$78cf8d4e(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> d
    com.google.android.apps.analytics.NetworkDispatcher access$700(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> e
    com.google.android.apps.analytics.PipelinedRequester access$800(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> f
    com.google.android.apps.analytics.Dispatcher$Callbacks access$900(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> g
    int access$1000(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> h
    java.lang.String access$1100(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> i
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks access$1200(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> j
    int access$1002$78cf9110(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> k
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$400(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> l
    int access$502(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,int) -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask -> com.google.android.apps.analytics.d:
    java.util.LinkedList hits -> a
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread this$0 -> b
    void run() -> run
    com.google.android.apps.analytics.Hit removeNextHit() -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks -> com.google.android.apps.analytics.x:
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread this$0 -> a
    void pipelineModeChanged$1385ff() -> a
    void requestSent() -> b
    void serverError(int) -> a
com.google.android.apps.analytics.PersistentHitStore -> com.google.android.apps.analytics.e:
    com.google.android.apps.analytics.PersistentHitStore$DataBaseHelper databaseHelper -> a
    int storeId -> b
    long timestampFirst -> c
    long timestampPrevious -> d
    long timestampCurrent -> e
    int visits -> f
    int numStoredHits -> g
    boolean sessionStarted -> h
    boolean useStoredVisitorVars -> i
    boolean anonymizeIp -> j
    int sampleRate -> k
    java.lang.String CREATE_EVENTS_TABLE -> l
    java.lang.String CREATE_SESSION_TABLE -> m
    java.lang.String CREATE_CUSTOM_VARIABLES_TABLE -> n
    java.lang.String CREATE_CUSTOM_VAR_CACHE_TABLE -> o
    java.lang.String CREATE_TRANSACTION_EVENTS_TABLE -> p
    java.lang.String CREATE_ITEM_EVENTS_TABLE -> q
    java.lang.String CREATE_HITS_TABLE -> r
    void deleteHit(long) -> a
    com.google.android.apps.analytics.Hit[] peekHits() -> a
    com.google.android.apps.analytics.Hit[] peekHits$7612f821() -> k
    com.google.android.apps.analytics.Event[] peekEvents$3798dea(android.database.sqlite.SQLiteDatabase,int) -> a
    com.google.android.apps.analytics.Transaction getTransaction(long,android.database.sqlite.SQLiteDatabase) -> a
    com.google.android.apps.analytics.Item getItem(long,android.database.sqlite.SQLiteDatabase) -> b
    com.google.android.apps.analytics.CustomVariableBuffer getCustomVariables(long,android.database.sqlite.SQLiteDatabase) -> c
    void putEvent(com.google.android.apps.analytics.Event) -> a
    void putEvent(com.google.android.apps.analytics.Event,android.database.sqlite.SQLiteDatabase,boolean) -> a
    com.google.android.apps.analytics.CustomVariableBuffer getVisitorVarBuffer() -> l
    int getNumStoredHits() -> b
    void loadExistingSession(android.database.sqlite.SQLiteDatabase) -> a
    void startNewVisit() -> c
    com.google.android.apps.analytics.Referrer readCurrentReferrer(android.database.sqlite.SQLiteDatabase) -> b
    boolean setReferrerDatabase(android.database.sqlite.SQLiteDatabase,android.content.ContentValues) -> a
    boolean setReferrer(java.lang.String) -> a
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
    java.lang.String access$000() -> d
    java.lang.String access$100() -> e
    java.lang.String access$200() -> f
    java.lang.String access$300() -> g
    java.lang.String access$400() -> h
    java.lang.String access$500() -> i
    java.lang.String access$600() -> j
com.google.android.apps.analytics.PersistentHitStore$DataBaseHelper -> com.google.android.apps.analytics.m:
    int databaseVersion -> a
    com.google.android.apps.analytics.PersistentHitStore store -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void createCustomVariableTables(android.database.sqlite.SQLiteDatabase) -> a
    void createECommerceTables(android.database.sqlite.SQLiteDatabase) -> b
    void createHitTable(android.database.sqlite.SQLiteDatabase) -> c
    void createReferrerTable(android.database.sqlite.SQLiteDatabase) -> d
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
com.google.android.apps.analytics.PipelinedRequester -> com.google.android.apps.analytics.k:
    org.apache.http.impl.DefaultHttpClientConnection connection -> b
    com.google.android.apps.analytics.PipelinedRequester$Callbacks callbacks -> a
    int lastStatusCode -> c
    boolean canPipeline -> d
    org.apache.http.HttpHost host -> e
    org.apache.http.conn.scheme.SocketFactory socketFactory -> f
    void addRequest(org.apache.http.HttpRequest) -> a
    void sendRequests() -> a
    void finishedCurrentRequests() -> b
    void closeConnection() -> c
com.google.android.apps.analytics.PipelinedRequester$Callbacks -> com.google.android.apps.analytics.y:
    void pipelineModeChanged$1385ff() -> a
    void serverError(int) -> a
    void requestSent() -> b
com.google.android.apps.analytics.Referrer -> com.google.android.apps.analytics.r:
    java.lang.String referrer -> a
    long timeStamp -> b
    int visit -> c
    int index -> d
    java.lang.String getReferrerString() -> a
    long getTimeStamp() -> b
    int getVisit() -> c
    int getIndex() -> d
com.google.android.apps.analytics.Transaction -> com.google.android.apps.analytics.p:
    java.lang.String orderId -> a
    java.lang.String storeName -> b
    double totalCost -> c
    double totalTax -> d
    double shippingCost -> e
    java.lang.String getOrderId() -> a
    java.lang.String getStoreName() -> b
    double getTotalCost() -> c
    double getTotalTax() -> d
    double getShippingCost() -> e
com.google.android.apps.analytics.Transaction$Builder -> com.google.android.apps.analytics.z:
    java.lang.String orderId -> a
    java.lang.String storeName -> b
    double totalCost -> c
    double totalTax -> d
    double shippingCost -> e
    com.google.android.apps.analytics.Transaction$Builder setStoreName(java.lang.String) -> a
    com.google.android.apps.analytics.Transaction$Builder setTotalTax(double) -> a
    com.google.android.apps.analytics.Transaction$Builder setShippingCost(double) -> b
    java.lang.String access$000(com.google.android.apps.analytics.Transaction$Builder) -> a
    double access$100(com.google.android.apps.analytics.Transaction$Builder) -> b
    java.lang.String access$200(com.google.android.apps.analytics.Transaction$Builder) -> c
    double access$300(com.google.android.apps.analytics.Transaction$Builder) -> d
    double access$400(com.google.android.apps.analytics.Transaction$Builder) -> e
com.google.android.apps.analytics.Utils -> com.google.android.apps.analytics.w:
    java.lang.String addQueueTimeParameter(java.lang.String,long) -> a
com.pocketjourney.view.TransparentPanel -> com.pocketjourney.view.TransparentPanel:
    android.graphics.Paint innerPaint -> a
    60:65:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
org.acra.ACRA -> org.acra.ACRA:
    boolean DEV_LOGGING -> DEV_LOGGING
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String RES_NOTIF_ICON -> RES_NOTIF_ICON
    java.lang.String RES_NOTIF_TICKER_TEXT -> RES_NOTIF_TICKER_TEXT
    java.lang.String RES_NOTIF_TITLE -> RES_NOTIF_TITLE
    java.lang.String RES_NOTIF_TEXT -> RES_NOTIF_TEXT
    java.lang.String RES_DIALOG_ICON -> RES_DIALOG_ICON
    java.lang.String RES_DIALOG_TITLE -> RES_DIALOG_TITLE
    java.lang.String RES_DIALOG_TEXT -> RES_DIALOG_TEXT
    java.lang.String RES_DIALOG_COMMENT_PROMPT -> RES_DIALOG_COMMENT_PROMPT
    java.lang.String RES_DIALOG_OK_TOAST -> RES_DIALOG_OK_TOAST
    java.lang.String RES_TOAST_TEXT -> RES_TOAST_TEXT
    int NOTIF_CRASH_ID -> NOTIF_CRASH_ID
    java.lang.String PREF_DISABLE_ACRA -> PREF_DISABLE_ACRA
    java.lang.String PREF_ENABLE_ACRA -> PREF_ENABLE_ACRA
    java.lang.String PREF_ENABLE_SYSTEM_LOGS -> PREF_ENABLE_SYSTEM_LOGS
    java.lang.String PREF_ENABLE_DEVICE_ID -> PREF_ENABLE_DEVICE_ID
    java.lang.String PREF_USER_EMAIL_ADDRESS -> PREF_USER_EMAIL_ADDRESS
    java.lang.String PREF_ALWAYS_ACCEPT -> PREF_ALWAYS_ACCEPT
    android.app.Application mApplication -> mApplication
    org.acra.annotation.ReportsCrashes mReportsCrashes -> mReportsCrashes
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mPrefListener -> mPrefListener
    android.text.format.Time mAppStartDate -> mAppStartDate
    org.acra.ReportField[] DEFAULT_MAIL_REPORT_FIELDS -> DEFAULT_MAIL_REPORT_FIELDS
    org.acra.ReportField[] DEFAULT_REPORT_FIELDS -> DEFAULT_REPORT_FIELDS
    java.lang.String NULL_VALUE -> NULL_VALUE
    186:249:void init(android.app.Application) -> init
    257:301:void initAcra() -> initAcra
    304:319:void checkCrashResources() -> checkCrashResources
    331:336:android.content.SharedPreferences getACRASharedPreferences() -> getACRASharedPreferences
    346:346:org.acra.annotation.ReportsCrashes getConfig() -> getConfig
    77:77:void access$000() -> access$000
org.acra.ACRA$1 -> org.acra.b:
    201:220:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.acra.ACRA$2 -> org.acra.a:
    int[] $SwitchMap$org$acra$ReportingInteractionMode -> a
org.acra.ACRAConfigurationException -> org.acra.s:
org.acra.Compatibility -> org.acra.q:
    40:52:int getAPILevel() -> a
org.acra.ConfigurationInspector -> org.acra.l:
    android.util.SparseArray mHardKeyboardHiddenValues -> a
    android.util.SparseArray mKeyboardValues -> b
    android.util.SparseArray mKeyboardHiddenValues -> c
    android.util.SparseArray mNavigationValues -> d
    android.util.SparseArray mNavigationHiddenValues -> e
    android.util.SparseArray mOrientationValues -> f
    android.util.SparseArray mScreenLayoutValues -> g
    android.util.SparseArray mTouchScreenValues -> h
    android.util.SparseArray mUiModeValues -> i
    java.util.HashMap mValueArrays -> j
    120:139:java.lang.String toString(android.content.res.Configuration) -> a
    196:211:java.lang.String activeFlags(android.util.SparseArray,int) -> a
org.acra.CrashReportData -> org.acra.o:
    org.acra.CrashReportData defaults -> a
    java.lang.String lineSeparator -> b
    93:130:void dumpString(java.lang.StringBuilder,java.lang.String,boolean) -> a
    142:146:java.lang.String getProperty(org.acra.ReportField) -> a
    252:265:void load(java.io.InputStream) -> a
    269:282:boolean isEbcdic(java.io.BufferedInputStream) -> a
    314:472:void load(java.io.Reader) -> a
    534:552:void store(java.io.OutputStream,java.lang.String) -> a
org.acra.CrashReportDialog -> org.acra.CrashReportDialog:
    android.content.SharedPreferences prefs -> b
    android.widget.EditText userComment -> c
    android.widget.EditText userEmail -> d
    java.lang.String mReportFileName -> a
    62:189:void onCreate(android.os.Bundle) -> onCreate
    48:48:android.widget.EditText access$000(org.acra.CrashReportDialog) -> a
    48:48:android.content.SharedPreferences access$100(org.acra.CrashReportDialog) -> b
    48:48:android.widget.EditText access$200(org.acra.CrashReportDialog) -> c
org.acra.CrashReportDialog$1 -> org.acra.h:
    org.acra.CrashReportDialog this$0 -> a
    131:161:void onClick(android.view.View) -> onClick
org.acra.CrashReportDialog$2 -> org.acra.i:
    org.acra.CrashReportDialog this$0 -> a
    171:173:void onClick(android.view.View) -> onClick
org.acra.DeviceFeaturesCollector -> org.acra.r:
    35:61:java.lang.String getFeatures(android.content.Context) -> a
org.acra.DropBoxCollector -> org.acra.c:
    java.lang.String[] SYSTEM_TAGS -> a
    56:124:java.lang.String read(android.content.Context,java.lang.String[]) -> a
org.acra.DumpSysCollector -> org.acra.f:
    40:60:java.lang.String collectMemInfo() -> a
org.acra.ErrorReporter -> org.acra.ErrorReporter:
    boolean enabled -> a
    java.util.ArrayList mReportSenders -> b
    org.acra.CrashReportData mCrashProperties -> c
    java.util.Map mCustomParameters -> d
    java.lang.String SILENT_SUFFIX -> e
    java.lang.Thread$UncaughtExceptionHandler mDfltExceptionHandler -> f
    org.acra.ErrorReporter mInstanceSingleton -> g
    android.content.Context mContext -> h
    java.lang.String mInitialConfiguration -> i
    org.acra.ReportingInteractionMode mReportingInteractionMode -> j
    245:256:void approvePendingReports() -> a
    266:267:void addCustomData(java.lang.String,java.lang.String) -> addCustomData
    324:331:java.lang.String createCustomInfoString() -> g
    340:343:org.acra.ErrorReporter getInstance() -> b
    357:365:void init(android.content.Context) -> a
    614:664:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    681:761:org.acra.ErrorReporter$ReportsSenderWorker handleException(java.lang.Throwable,org.acra.ReportingInteractionMode) -> a
    807:833:void notifySendReport(java.lang.String) -> a
    847:863:void sendCrashReport$5e3fe510(org.acra.CrashReportData) -> a
    878:899:java.lang.String saveCrashReportFile(java.lang.String,org.acra.CrashReportData) -> a
    908:928:java.lang.String[] getCrashReportFilesList() -> h
    942:976:void checkAndSendReports(android.content.Context,boolean) -> a
    980:988:org.acra.CrashReportData loadCrashReport(android.content.Context,java.lang.String) -> a
    992:996:void deleteFile(android.content.Context,java.lang.String) -> b
    1005:1006:void setReportingInteractionMode(org.acra.ReportingInteractionMode) -> a
    1012:1046:void checkReportsOnApplicationStart() -> c
    1074:1075:void deletePendingReports() -> d
    1104:1117:void deletePendingReports$49601cee(boolean,int) -> a
    1123:1132:void disable() -> e
    1173:1173:boolean isApproved(java.lang.String) -> b
    1224:1225:void addReportSender(org.acra.sender.ReportSender) -> a
    1277:1278:void setAppStartDate(android.text.format.Time) -> a
    88:88:android.content.Context access$000() -> f
    88:88:void access$100(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
org.acra.ErrorReporter$1 -> org.acra.j:
    org.acra.ErrorReporter this$0 -> a
    714:717:void run() -> run
org.acra.ErrorReporter$2 -> org.acra.k:
    org.acra.ErrorReporter this$0 -> a
    920:920:boolean accept(java.io.File,java.lang.String) -> accept
org.acra.ErrorReporter$ReportsSenderWorker -> org.acra.p:
    java.lang.String mCommentedReportFileName -> a
    java.lang.String mUserComment -> b
    java.lang.String mUserEmail -> c
    boolean mSendOnlySilentReports -> d
    boolean mApprovePendingReports -> e
    org.acra.ErrorReporter this$0 -> f
    135:148:void run() -> run
    175:177:void setUserComment(java.lang.String,java.lang.String) -> a
    188:190:void setUserEmail(java.lang.String,java.lang.String) -> b
    196:197:void setApprovePendingReports() -> a
org.acra.LogCatCollector -> org.acra.n:
    59:97:java.lang.String collectLogCat(java.lang.String) -> a
org.acra.ReflectionCollector -> org.acra.g:
    39:54:java.lang.String collectConstants(java.lang.Class) -> a
    63:82:java.lang.String collectStaticGettersResults(java.lang.Class) -> b
org.acra.ReportField -> org.acra.m:
    org.acra.ReportField REPORT_ID -> a
    org.acra.ReportField APP_VERSION_CODE -> b
    org.acra.ReportField APP_VERSION_NAME -> c
    org.acra.ReportField PACKAGE_NAME -> d
    org.acra.ReportField FILE_PATH -> e
    org.acra.ReportField PHONE_MODEL -> f
    org.acra.ReportField ANDROID_VERSION -> g
    org.acra.ReportField BUILD -> h
    org.acra.ReportField BRAND -> i
    org.acra.ReportField PRODUCT -> j
    org.acra.ReportField TOTAL_MEM_SIZE -> k
    org.acra.ReportField AVAILABLE_MEM_SIZE -> l
    org.acra.ReportField CUSTOM_DATA -> m
    org.acra.ReportField STACK_TRACE -> n
    org.acra.ReportField INITIAL_CONFIGURATION -> o
    org.acra.ReportField CRASH_CONFIGURATION -> p
    org.acra.ReportField DISPLAY -> q
    org.acra.ReportField USER_COMMENT -> r
    org.acra.ReportField USER_APP_START_DATE -> s
    org.acra.ReportField USER_CRASH_DATE -> t
    org.acra.ReportField DUMPSYS_MEMINFO -> u
    org.acra.ReportField DROPBOX -> v
    org.acra.ReportField LOGCAT -> w
    org.acra.ReportField EVENTSLOG -> x
    org.acra.ReportField RADIOLOG -> y
    org.acra.ReportField IS_SILENT -> z
    org.acra.ReportField DEVICE_ID -> A
    org.acra.ReportField INSTALLATION_ID -> B
    org.acra.ReportField USER_EMAIL -> C
    org.acra.ReportField DEVICE_FEATURES -> D
    org.acra.ReportField ENVIRONMENT -> E
    org.acra.ReportField SETTINGS_SYSTEM -> F
    org.acra.ReportField SETTINGS_SECURE -> G
    org.acra.ReportField SHARED_PREFERENCES -> H
    org.acra.ReportField[] $VALUES -> I
    26:26:org.acra.ReportField[] values() -> values
    26:26:org.acra.ReportField valueOf(java.lang.String) -> valueOf
org.acra.ReportingInteractionMode -> org.acra.ReportingInteractionMode:
    org.acra.ReportingInteractionMode SILENT -> SILENT
    org.acra.ReportingInteractionMode NOTIFICATION -> NOTIFICATION
    org.acra.ReportingInteractionMode TOAST -> TOAST
    org.acra.ReportingInteractionMode[] $VALUES -> $VALUES
    30:30:org.acra.ReportingInteractionMode[] values() -> values
    30:30:org.acra.ReportingInteractionMode valueOf(java.lang.String) -> valueOf
org.acra.SettingsCollector -> org.acra.e:
    45:65:java.lang.String collectSystemSettings(android.content.Context) -> a
    78:95:java.lang.String collectSecureSettings(android.content.Context) -> b
org.acra.SharedPreferencesCollector -> org.acra.d:
    13:42:java.lang.String collect(android.content.Context) -> a
org.acra.annotation.ReportsCrashes -> org.acra.c.a:
    java.lang.String formKey() -> a
    java.lang.String formUri() -> b
    org.acra.ReportingInteractionMode mode() -> c
    int resDialogCommentPrompt() -> d
    int resDialogEmailPrompt() -> e
    int resDialogIcon() -> f
    int resDialogOkToast() -> g
    int resDialogText() -> h
    int resDialogTitle() -> i
    int resNotifIcon() -> j
    int resNotifText() -> k
    int resNotifTickerText() -> l
    int resNotifTitle() -> m
    int resToastText() -> n
    java.lang.String sharedPreferencesName() -> o
    int sharedPreferencesMode() -> p
    boolean includeDropBoxSystemTags() -> q
    java.lang.String[] additionalDropBoxTags() -> r
    int dropboxCollectionMinutes() -> s
    java.lang.String[] logcatArguments() -> t
    java.lang.String formUriBasicAuthLogin() -> u
    java.lang.String formUriBasicAuthPassword() -> v
    org.acra.ReportField[] customReportContent() -> w
    java.lang.String mailTo() -> x
    boolean deleteUnapprovedReportsOnApplicationStart() -> y
    int socketTimeout() -> z
    boolean forceCloseDialogAfterToast() -> A
    java.lang.String[] additionalSharedPreferences() -> B
org.acra.sender.EmailIntentSender -> org.acra.b.e:
    android.content.Context mContext -> a
    41:51:void send(org.acra.CrashReportData) -> a
    54:64:java.lang.String buildBody(org.acra.CrashReportData) -> b
org.acra.sender.GoogleFormSender -> org.acra.b.f:
    android.net.Uri mFormUri -> a
    52:64:void send(org.acra.CrashReportData) -> a
org.acra.sender.GoogleFormSender$1 -> org.acra.b.c:
    int[] $SwitchMap$org$acra$ReportField -> a
org.acra.sender.HttpPostSender -> org.acra.b.d:
    android.net.Uri mFormUri -> a
    java.util.Map mMapping -> b
    100:106:void send(org.acra.CrashReportData) -> a
org.acra.sender.ReportSender -> org.acra.b.b:
    void send(org.acra.CrashReportData) -> a
org.acra.sender.ReportSenderException -> org.acra.b.a:
org.acra.util.BoundedLinkedList -> org.acra.a.c:
    int maxSize -> a
    46:49:boolean add(java.lang.Object) -> add
    59:63:void add(int,java.lang.Object) -> add
    72:77:boolean addAll(java.util.Collection) -> addAll
    93:93:boolean addAll(int,java.util.Collection) -> addAll
    104:104:void addFirst(java.lang.Object) -> addFirst
    114:115:void addLast(java.lang.Object) -> addLast
    124:130:java.lang.String toString() -> toString
org.acra.util.FakeSocketFactory -> org.acra.a.d:
    javax.net.ssl.SSLContext sslcontext -> a
    28:32:javax.net.ssl.SSLContext createEasySSLContext() -> a
    37:40:javax.net.ssl.SSLContext getSSLContext() -> b
    46:63:java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    68:68:java.net.Socket createSocket() -> createSocket
    73:73:boolean isSecure(java.net.Socket) -> isSecure
    79:79:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.acra.util.HttpRequest -> org.acra.a.b:
    org.apache.http.impl.client.DefaultHttpClient httpClient -> a
    org.apache.http.protocol.HttpContext localContext -> b
    org.apache.http.client.methods.HttpPost httpPost -> c
    org.apache.http.client.methods.HttpGet httpGet -> e
    org.apache.http.auth.UsernamePasswordCredentials creds -> d
org.acra.util.HttpUtils -> org.acra.a.a:
    43:60:void doPost(java.util.Map,java.net.URL,java.lang.String,java.lang.String) -> a
    63:63:boolean isNull(java.lang.String) -> a
org.acra.util.Installation -> org.acra.a.f:
    java.lang.String sID -> a
    31:41:java.lang.String id(android.content.Context) -> a
    45:52:java.lang.String readInstallationFile(java.io.File) -> a
org.acra.util.NaiveTrustManager -> org.acra.a.e:
    34:34:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    47:47:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    59:59:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
uk.org.ngo.squeezer.IServiceCallback -> uk.org.ngo.squeezer.IServiceCallback:
    void onMusicChanged() -> onMusicChanged
    void onPlayerChanged(java.lang.String,java.lang.String) -> onPlayerChanged
    void onConnectionChanged(boolean,boolean) -> onConnectionChanged
    void onPlayStatusChanged(boolean) -> onPlayStatusChanged
    void onTimeInSongChange(int,int) -> onTimeInSongChange
uk.org.ngo.squeezer.IServiceCallback$Stub -> uk.org.ngo.squeezer.IServiceCallback$Stub:
    23:30:uk.org.ngo.squeezer.IServiceCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:90:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.IServiceCallback$Stub$Proxy -> uk.org.ngo.squeezer.IServiceCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    101:101:android.os.IBinder asBinder() -> asBinder
    109:115:void onMusicChanged() -> onMusicChanged
    122:130:void onPlayerChanged(java.lang.String,java.lang.String) -> onPlayerChanged
    137:145:void onConnectionChanged(boolean,boolean) -> onConnectionChanged
    150:157:void onPlayStatusChanged(boolean) -> onPlayStatusChanged
    162:170:void onTimeInSongChange(int,int) -> onTimeInSongChange
uk.org.ngo.squeezer.IconRowAdapter -> uk.org.ngo.squeezer.IconRowAdapter:
    android.app.Activity activity -> a
    int rowLayout -> b
    int iconId -> c
    int textId -> d
    int[] images -> e
    java.lang.String[] items -> f
    41:41:int getCount() -> getCount
    49:49:java.lang.String getItem(int) -> getItem
    53:53:long getItemId(int) -> getItemId
    63:70:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    74:74:android.app.Activity getActivity() -> getActivity
    31:31:java.lang.Object getItem(int) -> getItem
uk.org.ngo.squeezer.IntEditTextPreference -> uk.org.ngo.squeezer.IntEditTextPreference:
    39:39:java.lang.String getPersistedString(java.lang.String) -> getPersistedString
    44:44:boolean persistString(java.lang.String) -> persistString
uk.org.ngo.squeezer.ReflectUtil -> uk.org.ngo.squeezer.ReflectUtil:
    43:48:java.lang.Class getGenericClass(java.lang.Class,java.lang.Class,int) -> getGenericClass
    68:84:java.lang.reflect.Type[] genericTypeResolver(java.lang.Class,java.lang.Class) -> genericTypeResolver
    99:113:java.lang.reflect.Type[] genericInterfaceResolver(java.lang.Class,java.lang.Class,java.lang.reflect.Type[]) -> genericInterfaceResolver
    126:147:java.lang.reflect.Type[] mapTypeArguments(java.lang.Class,java.lang.reflect.Type,java.lang.reflect.Type[]) -> mapTypeArguments
uk.org.ngo.squeezer.RepeatingImageButton -> uk.org.ngo.squeezer.RepeatingImageButton:
    long mStartTime -> a
    int mRepeatCount -> b
    uk.org.ngo.squeezer.RepeatingImageButton$RepeatListener mListener -> c
    long mInterval -> d
    java.lang.Runnable mRepeater -> e
    65:68:boolean performLongClick() -> performLongClick
    73:81:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    86:96:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    109:113:void doRepeat(boolean) -> doRepeat
    31:31:void access$000(uk.org.ngo.squeezer.RepeatingImageButton,boolean) -> access$000
    31:31:long access$100(uk.org.ngo.squeezer.RepeatingImageButton) -> access$100
uk.org.ngo.squeezer.RepeatingImageButton$1 -> uk.org.ngo.squeezer.RepeatingImageButton$1:
    uk.org.ngo.squeezer.RepeatingImageButton this$0 -> a
    101:105:void run() -> run
uk.org.ngo.squeezer.RepeatingImageButton$RepeatListener -> uk.org.ngo.squeezer.RepeatingImageButton$RepeatListener:
    void onRepeat(android.view.View,long,int) -> onRepeat
uk.org.ngo.squeezer.SettingsActivity -> uk.org.ngo.squeezer.SettingsActivity:
    java.lang.String TAG -> a
    uk.org.ngo.squeezer.service.ISqueezeService serviceStub -> b
    android.preference.EditTextPreference addrPref -> c
    android.content.ServiceConnection serviceConnection -> d
    54:85:void onCreate(android.os.Bundle) -> onCreate
    89:93:void onResume() -> onResume
    97:99:void onPause() -> onPause
    102:107:void updateAddressSummary(java.lang.String) -> updateAddressSummary
    110:119:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    123:125:void show(android.content.Context) -> show
    36:36:uk.org.ngo.squeezer.service.ISqueezeService access$002(uk.org.ngo.squeezer.SettingsActivity,uk.org.ngo.squeezer.service.ISqueezeService) -> access$002
    36:36:uk.org.ngo.squeezer.service.ISqueezeService access$000(uk.org.ngo.squeezer.SettingsActivity) -> access$000
uk.org.ngo.squeezer.SettingsActivity$1 -> uk.org.ngo.squeezer.SettingsActivity$1:
    uk.org.ngo.squeezer.SettingsActivity this$0 -> a
    45:46:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    48:49:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
uk.org.ngo.squeezer.SettingsActivity$2 -> uk.org.ngo.squeezer.SettingsActivity$2:
    uk.org.ngo.squeezer.SettingsActivity this$0 -> a
    71:77:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
uk.org.ngo.squeezer.Squeezer -> uk.org.ngo.squeezer.Squeezer:
    uk.org.ngo.squeezer.Squeezer instance -> a
    38:40:void onCreate() -> onCreate
uk.org.ngo.squeezer.SqueezerActivity -> uk.org.ngo.squeezer.SqueezerActivity:
    java.util.concurrent.atomic.AtomicBoolean isConnected -> e
    java.util.concurrent.atomic.AtomicBoolean isPlaying -> f
    java.util.concurrent.atomic.AtomicReference currentSong -> g
    java.util.concurrent.atomic.AtomicBoolean connectInProgress -> h
    android.widget.TextView albumText -> i
    android.widget.TextView artistText -> j
    android.widget.TextView trackText -> k
    android.widget.TextView currentTime -> l
    android.widget.TextView totalTime -> m
    android.widget.ImageButton homeButton -> n
    android.widget.ImageButton curPlayListButton -> o
    android.widget.ImageButton playPauseButton -> p
    android.widget.ImageButton nextButton -> q
    android.widget.ImageButton prevButton -> r
    android.widget.ImageView albumArt -> s
    android.widget.SeekBar seekBar -> t
    uk.org.ngo.squeezer.framework.SqueezerIconUpdater iconUpdater -> u
    android.content.BroadcastReceiver broadcastReceiver -> v
    uk.org.ngo.squeezer.dialogs.ConnectingDialog connectingDialog -> w
    boolean updateSeekBar -> x
    int secondsIn -> y
    int secondsTotal -> z
    android.os.Handler uiThreadHandler -> A
    com.google.android.apps.analytics.GoogleAnalyticsTracker tracker -> B
    uk.org.ngo.squeezer.IServiceCallback serviceCallback -> C
    127:127:android.os.Handler getUIThreadHandler() -> getUIThreadHandler
    132:275:void onCreate(android.os.Bundle) -> onCreate
    279:317:void setConnected(boolean,boolean) -> setConnected
    320:331:void updatePlayPauseIcon() -> updatePlayPauseIcon
    335:344:void setTitleForPlayer(java.lang.String) -> setTitleForPlayer
    348:360:void onServiceConnected() -> onServiceConnected
    364:380:void onResume() -> onResume
    387:405:void updateUIFromServiceState() -> updateUIFromServiceState
    408:416:void updateTimeDisplayTo(int,int) -> updateTimeDisplayTo
    420:424:void updateSongInfoFromService() -> updateSongInfoFromService
    427:436:void updateSongInfo(uk.org.ngo.squeezer.model.SqueezerSong) -> updateSongInfo
    440:442:void updateAlbumArtIfNeeded(uk.org.ngo.squeezer.model.SqueezerSong) -> updateAlbumArtIfNeeded
    445:453:int getSecondsElapsed() -> getSecondsElapsed
    457:465:int getSecondsTotal() -> getSecondsTotal
    469:477:boolean setSecondsElapsed(int) -> setSecondsElapsed
    481:489:uk.org.ngo.squeezer.model.SqueezerSong getCurrentSong() -> getCurrentSong
    494:502:boolean isConnected() -> isConnected
    506:514:boolean canPowerOn() -> canPowerOn
    518:526:boolean canPowerOff() -> canPowerOff
    531:542:void onPause() -> onPause
    546:547:boolean onSearchRequested() -> onSearchRequested
    552:553:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    558:579:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    584:622:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    627:632:java.lang.String getConfiguredCliIpPort() -> getConfiguredCliIpPort
    637:638:boolean isAutoConnect() -> isAutoConnect
    643:653:void onUserInitiatesConnect() -> onUserInitiatesConnect
    656:689:void startVisibleConnection() -> startVisibleConnection
    692:696:void show(android.content.Context) -> show
    700:707:void onDestroy() -> onDestroy
    61:61:java.lang.String access$000(uk.org.ngo.squeezer.SqueezerActivity) -> access$000
    61:61:boolean access$100(uk.org.ngo.squeezer.SqueezerActivity) -> access$100
    61:61:java.lang.String access$200(uk.org.ngo.squeezer.SqueezerActivity) -> access$200
    61:61:void access$300(uk.org.ngo.squeezer.SqueezerActivity) -> access$300
    61:61:int access$400(uk.org.ngo.squeezer.SqueezerActivity) -> access$400
    61:61:int access$500(uk.org.ngo.squeezer.SqueezerActivity) -> access$500
    61:61:void access$600(uk.org.ngo.squeezer.SqueezerActivity,int,int) -> access$600
    61:61:java.util.concurrent.atomic.AtomicBoolean access$700(uk.org.ngo.squeezer.SqueezerActivity) -> access$700
    61:61:java.lang.String access$800(uk.org.ngo.squeezer.SqueezerActivity) -> access$800
    61:61:void access$900(uk.org.ngo.squeezer.SqueezerActivity) -> access$900
    61:61:java.lang.String access$1000(uk.org.ngo.squeezer.SqueezerActivity) -> access$1000
    61:61:uk.org.ngo.squeezer.model.SqueezerSong access$1100(uk.org.ngo.squeezer.SqueezerActivity) -> access$1100
    61:61:android.widget.TextView access$1200(uk.org.ngo.squeezer.SqueezerActivity) -> access$1200
    61:61:boolean access$1302(uk.org.ngo.squeezer.SqueezerActivity,boolean) -> access$1302
    61:61:boolean access$1400(uk.org.ngo.squeezer.SqueezerActivity,int) -> access$1400
    61:61:android.widget.ImageButton access$1500(uk.org.ngo.squeezer.SqueezerActivity) -> access$1500
    61:61:java.util.concurrent.atomic.AtomicBoolean access$1600(uk.org.ngo.squeezer.SqueezerActivity) -> access$1600
    61:61:void access$1700(uk.org.ngo.squeezer.SqueezerActivity) -> access$1700
    61:61:java.lang.String access$1800(uk.org.ngo.squeezer.SqueezerActivity) -> access$1800
    61:61:boolean access$1900(uk.org.ngo.squeezer.SqueezerActivity) -> access$1900
    61:61:java.util.concurrent.atomic.AtomicBoolean access$2000(uk.org.ngo.squeezer.SqueezerActivity) -> access$2000
    61:61:java.lang.String access$2100(uk.org.ngo.squeezer.SqueezerActivity) -> access$2100
    61:61:uk.org.ngo.squeezer.dialogs.ConnectingDialog access$2202(uk.org.ngo.squeezer.SqueezerActivity,uk.org.ngo.squeezer.dialogs.ConnectingDialog) -> access$2202
    61:61:uk.org.ngo.squeezer.dialogs.ConnectingDialog access$2200(uk.org.ngo.squeezer.SqueezerActivity) -> access$2200
    61:61:java.lang.String access$2300(uk.org.ngo.squeezer.SqueezerActivity) -> access$2300
    61:61:java.lang.String access$2400(uk.org.ngo.squeezer.SqueezerActivity) -> access$2400
    61:61:java.lang.String access$2500(uk.org.ngo.squeezer.SqueezerActivity) -> access$2500
    61:61:void access$2600(uk.org.ngo.squeezer.SqueezerActivity,boolean,boolean) -> access$2600
    61:61:android.os.Handler access$2700(uk.org.ngo.squeezer.SqueezerActivity) -> access$2700
    61:61:java.lang.String access$2800(uk.org.ngo.squeezer.SqueezerActivity) -> access$2800
    61:61:void access$2900(uk.org.ngo.squeezer.SqueezerActivity,java.lang.String) -> access$2900
    61:61:void access$3000(uk.org.ngo.squeezer.SqueezerActivity) -> access$3000
    61:61:void access$3100(uk.org.ngo.squeezer.SqueezerActivity) -> access$3100
    61:61:int access$402(uk.org.ngo.squeezer.SqueezerActivity,int) -> access$402
    61:61:int access$502(uk.org.ngo.squeezer.SqueezerActivity,int) -> access$502
uk.org.ngo.squeezer.SqueezerActivity$1 -> uk.org.ngo.squeezer.SqueezerActivity$1:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    87:98:void onReceive(android.content.Context,android.content.Intent) -> onReceive
uk.org.ngo.squeezer.SqueezerActivity$10 -> uk.org.ngo.squeezer.SqueezerActivity$10:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    235:240:void onClick(android.view.View) -> onClick
uk.org.ngo.squeezer.SqueezerActivity$11 -> uk.org.ngo.squeezer.SqueezerActivity$11:
    uk.org.ngo.squeezer.model.SqueezerSong seekingSong -> a
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> b
    248:251:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    255:257:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    263:270:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
uk.org.ngo.squeezer.SqueezerActivity$12 -> uk.org.ngo.squeezer.SqueezerActivity$12:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    322:329:void run() -> run
uk.org.ngo.squeezer.SqueezerActivity$13 -> uk.org.ngo.squeezer.SqueezerActivity$13:
    java.lang.String val$playerName -> a
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> b
    337:342:void run() -> run
uk.org.ngo.squeezer.SqueezerActivity$14 -> uk.org.ngo.squeezer.SqueezerActivity$14:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    352:353:void run() -> run
uk.org.ngo.squeezer.SqueezerActivity$15 -> uk.org.ngo.squeezer.SqueezerActivity$15:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    659:687:void run() -> run
uk.org.ngo.squeezer.SqueezerActivity$16 -> uk.org.ngo.squeezer.SqueezerActivity$16:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    713:719:void onConnectionChanged(boolean,boolean) -> onConnectionChanged
    723:725:void onPlayerChanged(java.lang.String,java.lang.String) -> onPlayerChanged
    728:733:void onMusicChanged() -> onMusicChanged
    737:739:void onPlayStatusChanged(boolean) -> onPlayStatusChanged
    743:746:void onTimeInSongChange(int,int) -> onTimeInSongChange
uk.org.ngo.squeezer.SqueezerActivity$16$1 -> uk.org.ngo.squeezer.SqueezerActivity$16$1:
    boolean val$isConnected -> a
    boolean val$postConnect -> b
    uk.org.ngo.squeezer.SqueezerActivity$16 this$1 -> c
    716:717:void run() -> run
uk.org.ngo.squeezer.SqueezerActivity$16$2 -> uk.org.ngo.squeezer.SqueezerActivity$16$2:
    uk.org.ngo.squeezer.SqueezerActivity$16 this$1 -> a
    730:731:void run() -> run
uk.org.ngo.squeezer.SqueezerActivity$2 -> uk.org.ngo.squeezer.SqueezerActivity$2:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    117:120:void handleMessage(android.os.Message) -> handleMessage
uk.org.ngo.squeezer.SqueezerActivity$3 -> uk.org.ngo.squeezer.SqueezerActivity$3:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    165:167:void onClick(android.view.View) -> onClick
uk.org.ngo.squeezer.SqueezerActivity$4 -> uk.org.ngo.squeezer.SqueezerActivity$4:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    172:174:void onClick(android.view.View) -> onClick
uk.org.ngo.squeezer.SqueezerActivity$5 -> uk.org.ngo.squeezer.SqueezerActivity$5:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    179:192:void onClick(android.view.View) -> onClick
uk.org.ngo.squeezer.SqueezerActivity$6 -> uk.org.ngo.squeezer.SqueezerActivity$6:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    197:201:void onClick(android.view.View) -> onClick
uk.org.ngo.squeezer.SqueezerActivity$7 -> uk.org.ngo.squeezer.SqueezerActivity$7:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    206:210:void onClick(android.view.View) -> onClick
uk.org.ngo.squeezer.SqueezerActivity$8 -> uk.org.ngo.squeezer.SqueezerActivity$8:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    215:220:void onClick(android.view.View) -> onClick
uk.org.ngo.squeezer.SqueezerActivity$9 -> uk.org.ngo.squeezer.SqueezerActivity$9:
    uk.org.ngo.squeezer.SqueezerActivity this$0 -> a
    225:230:void onClick(android.view.View) -> onClick
uk.org.ngo.squeezer.SqueezerHomeActivity -> uk.org.ngo.squeezer.SqueezerHomeActivity:
    android.widget.ListView listView -> e
    android.widget.AdapterView$OnItemClickListener onHomeItemClick -> f
    37:42:void onCreate(android.os.Bundle) -> onCreate
    46:46:void onServiceConnected() -> onServiceConnected
    49:57:void setHomeMenu() -> setHomeMenu
    95:99:void show(android.content.Context) -> show
uk.org.ngo.squeezer.SqueezerHomeActivity$1 -> uk.org.ngo.squeezer.SqueezerHomeActivity$1:
    uk.org.ngo.squeezer.SqueezerHomeActivity this$0 -> a
    67:80:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
uk.org.ngo.squeezer.SqueezerMusicActivity -> uk.org.ngo.squeezer.SqueezerMusicActivity:
    java.lang.String TAG -> e
    boolean canRandomplay -> f
    android.widget.ListView listView -> g
    android.widget.AdapterView$OnItemClickListener onMusicItemClick -> h
    54:59:void onCreate(android.os.Bundle) -> onCreate
    63:64:void onServiceConnected() -> onServiceConnected
    67:98:void setMusicMenu() -> setMusicMenu
    137:139:void show(android.content.Context) -> show
    37:37:boolean access$000(uk.org.ngo.squeezer.SqueezerMusicActivity) -> access$000
uk.org.ngo.squeezer.SqueezerMusicActivity$1 -> uk.org.ngo.squeezer.SqueezerMusicActivity$1:
    uk.org.ngo.squeezer.SqueezerMusicActivity this$0 -> a
    103:133:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
uk.org.ngo.squeezer.SqueezerRandomplayActivity -> uk.org.ngo.squeezer.SqueezerRandomplayActivity:
    java.lang.String TAG -> e
    android.widget.ListView listView -> f
    android.widget.AdapterView$OnItemClickListener onRandomplayItemClick -> g
    41:46:void onCreate(android.os.Bundle) -> onCreate
    50:50:void onServiceConnected() -> onServiceConnected
    54:60:void setRandomplayMenu() -> setRandomplayMenu
    79:81:void show(android.content.Context) -> show
    34:34:java.lang.String access$000(uk.org.ngo.squeezer.SqueezerRandomplayActivity) -> access$000
uk.org.ngo.squeezer.SqueezerRandomplayActivity$1 -> uk.org.ngo.squeezer.SqueezerRandomplayActivity$1:
    uk.org.ngo.squeezer.SqueezerRandomplayActivity this$0 -> a
    64:73:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
uk.org.ngo.squeezer.SqueezerRandomplayActivity$RandomPlayType -> uk.org.ngo.squeezer.SqueezerRandomplayActivity$RandomPlayType:
    uk.org.ngo.squeezer.SqueezerRandomplayActivity$RandomPlayType tracks -> a
    uk.org.ngo.squeezer.SqueezerRandomplayActivity$RandomPlayType albums -> b
    uk.org.ngo.squeezer.SqueezerRandomplayActivity$RandomPlayType contributors -> c
    uk.org.ngo.squeezer.SqueezerRandomplayActivity$RandomPlayType year -> d
    uk.org.ngo.squeezer.SqueezerRandomplayActivity$RandomPlayType[] $VALUES -> e
    83:83:uk.org.ngo.squeezer.SqueezerRandomplayActivity$RandomPlayType[] values() -> values
    83:83:uk.org.ngo.squeezer.SqueezerRandomplayActivity$RandomPlayType valueOf(java.lang.String) -> valueOf
uk.org.ngo.squeezer.SqueezerSearchActivity -> uk.org.ngo.squeezer.SqueezerSearchActivity:
    android.widget.TextView loadingLabel -> e
    android.widget.ExpandableListView resultsExpandableListView -> f
    uk.org.ngo.squeezer.SqueezerSearchAdapter searchResultsAdapter -> g
    java.lang.String searchString -> h
    uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback artistsCallback -> i
    uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback albumsCallback -> j
    uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback genresCallback -> k
    uk.org.ngo.squeezer.itemlists.IServiceSongListCallback songsCallback -> l
    60:121:void onCreate(android.os.Bundle) -> onCreate
    125:129:void registerCallback() -> registerCallback
    133:137:void unregisterCallback() -> unregisterCallback
    141:155:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    160:162:void onServiceConnected() -> onServiceConnected
    166:174:void onPause() -> onPause
    177:180:void show(android.content.Context) -> show
    186:190:void orderPage(int) -> orderPage
    193:200:void doSearch(java.lang.String) -> doSearch
    203:204:void doSearch() -> doSearch
    207:214:void onItemsReceived(int,int,java.util.List) -> onItemsReceived
    52:52:void access$000(uk.org.ngo.squeezer.SqueezerSearchActivity,java.lang.String) -> access$000
    52:52:uk.org.ngo.squeezer.SqueezerSearchAdapter access$100(uk.org.ngo.squeezer.SqueezerSearchActivity) -> access$100
    52:52:java.lang.String access$200(uk.org.ngo.squeezer.SqueezerSearchActivity) -> access$200
    52:52:android.widget.TextView access$300(uk.org.ngo.squeezer.SqueezerSearchActivity) -> access$300
    52:52:android.widget.ExpandableListView access$400(uk.org.ngo.squeezer.SqueezerSearchActivity) -> access$400
    52:52:void access$500(uk.org.ngo.squeezer.SqueezerSearchActivity,int,int,java.util.List) -> access$500
uk.org.ngo.squeezer.SqueezerSearchActivity$1 -> uk.org.ngo.squeezer.SqueezerSearchActivity$1:
    android.widget.EditText val$searchCriteriaText -> a
    uk.org.ngo.squeezer.SqueezerSearchActivity this$0 -> b
    73:77:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
uk.org.ngo.squeezer.SqueezerSearchActivity$2 -> uk.org.ngo.squeezer.SqueezerSearchActivity$2:
    android.widget.EditText val$searchCriteriaText -> a
    uk.org.ngo.squeezer.SqueezerSearchActivity this$0 -> b
    83:86:void onClick(android.view.View) -> onClick
uk.org.ngo.squeezer.SqueezerSearchActivity$3 -> uk.org.ngo.squeezer.SqueezerSearchActivity$3:
    uk.org.ngo.squeezer.SqueezerSearchActivity this$0 -> a
    91:104:boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
uk.org.ngo.squeezer.SqueezerSearchActivity$4 -> uk.org.ngo.squeezer.SqueezerSearchActivity$4:
    uk.org.ngo.squeezer.SqueezerSearchActivity this$0 -> a
    110:117:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
uk.org.ngo.squeezer.SqueezerSearchActivity$5 -> uk.org.ngo.squeezer.SqueezerSearchActivity$5:
    int val$count -> a
    int val$start -> b
    java.util.List val$items -> c
    uk.org.ngo.squeezer.SqueezerSearchActivity this$0 -> d
    209:212:void run() -> run
uk.org.ngo.squeezer.SqueezerSearchActivity$6 -> uk.org.ngo.squeezer.SqueezerSearchActivity$6:
    uk.org.ngo.squeezer.SqueezerSearchActivity this$0 -> a
    219:220:void onArtistsReceived(int,int,java.util.List) -> onArtistsReceived
uk.org.ngo.squeezer.SqueezerSearchActivity$7 -> uk.org.ngo.squeezer.SqueezerSearchActivity$7:
    uk.org.ngo.squeezer.SqueezerSearchActivity this$0 -> a
    225:226:void onAlbumsReceived(int,int,java.util.List) -> onAlbumsReceived
uk.org.ngo.squeezer.SqueezerSearchActivity$8 -> uk.org.ngo.squeezer.SqueezerSearchActivity$8:
    uk.org.ngo.squeezer.SqueezerSearchActivity this$0 -> a
    231:232:void onGenresReceived(int,int,java.util.List) -> onGenresReceived
uk.org.ngo.squeezer.SqueezerSearchActivity$9 -> uk.org.ngo.squeezer.SqueezerSearchActivity$9:
    uk.org.ngo.squeezer.SqueezerSearchActivity this$0 -> a
    237:238:void onSongsReceived(int,int,java.util.List) -> onSongsReceived
uk.org.ngo.squeezer.SqueezerSearchAdapter -> uk.org.ngo.squeezer.SqueezerSearchAdapter:
    int[] groupIcons -> a
    uk.org.ngo.squeezer.SqueezerSearchActivity activity -> b
    uk.org.ngo.squeezer.framework.SqueezerItemAdapter[] childAdapters -> c
    java.util.Map childAdapterMap -> d
    78:80:void clear() -> clear
    84:88:void updateItems(int,int,java.util.List) -> updateItems
    98:99:void setupContextMenu(android.view.ContextMenu,int,int) -> setupContextMenu
    102:103:void doItemContext(android.view.MenuItem,int,int) -> doItemContext
    106:106:uk.org.ngo.squeezer.framework.SqueezerItem getChild(int,int) -> getChild
    110:110:long getChildId(int,int) -> getChildId
    114:114:android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    118:118:int getChildrenCount(int) -> getChildrenCount
    122:122:java.lang.Object getGroup(int) -> getGroup
    126:126:int getGroupCount() -> getGroupCount
    130:130:long getGroupId(int) -> getGroupId
    134:142:android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    146:146:boolean hasStableIds() -> hasStableIds
    150:150:boolean isChildSelectable(int,int) -> isChildSelectable
    45:45:java.lang.Object getChild(int,int) -> getChild
uk.org.ngo.squeezer.SqueezerSearchAdapter$1 -> uk.org.ngo.squeezer.SqueezerSearchAdapter$1:
    uk.org.ngo.squeezer.SqueezerSearchAdapter this$0 -> a
    60:60:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.model.SqueezerSong) -> getAdapterView
    57:57:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
uk.org.ngo.squeezer.SqueezerSearchAdapter$2 -> uk.org.ngo.squeezer.SqueezerSearchAdapter$2:
    uk.org.ngo.squeezer.SqueezerSearchAdapter this$0 -> a
    66:66:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.model.SqueezerAlbum) -> getAdapterView
    63:63:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
uk.org.ngo.squeezer.Util -> uk.org.ngo.squeezer.Util:
    java.lang.StringBuilder sFormatBuilder -> a
    java.util.Formatter sFormatter -> b
    java.lang.Object[] sTimeArgs -> c
    43:44:int getAtomicInteger(java.util.concurrent.atomic.AtomicReference,int) -> getAtomicInteger
    71:78:boolean atomicSongUpdated(java.util.concurrent.atomic.AtomicReference,uk.org.ngo.squeezer.model.SqueezerSong) -> atomicSongUpdated
    82:91:int parseDecimalInt(java.lang.String,int) -> parseDecimalInt
    96:96:int parseDecimalIntOrZero(java.lang.String) -> parseDecimalIntOrZero
    107:115:java.lang.String makeTimeString(long) -> makeTimeString
    120:122:java.lang.String encode(java.lang.String) -> encode
    128:130:java.lang.String decode(java.lang.String) -> decode
    136:140:android.view.View getListItemView(android.app.Activity,android.view.View,java.lang.String) -> getListItemView
    145:150:android.view.View getSpinnerItemView(android.app.Activity,android.view.View,java.lang.String) -> getSpinnerItemView
uk.org.ngo.squeezer.VolumePanel -> uk.org.ngo.squeezer.VolumePanel:
    android.content.Context mContext -> a
    android.widget.Toast mToast -> b
    android.view.View mView -> c
    android.widget.TextView mMessage -> d
    android.widget.TextView mAdditionalMessage -> e
    android.widget.ImageView mLargeStreamIcon -> f
    android.widget.ProgressBar mLevel -> g
    63:66:void postVolumeChanged(int,java.lang.String) -> postVolumeChanged
    69:70:void onVolumeChanged(int,java.lang.String) -> onVolumeChanged
    73:87:void onShowVolumeChanged(int,java.lang.String) -> onShowVolumeChanged
    92:93:void onFreeResources() -> onFreeResources
    97:109:void handleMessage(android.os.Message) -> handleMessage
uk.org.ngo.squeezer.dialogs.AboutDialog -> uk.org.ngo.squeezer.dialogs.AboutDialog:
    19:35:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
uk.org.ngo.squeezer.dialogs.ConnectingDialog -> uk.org.ngo.squeezer.dialogs.ConnectingDialog:
    15:21:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    25:36:uk.org.ngo.squeezer.dialogs.ConnectingDialog addTo(android.support.v4.app.FragmentActivity,java.lang.String) -> addTo
uk.org.ngo.squeezer.dialogs.EnableWifiDialog -> uk.org.ngo.squeezer.dialogs.EnableWifiDialog:
    17:30:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
uk.org.ngo.squeezer.dialogs.EnableWifiDialog$1 -> uk.org.ngo.squeezer.dialogs.EnableWifiDialog$1:
    uk.org.ngo.squeezer.dialogs.EnableWifiDialog this$0 -> a
    22:27:void onClick(android.content.DialogInterface,int) -> onClick
uk.org.ngo.squeezer.framework.SqueezerArtworkItem -> uk.org.ngo.squeezer.framework.SqueezerArtworkItem:
    java.lang.String artwork_track_id -> a
    24:24:java.lang.String getArtwork_track_id() -> getArtwork_track_id
    25:25:void setArtwork_track_id(java.lang.String) -> setArtwork_track_id
uk.org.ngo.squeezer.framework.SqueezerBaseActivity -> uk.org.ngo.squeezer.framework.SqueezerBaseActivity:
    uk.org.ngo.squeezer.service.ISqueezeService service -> e
    android.os.Handler uiThreadHandler -> f
    android.content.ServiceConnection serviceConnection -> g
    void onServiceConnected() -> onServiceConnected
    46:46:java.lang.String getTag() -> getTag
    53:53:uk.org.ngo.squeezer.service.ISqueezeService getService() -> getService
    72:75:void onResume() -> onResume
    79:83:void onPause() -> onPause
    89:89:android.os.Handler getUIThreadHandler() -> getUIThreadHandler
    103:112:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    117:123:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    127:137:boolean changeVolumeBy(int) -> changeVolumeBy
    144:144:boolean play(uk.org.ngo.squeezer.framework.SqueezerItem) -> play
    148:148:boolean add(uk.org.ngo.squeezer.framework.SqueezerItem) -> add
    152:152:boolean insert(uk.org.ngo.squeezer.framework.SqueezerItem) -> insert
    156:160:boolean playlistControl(uk.org.ngo.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd,uk.org.ngo.squeezer.framework.SqueezerItem) -> playlistControl
    39:39:uk.org.ngo.squeezer.service.ISqueezeService access$002(uk.org.ngo.squeezer.framework.SqueezerBaseActivity,uk.org.ngo.squeezer.service.ISqueezeService) -> access$002
uk.org.ngo.squeezer.framework.SqueezerBaseActivity$1 -> uk.org.ngo.squeezer.framework.SqueezerBaseActivity$1:
    uk.org.ngo.squeezer.framework.SqueezerBaseActivity this$0 -> a
uk.org.ngo.squeezer.framework.SqueezerBaseActivity$2 -> uk.org.ngo.squeezer.framework.SqueezerBaseActivity$2:
    uk.org.ngo.squeezer.framework.SqueezerBaseActivity this$0 -> a
    58:64:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    66:67:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
uk.org.ngo.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd -> uk.org.ngo.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd:
    uk.org.ngo.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd load -> a
    uk.org.ngo.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd add -> b
    uk.org.ngo.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd insert -> c
    uk.org.ngo.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd[] $VALUES -> d
    163:163:uk.org.ngo.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd[] values() -> values
    163:163:uk.org.ngo.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd valueOf(java.lang.String) -> valueOf
uk.org.ngo.squeezer.framework.SqueezerBaseItemView -> uk.org.ngo.squeezer.framework.SqueezerBaseItemView:
    uk.org.ngo.squeezer.framework.SqueezerItemListActivity activity -> a
    uk.org.ngo.squeezer.framework.SqueezerItemAdapter adapter -> b
    java.lang.Class itemClass -> c
    android.os.Parcelable$Creator creator -> d
    54:54:uk.org.ngo.squeezer.framework.SqueezerItemListActivity getActivity() -> getActivity
    58:58:uk.org.ngo.squeezer.framework.SqueezerItemAdapter getAdapter() -> getAdapter
    62:63:void setAdapter(uk.org.ngo.squeezer.framework.SqueezerItemAdapter) -> setAdapter
    67:72:java.lang.Class getItemClass() -> getItemClass
    77:90:android.os.Parcelable$Creator getCreator() -> getCreator
    94:94:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
    98:98:android.view.View getAdapterView(android.view.View,java.lang.String) -> getAdapterView
    107:130:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> doItemContext
uk.org.ngo.squeezer.framework.SqueezerBaseListActivity -> uk.org.ngo.squeezer.framework.SqueezerBaseListActivity:
    uk.org.ngo.squeezer.framework.SqueezerItemAdapter itemAdapter -> e
    android.widget.ListView listView -> f
    android.widget.TextView loadingLabel -> g
    uk.org.ngo.squeezer.framework.SqueezerItemView itemView -> h
    58:87:void onCreate(android.os.Bundle) -> onCreate
    uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    100:100:void prepareActivity(android.os.Bundle) -> prepareActivity
    104:114:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    119:121:void onServiceConnected() -> onServiceConnected
    125:133:void onPause() -> onPause
    141:141:uk.org.ngo.squeezer.framework.SqueezerItemAdapter getItemAdapter() -> getItemAdapter
    145:145:uk.org.ngo.squeezer.framework.SqueezerItemAdapter createItemListAdapter(uk.org.ngo.squeezer.framework.SqueezerItemView) -> createItemListAdapter
    153:157:void orderItems() -> orderItems
    160:167:void onItemsReceived(int,int,java.util.List) -> onItemsReceived
    174:176:void clearItemListAdapter() -> clearItemListAdapter
    50:50:uk.org.ngo.squeezer.framework.SqueezerItemView access$000(uk.org.ngo.squeezer.framework.SqueezerBaseListActivity) -> access$000
    50:50:android.widget.ListView access$100(uk.org.ngo.squeezer.framework.SqueezerBaseListActivity) -> access$100
    50:50:android.widget.TextView access$200(uk.org.ngo.squeezer.framework.SqueezerBaseListActivity) -> access$200
uk.org.ngo.squeezer.framework.SqueezerBaseListActivity$1 -> uk.org.ngo.squeezer.framework.SqueezerBaseListActivity$1:
    uk.org.ngo.squeezer.framework.SqueezerBaseListActivity this$0 -> a
    66:74:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
uk.org.ngo.squeezer.framework.SqueezerBaseListActivity$2 -> uk.org.ngo.squeezer.framework.SqueezerBaseListActivity$2:
    uk.org.ngo.squeezer.framework.SqueezerBaseListActivity this$0 -> a
    79:81:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
uk.org.ngo.squeezer.framework.SqueezerBaseListActivity$3 -> uk.org.ngo.squeezer.framework.SqueezerBaseListActivity$3:
    int val$count -> a
    int val$start -> b
    java.util.List val$items -> c
    uk.org.ngo.squeezer.framework.SqueezerBaseListActivity this$0 -> d
    162:165:void run() -> run
uk.org.ngo.squeezer.framework.SqueezerFilterableListActivity -> uk.org.ngo.squeezer.framework.SqueezerFilterableListActivity:
    28:30:void onCreate(android.os.Bundle) -> onCreate
    34:35:boolean onSearchRequested() -> onSearchRequested
uk.org.ngo.squeezer.framework.SqueezerIconUpdater -> uk.org.ngo.squeezer.framework.SqueezerIconUpdater:
    java.util.concurrent.ScheduledThreadPoolExecutor backgroundExecutor -> a
    uk.org.ngo.squeezer.framework.SqueezerBaseActivity activity -> b
    41:41:uk.org.ngo.squeezer.framework.SqueezerBaseActivity getActivity() -> getActivity
    45:80:void updateIcon(android.widget.ImageView,java.lang.Object,java.lang.String) -> updateIcon
    83:108:android.graphics.Bitmap decodeUrl(java.net.URL,int) -> decodeUrl
    32:32:android.graphics.Bitmap access$000(java.net.URL,int) -> access$000
    32:32:uk.org.ngo.squeezer.framework.SqueezerBaseActivity access$100(uk.org.ngo.squeezer.framework.SqueezerIconUpdater) -> access$100
uk.org.ngo.squeezer.framework.SqueezerIconUpdater$1 -> uk.org.ngo.squeezer.framework.SqueezerIconUpdater$1:
    android.widget.ImageView val$icon -> a
    java.lang.Object val$item -> b
    java.lang.String val$urlString -> c
    uk.org.ngo.squeezer.framework.SqueezerIconUpdater this$0 -> d
    55:78:void run() -> run
uk.org.ngo.squeezer.framework.SqueezerIconUpdater$1$1 -> uk.org.ngo.squeezer.framework.SqueezerIconUpdater$1$1:
    android.graphics.Bitmap val$bitmap -> a
    uk.org.ngo.squeezer.framework.SqueezerIconUpdater$1 this$1 -> b
    65:71:void run() -> run
uk.org.ngo.squeezer.framework.SqueezerItem -> uk.org.ngo.squeezer.framework.SqueezerItem:
    java.lang.String id -> a
    31:31:void setId(java.lang.String) -> setId
    32:32:java.lang.String getId() -> getId
    java.lang.String getName() -> getName
    37:37:int describeContents() -> describeContents
    42:42:int hashCode() -> hashCode
    47:51:boolean equals(java.lang.Object) -> equals
uk.org.ngo.squeezer.framework.SqueezerItemAdapter -> uk.org.ngo.squeezer.framework.SqueezerItemAdapter:
    uk.org.ngo.squeezer.framework.SqueezerItemView itemView -> a
    int count -> b
    java.util.Map pages -> c
    boolean emptyItem -> d
    java.lang.String loadingText -> e
    int pageSize -> f
    76:76:int getPageSize() -> getPageSize
    104:104:int pageNumber(int) -> pageNumber
    111:113:void clear() -> clear
    116:120:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    125:125:java.lang.String getQuantityString(int) -> getQuantityString
    129:129:uk.org.ngo.squeezer.framework.SqueezerItemListActivity getActivity() -> getActivity
    133:137:void setupContextMenu(android.view.ContextMenu,int) -> setupContextMenu
    140:140:boolean doItemContext(android.view.MenuItem,int) -> doItemContext
    144:144:uk.org.ngo.squeezer.framework.SqueezerItemView getItemView() -> getItemView
    148:148:int getCount() -> getCount
    152:157:uk.org.ngo.squeezer.framework.SqueezerItem[] getPage(int) -> getPage
    161:172:void setItems(int,java.util.List) -> setItems
    175:180:uk.org.ngo.squeezer.framework.SqueezerItem getItem(int) -> getItem
    184:184:long getItemId(int) -> getItemId
    188:190:java.lang.String getHeader() -> getHeader
    199:199:void updateHeader() -> updateHeader
    215:225:void update(int,int,java.util.List) -> update
    232:237:int findItem(uk.org.ngo.squeezer.framework.SqueezerItem) -> findItem
    241:241:uk.org.ngo.squeezer.framework.SqueezerItem[] arrayInstance(int) -> arrayInstance
    46:46:java.lang.Object getItem(int) -> getItem
uk.org.ngo.squeezer.framework.SqueezerItemListActivity -> uk.org.ngo.squeezer.framework.SqueezerItemListActivity:
    java.util.Set orderedPages -> e
    boolean listBusy -> f
    44:46:void onCreate(android.os.Bundle) -> onCreate
    void registerCallback() -> registerCallback
    void unregisterCallback() -> unregisterCallback
    void orderPage(int) -> orderPage
    80:88:void maybeOrderPage(int) -> maybeOrderPage
    94:96:void reorderItems() -> reorderItems
    104:121:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    124:124:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
uk.org.ngo.squeezer.framework.SqueezerItemListAdapter -> uk.org.ngo.squeezer.framework.SqueezerItemListAdapter:
    41:42:void updateHeader() -> updateHeader
uk.org.ngo.squeezer.framework.SqueezerItemView -> uk.org.ngo.squeezer.framework.SqueezerItemView:
    uk.org.ngo.squeezer.framework.SqueezerItemListActivity getActivity() -> getActivity
    java.lang.String getQuantityString(int) -> getQuantityString
    android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
    android.view.View getAdapterView(android.view.View,java.lang.String) -> getAdapterView
    java.lang.Class getItemClass() -> getItemClass
    android.os.Parcelable$Creator getCreator() -> getCreator
    void setAdapter(uk.org.ngo.squeezer.framework.SqueezerItemAdapter) -> setAdapter
    void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
    void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> doItemContext
uk.org.ngo.squeezer.framework.SqueezerOrderableListActivity -> uk.org.ngo.squeezer.framework.SqueezerOrderableListActivity:
    27:29:void onCreate(android.os.Bundle) -> onCreate
uk.org.ngo.squeezer.itemlists.GenreSpinner -> uk.org.ngo.squeezer.itemlists.GenreSpinner:
    java.lang.String TAG -> b
    uk.org.ngo.squeezer.itemlists.GenreSpinner$GenreSpinnerCallback callback -> a
    uk.org.ngo.squeezer.framework.SqueezerItemListActivity activity -> c
    android.widget.Spinner spinner -> d
    uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback genreListCallback -> e
    47:54:void orderItems(int) -> orderItems
    57:64:void registerCallback() -> registerCallback
    67:74:void unregisterCallback() -> unregisterCallback
    32:32:uk.org.ngo.squeezer.framework.SqueezerItemListActivity access$100(uk.org.ngo.squeezer.itemlists.GenreSpinner) -> access$100
    32:32:android.widget.Spinner access$200(uk.org.ngo.squeezer.itemlists.GenreSpinner) -> access$200
    32:32:void access$300(uk.org.ngo.squeezer.itemlists.GenreSpinner,int) -> access$300
uk.org.ngo.squeezer.itemlists.GenreSpinner$1 -> uk.org.ngo.squeezer.itemlists.GenreSpinner$1:
    uk.org.ngo.squeezer.framework.SqueezerItemAdapter adapter -> b
    uk.org.ngo.squeezer.itemlists.GenreSpinner this$0 -> a
    80:108:void onGenresReceived(int,int,java.util.List) -> onGenresReceived
    76:76:uk.org.ngo.squeezer.framework.SqueezerItemAdapter access$000(uk.org.ngo.squeezer.itemlists.GenreSpinner$1) -> access$000
    76:76:uk.org.ngo.squeezer.framework.SqueezerItemAdapter access$002(uk.org.ngo.squeezer.itemlists.GenreSpinner$1,uk.org.ngo.squeezer.framework.SqueezerItemAdapter) -> access$002
uk.org.ngo.squeezer.itemlists.GenreSpinner$1$1 -> uk.org.ngo.squeezer.itemlists.GenreSpinner$1$1:
    int val$count -> a
    int val$start -> b
    java.util.List val$list -> c
    uk.org.ngo.squeezer.itemlists.GenreSpinner$1 this$1 -> d
    82:106:void run() -> run
uk.org.ngo.squeezer.itemlists.GenreSpinner$1$1$1 -> uk.org.ngo.squeezer.itemlists.GenreSpinner$1$1$1:
    uk.org.ngo.squeezer.itemlists.GenreSpinner$1$1 this$2 -> a
    86:86:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.model.SqueezerGenre) -> getAdapterView
    92:92:android.view.View getAdapterView(android.view.View,java.lang.String) -> getAdapterView
    83:83:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
uk.org.ngo.squeezer.itemlists.GenreSpinner$GenreSpinnerCallback -> uk.org.ngo.squeezer.itemlists.GenreSpinner$GenreSpinnerCallback:
    uk.org.ngo.squeezer.service.ISqueezeService getService() -> getService
    android.os.Handler getUIThreadHandler() -> getUIThreadHandler
    uk.org.ngo.squeezer.model.SqueezerGenre getGenre() -> getGenre
uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback -> uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback:
    void onAlbumsReceived(int,int,java.util.List) -> onAlbumsReceived
uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback$Stub -> uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback$Stub:
    23:30:uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback$Stub$Proxy -> uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:86:void onAlbumsReceived(int,int,java.util.List) -> onAlbumsReceived
uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback -> uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback:
    void onArtistsReceived(int,int,java.util.List) -> onArtistsReceived
uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback$Stub -> uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback$Stub:
    23:30:uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback$Stub$Proxy -> uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:86:void onArtistsReceived(int,int,java.util.List) -> onArtistsReceived
uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback -> uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback:
    void onGenresReceived(int,int,java.util.List) -> onGenresReceived
uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback$Stub -> uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback$Stub:
    23:30:uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback$Stub$Proxy -> uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:86:void onGenresReceived(int,int,java.util.List) -> onGenresReceived
uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback -> uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback:
    void onPlayersReceived(int,int,java.util.List) -> onPlayersReceived
uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback$Stub -> uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback$Stub:
    23:30:uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback$Stub$Proxy -> uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:86:void onPlayersReceived(int,int,java.util.List) -> onPlayersReceived
uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback -> uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback:
    void onRenameFailed(java.lang.String) -> onRenameFailed
    void onCreateFailed(java.lang.String) -> onCreateFailed
uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback$Stub -> uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback$Stub:
    23:30:uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:62:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback$Stub$Proxy -> uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    73:73:android.os.IBinder asBinder() -> asBinder
    81:88:void onRenameFailed(java.lang.String) -> onRenameFailed
    93:100:void onCreateFailed(java.lang.String) -> onCreateFailed
uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback -> uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback:
    void onPlaylistsReceived(int,int,java.util.List) -> onPlaylistsReceived
uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback$Stub -> uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback$Stub:
    23:30:uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback$Stub$Proxy -> uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:86:void onPlaylistsReceived(int,int,java.util.List) -> onPlaylistsReceived
uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback -> uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback:
    void onPluginItemsReceived(int,int,java.util.Map,java.util.List) -> onPluginItemsReceived
uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback$Stub -> uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback$Stub:
    23:30:uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:61:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback$Stub$Proxy -> uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    72:72:android.os.IBinder asBinder() -> asBinder
    80:90:void onPluginItemsReceived(int,int,java.util.Map,java.util.List) -> onPluginItemsReceived
uk.org.ngo.squeezer.itemlists.IServicePluginListCallback -> uk.org.ngo.squeezer.itemlists.IServicePluginListCallback:
    void onPluginsReceived(int,int,java.util.List) -> onPluginsReceived
uk.org.ngo.squeezer.itemlists.IServicePluginListCallback$Stub -> uk.org.ngo.squeezer.itemlists.IServicePluginListCallback$Stub:
    23:30:uk.org.ngo.squeezer.itemlists.IServicePluginListCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.itemlists.IServicePluginListCallback$Stub$Proxy -> uk.org.ngo.squeezer.itemlists.IServicePluginListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:86:void onPluginsReceived(int,int,java.util.List) -> onPluginsReceived
uk.org.ngo.squeezer.itemlists.IServiceSongListCallback -> uk.org.ngo.squeezer.itemlists.IServiceSongListCallback:
    void onSongsReceived(int,int,java.util.List) -> onSongsReceived
uk.org.ngo.squeezer.itemlists.IServiceSongListCallback$Stub -> uk.org.ngo.squeezer.itemlists.IServiceSongListCallback$Stub:
    23:30:uk.org.ngo.squeezer.itemlists.IServiceSongListCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.itemlists.IServiceSongListCallback$Stub$Proxy -> uk.org.ngo.squeezer.itemlists.IServiceSongListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:86:void onSongsReceived(int,int,java.util.List) -> onSongsReceived
uk.org.ngo.squeezer.itemlists.IServiceYearListCallback -> uk.org.ngo.squeezer.itemlists.IServiceYearListCallback:
    void onYearsReceived(int,int,java.util.List) -> onYearsReceived
uk.org.ngo.squeezer.itemlists.IServiceYearListCallback$Stub -> uk.org.ngo.squeezer.itemlists.IServiceYearListCallback$Stub:
    23:30:uk.org.ngo.squeezer.itemlists.IServiceYearListCallback asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.itemlists.IServiceYearListCallback$Stub$Proxy -> uk.org.ngo.squeezer.itemlists.IServiceYearListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:86:void onYearsReceived(int,int,java.util.List) -> onYearsReceived
uk.org.ngo.squeezer.itemlists.SqueezerAbstractSongListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerAbstractSongListActivity:
    uk.org.ngo.squeezer.itemlists.IServiceSongListCallback songListCallback -> e
    32:33:void registerCallback() -> registerCallback
    37:38:void unregisterCallback() -> unregisterCallback
uk.org.ngo.squeezer.itemlists.SqueezerAbstractSongListActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerAbstractSongListActivity$1:
    uk.org.ngo.squeezer.itemlists.SqueezerAbstractSongListActivity this$0 -> a
    42:43:void onSongsReceived(int,int,java.util.List) -> onSongsReceived
uk.org.ngo.squeezer.itemlists.SqueezerAlbumArtView -> uk.org.ngo.squeezer.itemlists.SqueezerAlbumArtView:
    36:38:void updateAlbumArt(android.widget.ImageView,uk.org.ngo.squeezer.framework.SqueezerArtworkItem) -> updateAlbumArt
    41:52:java.lang.String getAlbumArtUrl(java.lang.String) -> getAlbumArtUrl
uk.org.ngo.squeezer.itemlists.SqueezerAlbumListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerAlbumListActivity:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder sortOrder -> e
    java.lang.String searchString -> f
    uk.org.ngo.squeezer.model.SqueezerSong song -> g
    uk.org.ngo.squeezer.model.SqueezerArtist artist -> h
    uk.org.ngo.squeezer.model.SqueezerYear year -> i
    uk.org.ngo.squeezer.model.SqueezerGenre genre -> j
    uk.org.ngo.squeezer.itemlists.GenreSpinner genreSpinner -> k
    uk.org.ngo.squeezer.itemlists.YearSpinner yearSpinner -> l
    uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback albumListCallback -> m
    48:48:java.lang.String getSearchString() -> getSearchString
    49:49:void setSearchString(java.lang.String) -> setSearchString
    52:52:uk.org.ngo.squeezer.model.SqueezerSong getSong() -> getSong
    56:56:uk.org.ngo.squeezer.model.SqueezerArtist getArtist() -> getArtist
    60:60:uk.org.ngo.squeezer.model.SqueezerYear getYear() -> getYear
    61:61:void setYear(uk.org.ngo.squeezer.model.SqueezerYear) -> setYear
    64:64:uk.org.ngo.squeezer.model.SqueezerGenre getGenre() -> getGenre
    65:65:void setGenre(uk.org.ngo.squeezer.model.SqueezerGenre) -> setGenre
    69:70:void setGenreSpinner(android.widget.Spinner) -> setGenreSpinner
    74:75:void setYearSpinner(android.widget.Spinner) -> setYearSpinner
    79:79:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    84:98:void prepareActivity(android.os.Bundle) -> prepareActivity
    102:105:void registerCallback() -> registerCallback
    109:112:void unregisterCallback() -> unregisterCallback
    116:117:void orderPage(int) -> orderPage
    120:120:uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder getSortOrder() -> getSortOrder
    124:126:void setSortOrder(uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder) -> setSortOrder
    130:131:void onCreate(android.os.Bundle) -> onCreate
    134:135:void showFilterDialog() -> showFilterDialog
    138:139:void showOrderDialog() -> showOrderDialog
    142:146:void show(android.content.Context,uk.org.ngo.squeezer.framework.SqueezerItem[]) -> show
uk.org.ngo.squeezer.itemlists.SqueezerAlbumListActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerAlbumListActivity$1:
    uk.org.ngo.squeezer.itemlists.SqueezerAlbumListActivity this$0 -> a
    150:151:void onAlbumsReceived(int,int,java.util.List) -> onAlbumsReceived
uk.org.ngo.squeezer.itemlists.SqueezerAlbumView -> uk.org.ngo.squeezer.itemlists.SqueezerAlbumView:
    android.view.LayoutInflater layoutInflater -> a
    44:63:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.model.SqueezerAlbum) -> getAdapterView
    67:69:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerAlbum) -> onItemSelected
    72:77:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerAlbum) -> setupContextMenu
    80:80:java.lang.String getQuantityString(int) -> getQuantityString
    32:32:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
    32:32:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    32:32:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerAlbumView$1 -> uk.org.ngo.squeezer.itemlists.SqueezerAlbumView$1:
uk.org.ngo.squeezer.itemlists.SqueezerAlbumView$ViewHolder -> uk.org.ngo.squeezer.itemlists.SqueezerAlbumView$ViewHolder:
    android.widget.TextView label1 -> a
    android.widget.TextView label2 -> b
    android.widget.ImageView icon -> c
uk.org.ngo.squeezer.itemlists.SqueezerApplicationListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerApplicationListActivity:
    30:30:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    35:36:void orderPage(int) -> orderPage
uk.org.ngo.squeezer.itemlists.SqueezerApplicationView -> uk.org.ngo.squeezer.itemlists.SqueezerApplicationView:
    31:31:java.lang.String getQuantityString(int) -> getQuantityString
    36:36:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerPlugin) -> onItemSelected
    40:40:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerPlugin) -> setupContextMenu
    25:25:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    25:25:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerArtistListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerArtistListActivity:
    java.lang.String searchString -> e
    uk.org.ngo.squeezer.model.SqueezerAlbum album -> f
    uk.org.ngo.squeezer.model.SqueezerGenre genre -> g
    uk.org.ngo.squeezer.itemlists.GenreSpinner genreSpinner -> h
    uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback artistsListCallback -> i
    39:39:java.lang.String getSearchString() -> getSearchString
    40:40:void setSearchString(java.lang.String) -> setSearchString
    43:43:uk.org.ngo.squeezer.model.SqueezerAlbum getAlbum() -> getAlbum
    47:47:uk.org.ngo.squeezer.model.SqueezerGenre getGenre() -> getGenre
    48:48:void setGenre(uk.org.ngo.squeezer.model.SqueezerGenre) -> setGenre
    52:53:void setGenreSpinner(android.widget.Spinner) -> setGenreSpinner
    58:58:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    63:73:void prepareActivity(android.os.Bundle) -> prepareActivity
    77:79:void registerCallback() -> registerCallback
    83:85:void unregisterCallback() -> unregisterCallback
    89:90:void orderPage(int) -> orderPage
    93:94:void showFilterDialog() -> showFilterDialog
    97:101:void show(android.content.Context,uk.org.ngo.squeezer.framework.SqueezerItem[]) -> show
uk.org.ngo.squeezer.itemlists.SqueezerArtistListActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerArtistListActivity$1:
    uk.org.ngo.squeezer.itemlists.SqueezerArtistListActivity this$0 -> a
    105:106:void onArtistsReceived(int,int,java.util.List) -> onArtistsReceived
uk.org.ngo.squeezer.itemlists.SqueezerArtistView -> uk.org.ngo.squeezer.itemlists.SqueezerArtistView:
    36:37:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerArtist) -> onItemSelected
    40:45:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerArtist) -> setupContextMenu
    48:48:java.lang.String getQuantityString(int) -> getQuantityString
    29:29:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    29:29:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerCurrentPlaylistActivity -> uk.org.ngo.squeezer.itemlists.SqueezerCurrentPlaylistActivity:
    40:42:void show(android.content.Context) -> show
    46:46:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    95:96:void orderPage(int) -> orderPage
    100:101:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    106:120:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerCurrentPlaylistActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerCurrentPlaylistActivity$1:
    uk.org.ngo.squeezer.itemlists.SqueezerCurrentPlaylistActivity this$0 -> a
    50:52:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerSong) -> onItemSelected
    56:63:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerSong) -> setupContextMenu
    67:88:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.model.SqueezerSong) -> doItemContext
    46:46:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> doItemContext
    46:46:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    46:46:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerGenreListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerGenreListActivity:
    uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback genreListCallback -> e
    35:35:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    40:41:void registerCallback() -> registerCallback
    45:46:void unregisterCallback() -> unregisterCallback
    50:51:void orderPage(int) -> orderPage
    55:57:void show(android.content.Context) -> show
uk.org.ngo.squeezer.itemlists.SqueezerGenreListActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerGenreListActivity$1:
    uk.org.ngo.squeezer.itemlists.SqueezerGenreListActivity this$0 -> a
    61:62:void onGenresReceived(int,int,java.util.List) -> onGenresReceived
uk.org.ngo.squeezer.itemlists.SqueezerGenreView -> uk.org.ngo.squeezer.itemlists.SqueezerGenreView:
    36:36:java.lang.String getQuantityString(int) -> getQuantityString
    40:41:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerGenre) -> onItemSelected
    44:50:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerGenre) -> setupContextMenu
    29:29:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    29:29:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerIconicItemView -> uk.org.ngo.squeezer.itemlists.SqueezerIconicItemView:
    uk.org.ngo.squeezer.framework.SqueezerIconUpdater iconUpdater -> a
    35:36:void updateIcon(android.widget.ImageView,java.lang.Object,java.lang.String) -> updateIcon
uk.org.ngo.squeezer.itemlists.SqueezerPlayerListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerPlayerListActivity:
    uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback playerListCallback -> e
    35:35:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    40:41:void registerCallback() -> registerCallback
    45:46:void unregisterCallback() -> unregisterCallback
    50:51:void orderPage(int) -> orderPage
    54:56:void show(android.content.Context) -> show
uk.org.ngo.squeezer.itemlists.SqueezerPlayerListActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerPlayerListActivity$1:
    uk.org.ngo.squeezer.itemlists.SqueezerPlayerListActivity this$0 -> a
    60:61:void onPlayersReceived(int,int,java.util.List) -> onPlayersReceived
uk.org.ngo.squeezer.itemlists.SqueezerPlayerView -> uk.org.ngo.squeezer.itemlists.SqueezerPlayerView:
    android.view.LayoutInflater layoutInflater -> a
    java.util.Map modelIcons -> b
    48:60:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.model.SqueezerPlayer) -> getAdapterView
    64:66:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerPlayer) -> onItemSelected
    69:69:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerPlayer) -> setupContextMenu
    72:72:java.lang.String getQuantityString(int) -> getQuantityString
    76:88:java.util.Map initializeModelIcons() -> initializeModelIcons
    92:93:int getModelIcon(java.lang.String) -> getModelIcon
    35:35:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
    35:35:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    35:35:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerPlayerView$1 -> uk.org.ngo.squeezer.itemlists.SqueezerPlayerView$1:
uk.org.ngo.squeezer.itemlists.SqueezerPlayerView$ViewHolder -> uk.org.ngo.squeezer.itemlists.SqueezerPlayerView$ViewHolder:
    android.widget.TextView label -> a
    android.widget.ImageView icon -> b
uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity -> uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity:
    uk.org.ngo.squeezer.model.SqueezerPlaylist playlist -> e
    java.lang.String oldname -> f
    uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback playlistMaintenanceCallback -> g
    46:49:void show(android.content.Context,uk.org.ngo.squeezer.model.SqueezerPlaylist) -> show
    52:52:uk.org.ngo.squeezer.model.SqueezerPlaylist getPlaylist() -> getPlaylist
    56:56:void setOldname(java.lang.String) -> setOldname
    60:60:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    109:117:void prepareActivity(android.os.Bundle) -> prepareActivity
    121:122:void orderPage(int) -> orderPage
    126:128:void registerCallback() -> registerCallback
    132:135:void unregisterCallback() -> unregisterCallback
    139:140:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    145:153:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    157:162:void showServiceMessage(java.lang.String) -> showServiceMessage
    36:36:uk.org.ngo.squeezer.model.SqueezerPlaylist access$000(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity) -> access$000
    36:36:java.lang.String access$100(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity) -> access$100
    36:36:void access$200(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity,java.lang.String) -> access$200
uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity$1:
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity this$0 -> a
    63:72:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerSong) -> setupContextMenu
    76:102:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.model.SqueezerSong) -> doItemContext
    60:60:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> doItemContext
    60:60:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity$2 -> uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity$2:
    java.lang.String val$msg -> a
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity this$0 -> b
    159:160:void run() -> run
uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity$3 -> uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity$3:
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity this$0 -> a
    167:169:void onRenameFailed(java.lang.String) -> onRenameFailed
    172:173:void onCreateFailed(java.lang.String) -> onCreateFailed
uk.org.ngo.squeezer.itemlists.SqueezerPlaylistView -> uk.org.ngo.squeezer.itemlists.SqueezerPlaylistView:
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity activity -> a
    45:45:java.lang.String getQuantityString(int) -> getQuantityString
    49:51:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerPlaylist) -> onItemSelected
    54:60:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerPlaylist) -> setupContextMenu
    64:87:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.model.SqueezerPlaylist) -> doItemContext
    31:31:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> doItemContext
    31:31:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    31:31:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity -> uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity:
    uk.org.ngo.squeezer.model.SqueezerPlaylist currentPlaylist -> e
    java.lang.String oldname -> f
    uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback playlistsCallback -> g
    uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback playlistMaintenanceCallback -> h
    35:35:uk.org.ngo.squeezer.model.SqueezerPlaylist getCurrentPlaylist() -> getCurrentPlaylist
    36:36:void setCurrentPlaylist(uk.org.ngo.squeezer.model.SqueezerPlaylist) -> setCurrentPlaylist
    40:40:void setOldname(java.lang.String) -> setOldname
    44:44:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    49:51:void registerCallback() -> registerCallback
    55:57:void unregisterCallback() -> unregisterCallback
    61:62:void orderPage(int) -> orderPage
    66:67:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    72:77:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    81:83:void show(android.content.Context) -> show
    92:98:void showServiceMessage(java.lang.String) -> showServiceMessage
    33:33:java.lang.String access$000(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity) -> access$000
    33:33:uk.org.ngo.squeezer.model.SqueezerPlaylist access$100(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity) -> access$100
    33:33:void access$200(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity,java.lang.String) -> access$200
uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity$1:
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity this$0 -> a
    87:88:void onPlaylistsReceived(int,int,java.util.List) -> onPlaylistsReceived
uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity$2 -> uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity$2:
    java.lang.String val$msg -> a
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity this$0 -> b
    94:96:void run() -> run
uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity$3 -> uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity$3:
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity this$0 -> a
    103:105:void onRenameFailed(java.lang.String) -> onRenameFailed
    108:109:void onCreateFailed(java.lang.String) -> onCreateFailed
uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity:
    uk.org.ngo.squeezer.model.SqueezerPlugin plugin -> e
    uk.org.ngo.squeezer.model.SqueezerPluginItem parent -> f
    java.lang.String search -> g
    uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback pluginItemListCallback -> h
    49:49:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    54:54:uk.org.ngo.squeezer.framework.SqueezerItemAdapter createItemListAdapter(uk.org.ngo.squeezer.framework.SqueezerItemView) -> createItemListAdapter
    59:84:void prepareActivity(android.os.Bundle) -> prepareActivity
    87:92:void orderItems(java.lang.String) -> orderItems
    96:97:void orderItems() -> orderItems
    101:102:void registerCallback() -> registerCallback
    106:107:void unregisterCallback() -> unregisterCallback
    111:112:void orderPage(int) -> orderPage
    116:120:void show(uk.org.ngo.squeezer.model.SqueezerPluginItem) -> show
    123:126:void show(android.content.Context,uk.org.ngo.squeezer.model.SqueezerPlugin) -> show
    155:155:boolean play(uk.org.ngo.squeezer.model.SqueezerPluginItem) -> play
    163:163:boolean insert(uk.org.ngo.squeezer.model.SqueezerPluginItem) -> insert
    167:167:boolean add(uk.org.ngo.squeezer.model.SqueezerPluginItem) -> add
    171:175:boolean pluginPlaylistControl(uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd,uk.org.ngo.squeezer.model.SqueezerPluginItem) -> pluginPlaylistControl
    42:42:void access$000(uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity,java.lang.String) -> access$000
    42:42:uk.org.ngo.squeezer.model.SqueezerPluginItem access$102(uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity,uk.org.ngo.squeezer.model.SqueezerPluginItem) -> access$102
uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$1:
    android.widget.EditText val$searchCriteriaText -> a
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity this$0 -> b
    68:72:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$2 -> uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$2:
    android.widget.EditText val$searchCriteriaText -> a
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity this$0 -> b
    78:81:void onClick(android.view.View) -> onClick
uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$3 -> uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$3:
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity this$0 -> a
    130:148:void onPluginItemsReceived(int,int,java.util.Map,java.util.List) -> onPluginItemsReceived
uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$3$1 -> uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$3$1:
    java.util.Map val$parameters -> a
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$3 this$1 -> b
    133:134:void run() -> run
uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$3$2 -> uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$3$2:
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$3 this$1 -> a
    142:143:void run() -> run
uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd -> uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd:
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd play -> a
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd load -> d
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd add -> b
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd insert -> c
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd[] $VALUES -> e
    178:178:uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd[] values() -> values
    178:178:uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd valueOf(java.lang.String) -> valueOf
uk.org.ngo.squeezer.itemlists.SqueezerPluginItemView -> uk.org.ngo.squeezer.itemlists.SqueezerPluginItemView:
    uk.org.ngo.squeezer.itemlists.SqueezerPluginItemListActivity activity -> a
    android.view.LayoutInflater layoutInflater -> b
    47:61:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.model.SqueezerPluginItem) -> getAdapterView
    71:71:java.lang.String getQuantityString(int) -> getQuantityString
    75:81:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerPluginItem) -> onItemSelected
    84:90:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerPluginItem) -> setupContextMenu
    94:108:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.model.SqueezerPluginItem) -> doItemContext
    33:33:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> doItemContext
    33:33:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
    33:33:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    33:33:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerPluginItemView$1 -> uk.org.ngo.squeezer.itemlists.SqueezerPluginItemView$1:
uk.org.ngo.squeezer.itemlists.SqueezerPluginItemView$ViewHolder -> uk.org.ngo.squeezer.itemlists.SqueezerPluginItemView$ViewHolder:
    android.widget.TextView label -> a
    android.widget.ImageView icon -> b
    android.widget.ImageView groupIcon -> c
uk.org.ngo.squeezer.itemlists.SqueezerPluginListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerPluginListActivity:
    uk.org.ngo.squeezer.itemlists.IServicePluginListCallback pluginListCallback -> e
    38:39:void registerCallback() -> registerCallback
    43:44:void unregisterCallback() -> unregisterCallback
uk.org.ngo.squeezer.itemlists.SqueezerPluginListActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerPluginListActivity$1:
    uk.org.ngo.squeezer.itemlists.SqueezerPluginListActivity this$0 -> a
    32:33:void onPluginsReceived(int,int,java.util.List) -> onPluginsReceived
uk.org.ngo.squeezer.itemlists.SqueezerPluginView -> uk.org.ngo.squeezer.itemlists.SqueezerPluginView:
    android.view.LayoutInflater layoutInflater -> a
    43:55:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.model.SqueezerPlugin) -> getAdapterView
    59:68:java.lang.String getIconUrl(java.lang.String) -> getIconUrl
    31:31:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
uk.org.ngo.squeezer.itemlists.SqueezerPluginView$1 -> uk.org.ngo.squeezer.itemlists.SqueezerPluginView$1:
uk.org.ngo.squeezer.itemlists.SqueezerPluginView$ViewHolder -> uk.org.ngo.squeezer.itemlists.SqueezerPluginView$ViewHolder:
    android.widget.TextView label -> a
    android.widget.ImageView icon -> b
uk.org.ngo.squeezer.itemlists.SqueezerRadioListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerRadioListActivity:
    31:31:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    36:37:void orderPage(int) -> orderPage
    41:43:void show(android.content.Context) -> show
uk.org.ngo.squeezer.itemlists.SqueezerRadioView -> uk.org.ngo.squeezer.itemlists.SqueezerRadioView:
    33:33:java.lang.String getQuantityString(int) -> getQuantityString
    37:38:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerPlugin) -> onItemSelected
    41:41:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerPlugin) -> setupContextMenu
    26:26:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    26:26:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerSongListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerSongListActivity:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder sortOrder -> e
    java.lang.String searchString -> f
    uk.org.ngo.squeezer.model.SqueezerAlbum album -> g
    uk.org.ngo.squeezer.model.SqueezerArtist artist -> h
    uk.org.ngo.squeezer.model.SqueezerYear year -> i
    uk.org.ngo.squeezer.model.SqueezerGenre genre -> j
    uk.org.ngo.squeezer.itemlists.GenreSpinner genreSpinner -> k
    uk.org.ngo.squeezer.itemlists.YearSpinner yearSpinner -> l
    uk.org.ngo.squeezer.itemlists.SqueezerSongView songViewLogic -> m
    48:48:java.lang.String getSearchString() -> getSearchString
    49:49:void setSearchString(java.lang.String) -> setSearchString
    52:52:uk.org.ngo.squeezer.model.SqueezerAlbum getAlbum() -> getAlbum
    56:56:uk.org.ngo.squeezer.model.SqueezerArtist getArtist() -> getArtist
    60:60:uk.org.ngo.squeezer.model.SqueezerYear getYear() -> getYear
    61:61:void setYear(uk.org.ngo.squeezer.model.SqueezerYear) -> setYear
    64:64:uk.org.ngo.squeezer.model.SqueezerGenre getGenre() -> getGenre
    65:65:void setGenre(uk.org.ngo.squeezer.model.SqueezerGenre) -> setGenre
    69:70:void setGenreSpinner(android.widget.Spinner) -> setGenreSpinner
    74:75:void setYearSpinner(android.widget.Spinner) -> setYearSpinner
    81:85:void show(android.content.Context,uk.org.ngo.squeezer.framework.SqueezerItem[]) -> show
    90:91:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    96:113:void prepareActivity(android.os.Bundle) -> prepareActivity
    117:120:void registerCallback() -> registerCallback
    124:127:void unregisterCallback() -> unregisterCallback
    131:133:void orderPage(int) -> orderPage
    136:136:uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder getSortOrder() -> getSortOrder
    140:142:void setSortOrder(uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder) -> setSortOrder
    146:149:void onCreate(android.os.Bundle) -> onCreate
    153:154:boolean onSearchRequested() -> onSearchRequested
    158:159:void showFilterDialog() -> showFilterDialog
    162:163:void showOrderDialog() -> showOrderDialog
uk.org.ngo.squeezer.itemlists.SqueezerSongView -> uk.org.ngo.squeezer.itemlists.SqueezerSongView:
    android.view.LayoutInflater layoutInflater -> a
    boolean browseByAlbum -> b
    boolean browseByArtist -> c
    38:38:void setBrowseByAlbum(boolean) -> setBrowseByAlbum
    41:41:void setBrowseByArtist(boolean) -> setBrowseByArtist
    52:72:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.model.SqueezerSong) -> getAdapterView
    76:77:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerSong) -> onItemSelected
    80:90:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerSong) -> setupContextMenu
    94:105:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.model.SqueezerSong) -> doItemContext
    109:109:java.lang.String getQuantityString(int) -> getQuantityString
    34:34:boolean doItemContext(android.view.MenuItem,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> doItemContext
    34:34:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
    34:34:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    34:34:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.SqueezerSongView$1 -> uk.org.ngo.squeezer.itemlists.SqueezerSongView$1:
uk.org.ngo.squeezer.itemlists.SqueezerSongView$ViewHolder -> uk.org.ngo.squeezer.itemlists.SqueezerSongView$ViewHolder:
    android.widget.TextView label1 -> a
    android.widget.TextView label2 -> b
    android.widget.ImageView icon -> c
uk.org.ngo.squeezer.itemlists.SqueezerYearListActivity -> uk.org.ngo.squeezer.itemlists.SqueezerYearListActivity:
    uk.org.ngo.squeezer.itemlists.IServiceYearListCallback yearListCallback -> e
    35:35:uk.org.ngo.squeezer.framework.SqueezerItemView createItemView() -> createItemView
    40:41:void registerCallback() -> registerCallback
    45:46:void unregisterCallback() -> unregisterCallback
    50:51:void orderPage(int) -> orderPage
    55:57:void show(android.content.Context) -> show
uk.org.ngo.squeezer.itemlists.SqueezerYearListActivity$1 -> uk.org.ngo.squeezer.itemlists.SqueezerYearListActivity$1:
    uk.org.ngo.squeezer.itemlists.SqueezerYearListActivity this$0 -> a
    61:62:void onYearsReceived(int,int,java.util.List) -> onYearsReceived
uk.org.ngo.squeezer.itemlists.SqueezerYearView -> uk.org.ngo.squeezer.itemlists.SqueezerYearView:
    35:35:java.lang.String getQuantityString(int) -> getQuantityString
    39:40:void onItemSelected(int,uk.org.ngo.squeezer.model.SqueezerYear) -> onItemSelected
    43:48:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.model.SqueezerYear) -> setupContextMenu
    28:28:void setupContextMenu(android.view.ContextMenu,int,uk.org.ngo.squeezer.framework.SqueezerItem) -> setupContextMenu
    28:28:void onItemSelected(int,uk.org.ngo.squeezer.framework.SqueezerItem) -> onItemSelected
uk.org.ngo.squeezer.itemlists.YearSpinner -> uk.org.ngo.squeezer.itemlists.YearSpinner:
    java.lang.String TAG -> b
    uk.org.ngo.squeezer.itemlists.YearSpinner$YearSpinnerCallback callback -> a
    uk.org.ngo.squeezer.framework.SqueezerItemListActivity activity -> c
    android.widget.Spinner spinner -> d
    uk.org.ngo.squeezer.itemlists.IServiceYearListCallback yearListCallback -> e
    47:54:void orderItems(int) -> orderItems
    57:64:void registerCallback() -> registerCallback
    67:74:void unregisterCallback() -> unregisterCallback
    32:32:uk.org.ngo.squeezer.framework.SqueezerItemListActivity access$100(uk.org.ngo.squeezer.itemlists.YearSpinner) -> access$100
    32:32:android.widget.Spinner access$200(uk.org.ngo.squeezer.itemlists.YearSpinner) -> access$200
    32:32:void access$300(uk.org.ngo.squeezer.itemlists.YearSpinner,int) -> access$300
uk.org.ngo.squeezer.itemlists.YearSpinner$1 -> uk.org.ngo.squeezer.itemlists.YearSpinner$1:
    uk.org.ngo.squeezer.framework.SqueezerItemAdapter adapter -> b
    uk.org.ngo.squeezer.itemlists.YearSpinner this$0 -> a
    80:105:void onYearsReceived(int,int,java.util.List) -> onYearsReceived
    76:76:uk.org.ngo.squeezer.framework.SqueezerItemAdapter access$000(uk.org.ngo.squeezer.itemlists.YearSpinner$1) -> access$000
    76:76:uk.org.ngo.squeezer.framework.SqueezerItemAdapter access$002(uk.org.ngo.squeezer.itemlists.YearSpinner$1,uk.org.ngo.squeezer.framework.SqueezerItemAdapter) -> access$002
uk.org.ngo.squeezer.itemlists.YearSpinner$1$1 -> uk.org.ngo.squeezer.itemlists.YearSpinner$1$1:
    int val$count -> a
    int val$start -> b
    java.util.List val$list -> c
    uk.org.ngo.squeezer.itemlists.YearSpinner$1 this$1 -> d
    82:103:void run() -> run
uk.org.ngo.squeezer.itemlists.YearSpinner$1$1$1 -> uk.org.ngo.squeezer.itemlists.YearSpinner$1$1$1:
    uk.org.ngo.squeezer.itemlists.YearSpinner$1$1 this$2 -> a
    86:86:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.model.SqueezerYear) -> getAdapterView
    90:90:android.view.View getAdapterView(android.view.View,java.lang.String) -> getAdapterView
    83:83:android.view.View getAdapterView(android.view.View,uk.org.ngo.squeezer.framework.SqueezerItem) -> getAdapterView
uk.org.ngo.squeezer.itemlists.YearSpinner$YearSpinnerCallback -> uk.org.ngo.squeezer.itemlists.YearSpinner$YearSpinnerCallback:
    uk.org.ngo.squeezer.service.ISqueezeService getService() -> getService
    android.os.Handler getUIThreadHandler() -> getUIThreadHandler
    uk.org.ngo.squeezer.model.SqueezerYear getYear() -> getYear
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumFilterDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumFilterDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerAlbumListActivity activity -> L
    android.widget.Spinner genreSpinnerView -> M
    android.widget.Spinner yearSpinnerView -> N
    android.widget.EditText editText -> O
    25:45:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    50:54:void filter() -> filter
    57:59:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerAlbumListActivity) -> addTo
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerAlbumListActivity activity -> a
    20:33:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    38:40:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerAlbumListActivity) -> addTo
    11:11:uk.org.ngo.squeezer.itemlists.SqueezerAlbumListActivity access$000(uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog) -> access$000
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$1 -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$1:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog this$0 -> a
    29:31:void onClick(android.content.DialogInterface,int) -> onClick
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder album -> a
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder artflow -> b
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder __new -> c
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder[] $VALUES -> d
    43:43:uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder[] values() -> values
    43:43:uk.org.ngo.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder valueOf(java.lang.String) -> valueOf
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerArtistFilterDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerArtistFilterDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerArtistListActivity activity -> L
    android.widget.EditText editText -> M
    android.widget.Spinner genreSpinnerView -> N
    23:38:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    43:46:void filter() -> filter
    49:51:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerArtistListActivity) -> addTo
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog:
    android.widget.EditText editText -> a
    19:42:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    boolean commit(java.lang.String) -> commit
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog$1 -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog$1:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog this$0 -> a
    27:32:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog$2 -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog$2:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog this$0 -> a
    37:38:void onClick(android.content.DialogInterface,int) -> onClick
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog:
    android.view.View filterForm -> a
    19:44:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void filter() -> filter
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog$1 -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog$1:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog this$0 -> a
    28:33:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog$2 -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog$2:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog this$0 -> a
    39:40:void onClick(android.content.DialogInterface,int) -> onClick
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity activity -> a
    22:38:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    42:44:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity) -> addTo
    13:13:uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity access$000(uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog) -> access$000
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog$1 -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog$1:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog this$0 -> a
    29:34:void onClick(android.content.DialogInterface,int) -> onClick
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistItemMoveDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistItemMoveDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerAbstractSongListActivity activity -> L
    int fromIndex -> M
    uk.org.ngo.squeezer.model.SqueezerPlaylist playlist -> N
    26:32:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    37:50:boolean commit(java.lang.String) -> commit
    54:56:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerAbstractSongListActivity,int) -> addTo
    59:61:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerAbstractSongListActivity,uk.org.ngo.squeezer.model.SqueezerPlaylist,int) -> addTo
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistRenameDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistRenameDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity activity -> L
    20:26:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    32:39:boolean commit(java.lang.String) -> commit
    44:46:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistSongsActivity) -> addTo
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistSaveDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistSaveDialog:
    uk.org.ngo.squeezer.framework.SqueezerBaseActivity activity -> L
    20:26:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    32:36:boolean commit(java.lang.String) -> commit
    41:43:void addTo(uk.org.ngo.squeezer.framework.SqueezerBaseActivity) -> addTo
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity activity -> a
    22:38:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    42:44:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity) -> addTo
    13:13:uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity access$000(uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog) -> access$000
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog$1 -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog$1:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog this$0 -> a
    29:34:void onClick(android.content.DialogInterface,int) -> onClick
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistsNewDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistsNewDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity activity -> L
    20:26:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    32:37:boolean commit(java.lang.String) -> commit
    42:44:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity) -> addTo
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistsRenameDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerPlaylistsRenameDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity activity -> L
    20:26:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    32:39:boolean commit(java.lang.String) -> commit
    44:46:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerPlaylistsActivity) -> addTo
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongFilterDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongFilterDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerSongListActivity activity -> L
    android.widget.Spinner genreSpinnerView -> M
    android.widget.Spinner yearSpinnerView -> N
    android.widget.EditText editText -> O
    25:45:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    50:54:void filter() -> filter
    57:59:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerSongListActivity) -> addTo
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog:
    uk.org.ngo.squeezer.itemlists.SqueezerSongListActivity activity -> a
    20:32:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    37:39:void addTo(uk.org.ngo.squeezer.itemlists.SqueezerSongListActivity) -> addTo
    11:11:uk.org.ngo.squeezer.itemlists.SqueezerSongListActivity access$000(uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog) -> access$000
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$1 -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$1:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog this$0 -> a
    28:30:void onClick(android.content.DialogInterface,int) -> onClick
uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder -> uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder:
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder title -> a
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder tracknum -> b
    uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder[] $VALUES -> c
    41:41:uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder[] values() -> values
    41:41:uk.org.ngo.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder valueOf(java.lang.String) -> valueOf
uk.org.ngo.squeezer.menu.SqueezerFilterMenuItemFragment -> uk.org.ngo.squeezer.menu.SqueezerFilterMenuItemFragment:
    uk.org.ngo.squeezer.menu.SqueezerFilterMenuItemFragment$SqueezerFilterableListActivity activity -> a
    22:24:void onCreate(android.os.Bundle) -> onCreate
    28:30:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    34:39:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    43:47:void addTo(uk.org.ngo.squeezer.menu.SqueezerFilterMenuItemFragment$SqueezerFilterableListActivity) -> addTo
uk.org.ngo.squeezer.menu.SqueezerFilterMenuItemFragment$SqueezerFilterableListActivity -> uk.org.ngo.squeezer.menu.SqueezerFilterMenuItemFragment$SqueezerFilterableListActivity:
    void showFilterDialog() -> showFilterDialog
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
uk.org.ngo.squeezer.menu.SqueezerMenuFragment -> uk.org.ngo.squeezer.menu.SqueezerMenuFragment:
    21:23:void onCreate(android.os.Bundle) -> onCreate
    27:29:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    33:44:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    48:52:void addTo(android.support.v4.app.FragmentActivity) -> addTo
uk.org.ngo.squeezer.menu.SqueezerOrderMenuItemFragment -> uk.org.ngo.squeezer.menu.SqueezerOrderMenuItemFragment:
    uk.org.ngo.squeezer.menu.SqueezerOrderMenuItemFragment$SqueezerOrderableListActivity activity -> a
    22:24:void onCreate(android.os.Bundle) -> onCreate
    28:30:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    34:39:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    43:47:void addTo(uk.org.ngo.squeezer.menu.SqueezerOrderMenuItemFragment$SqueezerOrderableListActivity) -> addTo
uk.org.ngo.squeezer.menu.SqueezerOrderMenuItemFragment$SqueezerOrderableListActivity -> uk.org.ngo.squeezer.menu.SqueezerOrderMenuItemFragment$SqueezerOrderableListActivity:
    void showOrderDialog() -> showOrderDialog
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
uk.org.ngo.squeezer.model.SqueezerAlbum -> uk.org.ngo.squeezer.model.SqueezerAlbum:
    java.lang.String name -> a
    java.lang.String artist -> b
    int year -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    30:30:java.lang.String getName() -> getName
    31:31:uk.org.ngo.squeezer.model.SqueezerAlbum setName(java.lang.String) -> setName
    34:34:java.lang.String getArtist() -> getArtist
    35:35:void setArtist(java.lang.String) -> setArtist
    38:38:int getYear() -> getYear
    39:39:void setYear(int) -> setYear
    73:78:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    83:83:java.lang.String toString() -> toString
uk.org.ngo.squeezer.model.SqueezerAlbum$1 -> uk.org.ngo.squeezer.model.SqueezerAlbum$1:
    56:56:uk.org.ngo.squeezer.model.SqueezerAlbum[] newArray(int) -> newArray
    60:60:uk.org.ngo.squeezer.model.SqueezerAlbum createFromParcel(android.os.Parcel) -> createFromParcel
    54:54:java.lang.Object[] newArray(int) -> newArray
    54:54:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
uk.org.ngo.squeezer.model.SqueezerArtist -> uk.org.ngo.squeezer.model.SqueezerArtist:
    java.lang.String name -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    28:28:java.lang.String getName() -> getName
    29:29:uk.org.ngo.squeezer.model.SqueezerArtist setName(java.lang.String) -> setName
    55:57:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    62:62:java.lang.String toString() -> toString
uk.org.ngo.squeezer.model.SqueezerArtist$1 -> uk.org.ngo.squeezer.model.SqueezerArtist$1:
    43:43:uk.org.ngo.squeezer.model.SqueezerArtist[] newArray(int) -> newArray
    47:47:uk.org.ngo.squeezer.model.SqueezerArtist createFromParcel(android.os.Parcel) -> createFromParcel
    41:41:java.lang.Object[] newArray(int) -> newArray
    41:41:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
uk.org.ngo.squeezer.model.SqueezerGenre -> uk.org.ngo.squeezer.model.SqueezerGenre:
    java.lang.String name -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    28:28:java.lang.String getName() -> getName
    50:52:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    56:56:java.lang.String toString() -> toString
uk.org.ngo.squeezer.model.SqueezerGenre$1 -> uk.org.ngo.squeezer.model.SqueezerGenre$1:
    38:38:uk.org.ngo.squeezer.model.SqueezerGenre[] newArray(int) -> newArray
    42:42:uk.org.ngo.squeezer.model.SqueezerGenre createFromParcel(android.os.Parcel) -> createFromParcel
    36:36:java.lang.Object[] newArray(int) -> newArray
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
uk.org.ngo.squeezer.model.SqueezerPlayer -> uk.org.ngo.squeezer.model.SqueezerPlayer:
    java.lang.String ip -> a
    java.lang.String name -> b
    boolean canpoweroff -> c
    java.lang.String model -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    34:34:java.lang.String getName() -> getName
    38:38:boolean isCanpoweroff() -> isCanpoweroff
    42:42:java.lang.String getModel() -> getModel
    70:75:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    80:80:java.lang.String toString() -> toString
uk.org.ngo.squeezer.model.SqueezerPlayer$1 -> uk.org.ngo.squeezer.model.SqueezerPlayer$1:
    55:55:uk.org.ngo.squeezer.model.SqueezerPlayer[] newArray(int) -> newArray
    59:59:uk.org.ngo.squeezer.model.SqueezerPlayer createFromParcel(android.os.Parcel) -> createFromParcel
    53:53:java.lang.Object[] newArray(int) -> newArray
    53:53:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
uk.org.ngo.squeezer.model.SqueezerPlaylist -> uk.org.ngo.squeezer.model.SqueezerPlaylist:
    java.lang.String name -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    28:28:java.lang.String getName() -> getName
    29:29:uk.org.ngo.squeezer.model.SqueezerPlaylist setName(java.lang.String) -> setName
    50:52:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    56:56:java.lang.String toString() -> toString
uk.org.ngo.squeezer.model.SqueezerPlaylist$1 -> uk.org.ngo.squeezer.model.SqueezerPlaylist$1:
    38:38:uk.org.ngo.squeezer.model.SqueezerPlaylist[] newArray(int) -> newArray
    42:42:uk.org.ngo.squeezer.model.SqueezerPlaylist createFromParcel(android.os.Parcel) -> createFromParcel
    36:36:java.lang.Object[] newArray(int) -> newArray
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
uk.org.ngo.squeezer.model.SqueezerPlugin -> uk.org.ngo.squeezer.model.SqueezerPlugin:
    java.lang.String name -> a
    java.lang.String icon -> b
    int weight -> c
    java.lang.String type -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    29:29:java.lang.String getName() -> getName
    33:33:java.lang.String getIcon() -> getIcon
    43:43:boolean isSearchable() -> isSearchable
    70:75:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    79:79:java.lang.String toString() -> toString
uk.org.ngo.squeezer.model.SqueezerPlugin$1 -> uk.org.ngo.squeezer.model.SqueezerPlugin$1:
    55:55:uk.org.ngo.squeezer.model.SqueezerPlugin[] newArray(int) -> newArray
    59:59:uk.org.ngo.squeezer.model.SqueezerPlugin createFromParcel(android.os.Parcel) -> createFromParcel
    53:53:java.lang.Object[] newArray(int) -> newArray
    53:53:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
uk.org.ngo.squeezer.model.SqueezerPluginItem -> uk.org.ngo.squeezer.model.SqueezerPluginItem:
    java.lang.String name -> a
    java.lang.String description -> b
    java.lang.String image -> c
    boolean hasitems -> d
    java.lang.String type -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    29:29:java.lang.String getName() -> getName
    37:37:java.lang.String getImage() -> getImage
    41:41:boolean isHasitems() -> isHasitems
    75:81:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    85:85:java.lang.String toString() -> toString
uk.org.ngo.squeezer.model.SqueezerPluginItem$1 -> uk.org.ngo.squeezer.model.SqueezerPluginItem$1:
    59:59:uk.org.ngo.squeezer.model.SqueezerPluginItem[] newArray(int) -> newArray
    63:63:uk.org.ngo.squeezer.model.SqueezerPluginItem createFromParcel(android.os.Parcel) -> createFromParcel
    57:57:java.lang.Object[] newArray(int) -> newArray
    57:57:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
uk.org.ngo.squeezer.model.SqueezerSong -> uk.org.ngo.squeezer.model.SqueezerSong:
    java.lang.String name -> a
    java.lang.String artist -> b
    java.lang.String album -> c
    int year -> d
    java.lang.String artist_id -> e
    java.lang.String album_id -> f
    boolean remote -> g
    java.lang.String artwork_url -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    33:33:java.lang.String getName() -> getName
    34:34:uk.org.ngo.squeezer.model.SqueezerSong setName(java.lang.String) -> setName
    37:37:java.lang.String getArtist() -> getArtist
    38:38:void setArtist(java.lang.String) -> setArtist
    41:41:java.lang.String getAlbum() -> getAlbum
    42:42:void setAlbum(java.lang.String) -> setAlbum
    45:45:int getYear() -> getYear
    46:46:void setYear(int) -> setYear
    49:49:java.lang.String getArtist_id() -> getArtist_id
    50:50:void setArtist_id(java.lang.String) -> setArtist_id
    53:53:java.lang.String getAlbum_id() -> getAlbum_id
    54:54:void setAlbum_id(java.lang.String) -> setAlbum_id
    57:57:boolean isRemote() -> isRemote
    58:58:void setRemote(boolean) -> setRemote
    62:62:java.lang.String getArtwork_url() -> getArtwork_url
    63:63:void setArtwork_url(java.lang.String) -> setArtwork_url
    66:75:java.lang.String getArtworkUrl(uk.org.ngo.squeezer.service.ISqueezeService) -> getArtworkUrl
    112:120:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    125:125:java.lang.String toString() -> toString
uk.org.ngo.squeezer.model.SqueezerSong$1 -> uk.org.ngo.squeezer.model.SqueezerSong$1:
    94:94:uk.org.ngo.squeezer.model.SqueezerSong[] newArray(int) -> newArray
    98:98:uk.org.ngo.squeezer.model.SqueezerSong createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object[] newArray(int) -> newArray
    92:92:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
uk.org.ngo.squeezer.model.SqueezerYear -> uk.org.ngo.squeezer.model.SqueezerYear:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    45:46:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    50:50:java.lang.String getName() -> getName
    55:55:java.lang.String toString() -> toString
uk.org.ngo.squeezer.model.SqueezerYear$1 -> uk.org.ngo.squeezer.model.SqueezerYear$1:
    34:34:uk.org.ngo.squeezer.model.SqueezerYear[] newArray(int) -> newArray
    38:38:uk.org.ngo.squeezer.model.SqueezerYear createFromParcel(android.os.Parcel) -> createFromParcel
    32:32:java.lang.Object[] newArray(int) -> newArray
    32:32:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
uk.org.ngo.squeezer.service.ISqueezeService -> uk.org.ngo.squeezer.service.ISqueezeService:
    void registerCallback(uk.org.ngo.squeezer.IServiceCallback) -> registerCallback
    void unregisterCallback(uk.org.ngo.squeezer.IServiceCallback) -> unregisterCallback
    void startConnect(java.lang.String) -> startConnect
    void disconnect() -> disconnect
    boolean isConnected() -> isConnected
    void preferenceChanged(java.lang.String) -> preferenceChanged
    void setActivePlayer(uk.org.ngo.squeezer.model.SqueezerPlayer) -> setActivePlayer
    java.lang.String getActivePlayerName() -> getActivePlayerName
    boolean canPowerOn() -> canPowerOn
    boolean canPowerOff() -> canPowerOff
    boolean powerOn() -> powerOn
    boolean powerOff() -> powerOff
    boolean canRandomplay() -> canRandomplay
    boolean isPlaying() -> isPlaying
    boolean togglePausePlay() -> togglePausePlay
    boolean play() -> play
    boolean stop() -> stop
    boolean nextTrack() -> nextTrack
    boolean previousTrack() -> previousTrack
    boolean playlistControl(java.lang.String,java.lang.String,java.lang.String) -> playlistControl
    boolean randomPlay(java.lang.String) -> randomPlay
    boolean playlistIndex(int) -> playlistIndex
    boolean playlistRemove(int) -> playlistRemove
    boolean playlistMove(int,int) -> playlistMove
    boolean playlistClear() -> playlistClear
    boolean playlistSave(java.lang.String) -> playlistSave
    boolean pluginPlaylistControl(uk.org.ngo.squeezer.model.SqueezerPlugin,java.lang.String,java.lang.String) -> pluginPlaylistControl
    int getSecondsTotal() -> getSecondsTotal
    int getSecondsElapsed() -> getSecondsElapsed
    boolean setSecondsElapsed(int) -> setSecondsElapsed
    uk.org.ngo.squeezer.model.SqueezerSong currentSong() -> currentSong
    java.lang.String getAlbumArtUrl(java.lang.String) -> getAlbumArtUrl
    java.lang.String getIconUrl(java.lang.String) -> getIconUrl
    int adjustVolumeBy(int) -> adjustVolumeBy
    boolean players(int) -> players
    void registerPlayerListCallback(uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback) -> registerPlayerListCallback
    void unregisterPlayerListCallback(uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback) -> unregisterPlayerListCallback
    boolean albums(int,java.lang.String,java.lang.String,uk.org.ngo.squeezer.model.SqueezerArtist,uk.org.ngo.squeezer.model.SqueezerYear,uk.org.ngo.squeezer.model.SqueezerGenre,uk.org.ngo.squeezer.model.SqueezerSong) -> albums
    void registerAlbumListCallback(uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback) -> registerAlbumListCallback
    void unregisterAlbumListCallback(uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback) -> unregisterAlbumListCallback
    boolean artists(int,java.lang.String,uk.org.ngo.squeezer.model.SqueezerAlbum,uk.org.ngo.squeezer.model.SqueezerGenre) -> artists
    void registerArtistListCallback(uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback) -> registerArtistListCallback
    void unregisterArtistListCallback(uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback) -> unregisterArtistListCallback
    boolean years(int) -> years
    void registerYearListCallback(uk.org.ngo.squeezer.itemlists.IServiceYearListCallback) -> registerYearListCallback
    void unregisterYearListCallback(uk.org.ngo.squeezer.itemlists.IServiceYearListCallback) -> unregisterYearListCallback
    boolean genres(int) -> genres
    void registerGenreListCallback(uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback) -> registerGenreListCallback
    void unregisterGenreListCallback(uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback) -> unregisterGenreListCallback
    boolean songs(int,java.lang.String,java.lang.String,uk.org.ngo.squeezer.model.SqueezerAlbum,uk.org.ngo.squeezer.model.SqueezerArtist,uk.org.ngo.squeezer.model.SqueezerYear,uk.org.ngo.squeezer.model.SqueezerGenre) -> songs
    boolean currentPlaylist(int) -> currentPlaylist
    boolean playlistSongs(int,uk.org.ngo.squeezer.model.SqueezerPlaylist) -> playlistSongs
    void registerSongListCallback(uk.org.ngo.squeezer.itemlists.IServiceSongListCallback) -> registerSongListCallback
    void unregisterSongListCallback(uk.org.ngo.squeezer.itemlists.IServiceSongListCallback) -> unregisterSongListCallback
    boolean playlists(int) -> playlists
    void registerPlaylistsCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback) -> registerPlaylistsCallback
    void unregisterPlaylistsCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback) -> unregisterPlaylistsCallback
    void registerPlaylistMaintenanceCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> registerPlaylistMaintenanceCallback
    void unregisterPlaylistMaintenanceCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> unregisterPlaylistMaintenanceCallback
    boolean playlistsNew(java.lang.String) -> playlistsNew
    boolean playlistsRename(uk.org.ngo.squeezer.model.SqueezerPlaylist,java.lang.String) -> playlistsRename
    boolean playlistsDelete(uk.org.ngo.squeezer.model.SqueezerPlaylist) -> playlistsDelete
    boolean playlistsMove(uk.org.ngo.squeezer.model.SqueezerPlaylist,int,int) -> playlistsMove
    boolean playlistsRemove(uk.org.ngo.squeezer.model.SqueezerPlaylist,int) -> playlistsRemove
    boolean search(int,java.lang.String) -> search
    boolean radios(int) -> radios
    boolean apps(int) -> apps
    void registerPluginListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginListCallback) -> registerPluginListCallback
    void unregisterPluginListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginListCallback) -> unregisterPluginListCallback
    boolean pluginItems(int,uk.org.ngo.squeezer.model.SqueezerPlugin,uk.org.ngo.squeezer.model.SqueezerPluginItem,java.lang.String) -> pluginItems
    void registerPluginItemListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback) -> registerPluginItemListCallback
    void unregisterPluginItemListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback) -> unregisterPluginItemListCallback
uk.org.ngo.squeezer.service.ISqueezeService$Stub -> uk.org.ngo.squeezer.service.ISqueezeService$Stub:
    23:30:uk.org.ngo.squeezer.service.ISqueezeService asInterface(android.os.IBinder) -> asInterface
    34:34:android.os.IBinder asBinder() -> asBinder
    38:863:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
uk.org.ngo.squeezer.service.ISqueezeService$Stub$Proxy -> uk.org.ngo.squeezer.service.ISqueezeService$Stub$Proxy:
    android.os.IBinder mRemote -> a
    874:874:android.os.IBinder asBinder() -> asBinder
    884:894:void registerCallback(uk.org.ngo.squeezer.IServiceCallback) -> registerCallback
    899:909:void unregisterCallback(uk.org.ngo.squeezer.IServiceCallback) -> unregisterCallback
    917:927:void startConnect(java.lang.String) -> startConnect
    932:941:void disconnect() -> disconnect
    946:959:boolean isConnected() -> isConnected
    965:975:void preferenceChanged(java.lang.String) -> preferenceChanged
    982:998:void setActivePlayer(uk.org.ngo.squeezer.model.SqueezerPlayer) -> setActivePlayer
    1005:1018:java.lang.String getActivePlayerName() -> getActivePlayerName
    1025:1038:boolean canPowerOn() -> canPowerOn
    1042:1055:boolean canPowerOff() -> canPowerOff
    1059:1072:boolean powerOn() -> powerOn
    1076:1089:boolean powerOff() -> powerOff
    1093:1106:boolean canRandomplay() -> canRandomplay
    1110:1123:boolean isPlaying() -> isPlaying
    1127:1140:boolean togglePausePlay() -> togglePausePlay
    1144:1157:boolean play() -> play
    1161:1174:boolean stop() -> stop
    1178:1191:boolean nextTrack() -> nextTrack
    1195:1208:boolean previousTrack() -> previousTrack
    1212:1228:boolean playlistControl(java.lang.String,java.lang.String,java.lang.String) -> playlistControl
    1232:1246:boolean randomPlay(java.lang.String) -> randomPlay
    1250:1264:boolean playlistIndex(int) -> playlistIndex
    1268:1282:boolean playlistRemove(int) -> playlistRemove
    1286:1301:boolean playlistMove(int,int) -> playlistMove
    1305:1318:boolean playlistClear() -> playlistClear
    1322:1336:boolean playlistSave(java.lang.String) -> playlistSave
    1340:1362:boolean pluginPlaylistControl(uk.org.ngo.squeezer.model.SqueezerPlugin,java.lang.String,java.lang.String) -> pluginPlaylistControl
    1368:1381:int getSecondsTotal() -> getSecondsTotal
    1385:1398:int getSecondsElapsed() -> getSecondsElapsed
    1402:1416:boolean setSecondsElapsed(int) -> setSecondsElapsed
    1420:1438:uk.org.ngo.squeezer.model.SqueezerSong currentSong() -> currentSong
    1442:1456:java.lang.String getAlbumArtUrl(java.lang.String) -> getAlbumArtUrl
    1460:1474:java.lang.String getIconUrl(java.lang.String) -> getIconUrl
    1482:1496:int adjustVolumeBy(int) -> adjustVolumeBy
    1502:1516:boolean players(int) -> players
    1520:1530:void registerPlayerListCallback(uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback) -> registerPlayerListCallback
    1535:1545:void unregisterPlayerListCallback(uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback) -> unregisterPlayerListCallback
    1563:1607:boolean albums(int,java.lang.String,java.lang.String,uk.org.ngo.squeezer.model.SqueezerArtist,uk.org.ngo.squeezer.model.SqueezerYear,uk.org.ngo.squeezer.model.SqueezerGenre,uk.org.ngo.squeezer.model.SqueezerSong) -> albums
    1611:1621:void registerAlbumListCallback(uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback) -> registerAlbumListCallback
    1626:1636:void unregisterAlbumListCallback(uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback) -> unregisterAlbumListCallback
    1643:1672:boolean artists(int,java.lang.String,uk.org.ngo.squeezer.model.SqueezerAlbum,uk.org.ngo.squeezer.model.SqueezerGenre) -> artists
    1676:1686:void registerArtistListCallback(uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback) -> registerArtistListCallback
    1691:1701:void unregisterArtistListCallback(uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback) -> unregisterArtistListCallback
    1708:1722:boolean years(int) -> years
    1726:1736:void registerYearListCallback(uk.org.ngo.squeezer.itemlists.IServiceYearListCallback) -> registerYearListCallback
    1741:1751:void unregisterYearListCallback(uk.org.ngo.squeezer.itemlists.IServiceYearListCallback) -> unregisterYearListCallback
    1758:1772:boolean genres(int) -> genres
    1776:1786:void registerGenreListCallback(uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback) -> registerGenreListCallback
    1791:1801:void unregisterGenreListCallback(uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback) -> unregisterGenreListCallback
    1808:1852:boolean songs(int,java.lang.String,java.lang.String,uk.org.ngo.squeezer.model.SqueezerAlbum,uk.org.ngo.squeezer.model.SqueezerArtist,uk.org.ngo.squeezer.model.SqueezerYear,uk.org.ngo.squeezer.model.SqueezerGenre) -> songs
    1856:1870:boolean currentPlaylist(int) -> currentPlaylist
    1874:1895:boolean playlistSongs(int,uk.org.ngo.squeezer.model.SqueezerPlaylist) -> playlistSongs
    1899:1909:void registerSongListCallback(uk.org.ngo.squeezer.itemlists.IServiceSongListCallback) -> registerSongListCallback
    1914:1924:void unregisterSongListCallback(uk.org.ngo.squeezer.itemlists.IServiceSongListCallback) -> unregisterSongListCallback
    1931:1945:boolean playlists(int) -> playlists
    1949:1959:void registerPlaylistsCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback) -> registerPlaylistsCallback
    1964:1974:void unregisterPlaylistsCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback) -> unregisterPlaylistsCallback
    1981:1991:void registerPlaylistMaintenanceCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> registerPlaylistMaintenanceCallback
    1996:2006:void unregisterPlaylistMaintenanceCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> unregisterPlaylistMaintenanceCallback
    2011:2025:boolean playlistsNew(java.lang.String) -> playlistsNew
    2029:2050:boolean playlistsRename(uk.org.ngo.squeezer.model.SqueezerPlaylist,java.lang.String) -> playlistsRename
    2054:2074:boolean playlistsDelete(uk.org.ngo.squeezer.model.SqueezerPlaylist) -> playlistsDelete
    2078:2100:boolean playlistsMove(uk.org.ngo.squeezer.model.SqueezerPlaylist,int,int) -> playlistsMove
    2104:2125:boolean playlistsRemove(uk.org.ngo.squeezer.model.SqueezerPlaylist,int) -> playlistsRemove
    2131:2146:boolean search(int,java.lang.String) -> search
    2152:2166:boolean radios(int) -> radios
    2170:2184:boolean apps(int) -> apps
    2188:2198:void registerPluginListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginListCallback) -> registerPluginListCallback
    2203:2213:void unregisterPluginListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginListCallback) -> unregisterPluginListCallback
    2218:2247:boolean pluginItems(int,uk.org.ngo.squeezer.model.SqueezerPlugin,uk.org.ngo.squeezer.model.SqueezerPluginItem,java.lang.String) -> pluginItems
    2251:2261:void registerPluginItemListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback) -> registerPluginItemListCallback
    2266:2276:void unregisterPluginItemListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback) -> unregisterPluginItemListCallback
uk.org.ngo.squeezer.service.SqueezeService -> uk.org.ngo.squeezer.service.SqueezeService:
    java.util.Map itemKeys -> p
    java.util.concurrent.ScheduledThreadPoolExecutor executor -> q
    java.util.concurrent.atomic.AtomicReference playerListCallback -> a
    java.util.concurrent.atomic.AtomicReference albumListCallback -> b
    java.util.concurrent.atomic.AtomicReference artistListCallback -> c
    java.util.concurrent.atomic.AtomicReference yearListCallback -> d
    java.util.concurrent.atomic.AtomicReference genreListCallback -> e
    java.util.concurrent.atomic.AtomicReference songListCallback -> f
    java.util.concurrent.atomic.AtomicReference playlistsCallback -> g
    java.util.concurrent.atomic.AtomicReference playlistMaintenanceCallback -> h
    java.util.concurrent.atomic.AtomicReference pluginListCallback -> i
    java.util.concurrent.atomic.AtomicReference pluginItemListCallback -> j
    uk.org.ngo.squeezer.service.SqueezerConnectionState connectionState -> k
    uk.org.ngo.squeezer.service.SqueezerPlayerState playerState -> l
    uk.org.ngo.squeezer.service.SqueezerCLIImpl cli -> m
    uk.org.ngo.squeezer.VolumePanel mVolumePanel -> r
    int scrobbleType -> s
    boolean debugLogging -> n
    android.content.SharedPreferences preferences -> o
    java.util.Map globalHandlers -> t
    java.util.Map prefixedHandlers -> u
    java.util.Map playerSpecificHandlers -> v
    java.util.Map prefixedPlayerSpecificHandlers -> w
    uk.org.ngo.squeezer.service.ISqueezeService$Stub squeezeService -> x
    75:82:java.util.Map initializeItemKeys() -> initializeItemKeys
    115:130:void onCreate() -> onCreate
    133:135:void getPreferences() -> getPreferences
    139:139:android.os.IBinder onBind(android.content.Intent) -> onBind
    144:147:void onDestroy() -> onDestroy
    150:153:void disconnect() -> disconnect
    161:222:java.util.Map initializeGlobalHandlers() -> initializeGlobalHandlers
    226:236:java.util.Map initializePrefixedHandlers() -> initializePrefixedHandlers
    240:288:java.util.Map initializePlayerSpecificHandlers() -> initializePlayerSpecificHandlers
    292:302:java.util.Map initializePrefixedPlayerSpecificHandlers() -> initializePrefixedPlayerSpecificHandlers
    311:342:void onLineReceived(java.lang.String) -> onLineReceived
    345:347:void sendNewVolumeCallback(int) -> sendNewVolumeCallback
    350:355:void sendNewTimeCallback(int,int) -> sendNewTimeCallback
    358:368:void parsePlaylistNotification(java.util.List) -> parsePlaylistNotification
    380:388:void parseMode(java.lang.String) -> parseMode
    391:405:java.util.HashMap parseTokens(java.util.List) -> parseTokens
    409:431:void parseStatusLine(java.util.List) -> parseStatusLine
    434:478:void changeActivePlayer(uk.org.ngo.squeezer.model.SqueezerPlayer) -> changeActivePlayer
    489:494:void updatePlayerSubscriptionState() -> updatePlayerSubscriptionState
    497:502:void onCliPortConnectionEstablished() -> onCliPortConnectionEstablished
    505:518:void setPlayingState(boolean) -> setPlayingState
    521:578:void updateOngoingNotification() -> updateOngoingNotification
    581:588:void sendMusicChangedCallback() -> sendMusicChangedCallback
    591:594:void clearOngoingNotification() -> clearOngoingNotification
    65:65:java.util.HashMap access$000(uk.org.ngo.squeezer.service.SqueezeService,java.util.List) -> access$000
    65:65:void access$100(uk.org.ngo.squeezer.service.SqueezeService,int) -> access$100
    65:65:void access$200(uk.org.ngo.squeezer.service.SqueezeService,boolean) -> access$200
    65:65:void access$300(uk.org.ngo.squeezer.service.SqueezeService,java.lang.String) -> access$300
    65:65:void access$400(uk.org.ngo.squeezer.service.SqueezeService,java.util.List) -> access$400
    65:65:void access$500(uk.org.ngo.squeezer.service.SqueezeService,java.util.List) -> access$500
    65:65:void access$600(uk.org.ngo.squeezer.service.SqueezeService) -> access$600
    65:65:java.util.concurrent.ScheduledThreadPoolExecutor access$700(uk.org.ngo.squeezer.service.SqueezeService) -> access$700
    65:65:java.util.Map access$800() -> access$800
    65:65:void access$900(uk.org.ngo.squeezer.service.SqueezeService) -> access$900
    65:65:void access$1000(uk.org.ngo.squeezer.service.SqueezeService) -> access$1000
uk.org.ngo.squeezer.service.SqueezeService$1 -> uk.org.ngo.squeezer.service.SqueezeService$1:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd val$cmd -> a
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> b
    166:167:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$10 -> uk.org.ngo.squeezer.service.SqueezeService$10:
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> a
    270:271:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$11 -> uk.org.ngo.squeezer.service.SqueezeService$11:
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> a
    275:280:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$12 -> uk.org.ngo.squeezer.service.SqueezeService$12:
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> a
    284:285:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$13 -> uk.org.ngo.squeezer.service.SqueezeService$13:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd val$cmd -> a
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> b
    297:298:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$14 -> uk.org.ngo.squeezer.service.SqueezeService$14:
    java.lang.String val$playerId -> a
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> b
    464:469:void run() -> run
uk.org.ngo.squeezer.service.SqueezeService$15 -> uk.org.ngo.squeezer.service.SqueezeService$15:
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> a
    599:602:void registerCallback(uk.org.ngo.squeezer.IServiceCallback) -> registerCallback
    605:608:void unregisterCallback(uk.org.ngo.squeezer.IServiceCallback) -> unregisterCallback
    611:616:int adjustVolumeBy(int) -> adjustVolumeBy
    620:620:boolean isConnected() -> isConnected
    624:625:void startConnect(java.lang.String) -> startConnect
    628:630:void disconnect() -> disconnect
    633:635:boolean powerOn() -> powerOn
    639:641:boolean powerOff() -> powerOff
    645:645:boolean canPowerOn() -> canPowerOn
    649:649:boolean canPowerOff() -> canPowerOff
    653:654:boolean canPower() -> canPower
    658:658:boolean canRandomplay() -> canRandomplay
    662:675:boolean togglePausePlay() -> togglePausePlay
    680:684:boolean play() -> play
    689:692:boolean stop() -> stop
    696:698:boolean nextTrack() -> nextTrack
    702:704:boolean previousTrack() -> previousTrack
    708:710:boolean playlistControl(java.lang.String,java.lang.String,java.lang.String) -> playlistControl
    715:717:boolean randomPlay(java.lang.String) -> randomPlay
    721:723:boolean playlistIndex(int) -> playlistIndex
    727:729:boolean playlistRemove(int) -> playlistRemove
    733:735:boolean playlistMove(int,int) -> playlistMove
    739:741:boolean playlistClear() -> playlistClear
    745:747:boolean playlistSave(java.lang.String) -> playlistSave
    751:753:boolean pluginPlaylistControl(uk.org.ngo.squeezer.model.SqueezerPlugin,java.lang.String,java.lang.String) -> pluginPlaylistControl
    758:758:boolean isPlaying() -> isPlaying
    762:763:void setActivePlayer(uk.org.ngo.squeezer.model.SqueezerPlayer) -> setActivePlayer
    766:767:java.lang.String getActivePlayerName() -> getActivePlayerName
    771:771:uk.org.ngo.squeezer.model.SqueezerSong currentSong() -> currentSong
    775:777:java.lang.String getAlbumArtUrl(java.lang.String) -> getAlbumArtUrl
    781:781:java.lang.String artworkTrackIdUrl(java.lang.String) -> artworkTrackIdUrl
    785:787:java.lang.String getIconUrl(java.lang.String) -> getIconUrl
    791:791:int getSecondsElapsed() -> getSecondsElapsed
    795:800:boolean setSecondsElapsed(int) -> setSecondsElapsed
    804:804:int getSecondsTotal() -> getSecondsTotal
    808:814:void preferenceChanged(java.lang.String) -> preferenceChanged
    819:821:boolean players(int) -> players
    826:828:void registerPlayerListCallback(uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback) -> registerPlayerListCallback
    831:834:void unregisterPlayerListCallback(uk.org.ngo.squeezer.itemlists.IServicePlayerListCallback) -> unregisterPlayerListCallback
    840:855:boolean albums(int,java.lang.String,java.lang.String,uk.org.ngo.squeezer.model.SqueezerArtist,uk.org.ngo.squeezer.model.SqueezerYear,uk.org.ngo.squeezer.model.SqueezerGenre,uk.org.ngo.squeezer.model.SqueezerSong) -> albums
    859:861:void registerAlbumListCallback(uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback) -> registerAlbumListCallback
    864:867:void unregisterAlbumListCallback(uk.org.ngo.squeezer.itemlists.IServiceAlbumListCallback) -> unregisterAlbumListCallback
    873:882:boolean artists(int,java.lang.String,uk.org.ngo.squeezer.model.SqueezerAlbum,uk.org.ngo.squeezer.model.SqueezerGenre) -> artists
    886:888:void registerArtistListCallback(uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback) -> registerArtistListCallback
    891:894:void unregisterArtistListCallback(uk.org.ngo.squeezer.itemlists.IServiceArtistListCallback) -> unregisterArtistListCallback
    899:901:boolean years(int) -> years
    905:907:void registerYearListCallback(uk.org.ngo.squeezer.itemlists.IServiceYearListCallback) -> registerYearListCallback
    910:913:void unregisterYearListCallback(uk.org.ngo.squeezer.itemlists.IServiceYearListCallback) -> unregisterYearListCallback
    918:920:boolean genres(int) -> genres
    924:926:void registerGenreListCallback(uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback) -> registerGenreListCallback
    929:932:void unregisterGenreListCallback(uk.org.ngo.squeezer.itemlists.IServiceGenreListCallback) -> unregisterGenreListCallback
    938:954:boolean songs(int,java.lang.String,java.lang.String,uk.org.ngo.squeezer.model.SqueezerAlbum,uk.org.ngo.squeezer.model.SqueezerArtist,uk.org.ngo.squeezer.model.SqueezerYear,uk.org.ngo.squeezer.model.SqueezerGenre) -> songs
    959:961:boolean currentPlaylist(int) -> currentPlaylist
    966:968:boolean playlistSongs(int,uk.org.ngo.squeezer.model.SqueezerPlaylist) -> playlistSongs
    972:974:void registerSongListCallback(uk.org.ngo.squeezer.itemlists.IServiceSongListCallback) -> registerSongListCallback
    977:980:void unregisterSongListCallback(uk.org.ngo.squeezer.itemlists.IServiceSongListCallback) -> unregisterSongListCallback
    985:987:boolean playlists(int) -> playlists
    991:993:void registerPlaylistsCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback) -> registerPlaylistsCallback
    996:999:void unregisterPlaylistsCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistsCallback) -> unregisterPlaylistsCallback
    1003:1005:void registerPlaylistMaintenanceCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> registerPlaylistMaintenanceCallback
    1008:1010:void unregisterPlaylistMaintenanceCallback(uk.org.ngo.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> unregisterPlaylistMaintenanceCallback
    1013:1015:boolean playlistsDelete(uk.org.ngo.squeezer.model.SqueezerPlaylist) -> playlistsDelete
    1019:1022:boolean playlistsMove(uk.org.ngo.squeezer.model.SqueezerPlaylist,int,int) -> playlistsMove
    1026:1028:boolean playlistsNew(java.lang.String) -> playlistsNew
    1032:1034:boolean playlistsRemove(uk.org.ngo.squeezer.model.SqueezerPlaylist,int) -> playlistsRemove
    1038:1040:boolean playlistsRename(uk.org.ngo.squeezer.model.SqueezerPlaylist,java.lang.String) -> playlistsRename
    1046:1051:boolean search(int,java.lang.String) -> search
    1056:1058:boolean radios(int) -> radios
    1063:1065:boolean apps(int) -> apps
    1069:1071:void registerPluginListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginListCallback) -> registerPluginListCallback
    1074:1077:void unregisterPluginListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginListCallback) -> unregisterPluginListCallback
    1082:1089:boolean pluginItems(int,uk.org.ngo.squeezer.model.SqueezerPlugin,uk.org.ngo.squeezer.model.SqueezerPluginItem,java.lang.String) -> pluginItems
    1093:1095:void registerPluginItemListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback) -> registerPluginItemListCallback
    1098:1101:void unregisterPluginItemListCallback(uk.org.ngo.squeezer.itemlists.IServicePluginItemListCallback) -> unregisterPluginItemListCallback
uk.org.ngo.squeezer.service.SqueezeService$2 -> uk.org.ngo.squeezer.service.SqueezeService$2:
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> a
    172:205:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$3 -> uk.org.ngo.squeezer.service.SqueezeService$3:
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> a
    209:212:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$4 -> uk.org.ngo.squeezer.service.SqueezeService$4:
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> a
    216:219:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$5 -> uk.org.ngo.squeezer.service.SqueezeService$5:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd val$cmd -> a
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> b
    231:232:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$6 -> uk.org.ngo.squeezer.service.SqueezeService$6:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd val$cmd -> a
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> b
    245:246:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$7 -> uk.org.ngo.squeezer.service.SqueezeService$7:
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> a
    251:256:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$8 -> uk.org.ngo.squeezer.service.SqueezeService$8:
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> a
    260:261:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$9 -> uk.org.ngo.squeezer.service.SqueezeService$9:
    uk.org.ngo.squeezer.service.SqueezeService this$0 -> a
    265:266:void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezeService$SqueezerCmdHandler -> uk.org.ngo.squeezer.service.SqueezeService$SqueezerCmdHandler:
    void handle(java.util.List) -> handle
uk.org.ngo.squeezer.service.SqueezerCLIImpl -> uk.org.ngo.squeezer.service.SqueezerCLIImpl:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd[] extQueryFormatCmds -> a
    java.util.Map extQueryFormatCmdMap -> b
    uk.org.ngo.squeezer.service.SqueezeService service -> c
    int pageSize -> d
    int _correlationid -> e
    java.util.Map cmdCorrelationIds -> f
    java.util.Map typeCorrelationIds -> g
    82:223:uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd[] initializeExtQueryFormatCmds() -> initializeExtQueryFormatCmds
    227:230:java.util.Map initializeExtQueryFormatCmdMap() -> initializeExtQueryFormatCmdMap
    242:243:void initialize() -> initialize
    251:264:void sendCommand(java.lang.String[]) -> sendCommand
    267:271:void sendPlayerCommand(java.lang.String) -> sendPlayerCommand
    274:275:boolean checkCorrelation(java.lang.Integer,int) -> checkCorrelation
    285:286:void cancelRequests(java.lang.Class) -> cancelRequests
    289:289:boolean checkCorrelation(java.lang.String,int) -> checkCorrelation
    293:293:boolean checkCorrelation(java.lang.Class,int) -> checkCorrelation
    312:319:void requestItems(java.lang.String,java.lang.String,int,java.util.List) -> requestItems
    322:323:void requestItems(java.lang.String,int,java.util.List) -> requestItems
    326:327:void requestItems(java.lang.String,int) -> requestItems
    330:334:void requestPlayerItems(java.lang.String,int,java.util.List) -> requestPlayerItems
    423:516:void parseSqueezerList(uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd,java.util.List) -> parseSqueezerList
    46:46:uk.org.ngo.squeezer.service.SqueezeService access$000(uk.org.ngo.squeezer.service.SqueezerCLIImpl) -> access$000
uk.org.ngo.squeezer.service.SqueezerCLIImpl$1 -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$1:
    uk.org.ngo.squeezer.model.SqueezerPlayer defaultPlayer -> a
    java.lang.String lastConnectedPlayer -> b
    java.util.List players -> c
    uk.org.ngo.squeezer.service.SqueezerCLIImpl this$0 -> d
    95:95:java.lang.Class getDataType() -> getDataType
    99:103:void clear() -> clear
    106:111:void add(java.util.Map) -> add
    114:128:boolean processList(boolean,int,int,java.util.Map) -> processList
uk.org.ngo.squeezer.service.SqueezerCLIImpl$1$1 -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$1$1:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$1 this$1 -> a
uk.org.ngo.squeezer.service.SqueezerCLIImpl$AlbumListHandler -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$AlbumListHandler:
    java.util.List albums -> a
    uk.org.ngo.squeezer.service.SqueezerCLIImpl this$0 -> b
    610:610:java.lang.Class getDataType() -> getDataType
    614:615:void clear() -> clear
    618:619:void add(java.util.Map) -> add
    622:630:boolean processList(boolean,int,int,java.util.Map) -> processList
uk.org.ngo.squeezer.service.SqueezerCLIImpl$AlbumListHandler$1 -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$AlbumListHandler$1:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$AlbumListHandler this$1 -> a
uk.org.ngo.squeezer.service.SqueezerCLIImpl$ArtistListHandler -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$ArtistListHandler:
    java.util.List artists -> a
    uk.org.ngo.squeezer.service.SqueezerCLIImpl this$0 -> b
    581:581:java.lang.Class getDataType() -> getDataType
    585:587:void clear() -> clear
    590:591:void add(java.util.Map) -> add
    594:602:boolean processList(boolean,int,int,java.util.Map) -> processList
uk.org.ngo.squeezer.service.SqueezerCLIImpl$ArtistListHandler$1 -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$ArtistListHandler$1:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$ArtistListHandler this$1 -> a
uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd:
    boolean playerSpecific -> a
    boolean prefixed -> b
    java.lang.String cmd -> c
    java.util.Set taggedParameters -> d
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo[] parserInfos -> e
    uk.org.ngo.squeezer.service.SqueezerCLIImpl this$0 -> f
    49:49:uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo[] access$1100(uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd) -> access$1100
    49:49:java.util.Set access$1500(uk.org.ngo.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd) -> access$1500
uk.org.ngo.squeezer.service.SqueezerCLIImpl$GenreListHandler -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$GenreListHandler:
    java.util.List genres -> a
    uk.org.ngo.squeezer.service.SqueezerCLIImpl this$0 -> b
    552:552:java.lang.Class getDataType() -> getDataType
    556:557:void clear() -> clear
    560:561:void add(java.util.Map) -> add
    564:572:boolean processList(boolean,int,int,java.util.Map) -> processList
uk.org.ngo.squeezer.service.SqueezerCLIImpl$GenreListHandler$1 -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$GenreListHandler$1:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$GenreListHandler this$1 -> a
uk.org.ngo.squeezer.service.SqueezerCLIImpl$PlaylistsHandler -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$PlaylistsHandler:
    java.util.List playlists -> a
    uk.org.ngo.squeezer.service.SqueezerCLIImpl this$0 -> b
    666:666:java.lang.Class getDataType() -> getDataType
    670:671:void clear() -> clear
    674:675:void add(java.util.Map) -> add
    678:686:boolean processList(boolean,int,int,java.util.Map) -> processList
uk.org.ngo.squeezer.service.SqueezerCLIImpl$PlaylistsHandler$1 -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$PlaylistsHandler$1:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$PlaylistsHandler this$1 -> a
uk.org.ngo.squeezer.service.SqueezerCLIImpl$PluginItemListHandler -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$PluginItemListHandler:
    java.util.List pluginItems -> a
    uk.org.ngo.squeezer.service.SqueezerCLIImpl this$0 -> b
    724:724:java.lang.Class getDataType() -> getDataType
    728:729:void clear() -> clear
    732:733:void add(java.util.Map) -> add
    736:744:boolean processList(boolean,int,int,java.util.Map) -> processList
uk.org.ngo.squeezer.service.SqueezerCLIImpl$PluginItemListHandler$1 -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$PluginItemListHandler$1:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$PluginItemListHandler this$1 -> a
uk.org.ngo.squeezer.service.SqueezerCLIImpl$PluginListHandler -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$PluginListHandler:
    java.util.List plugins -> a
    uk.org.ngo.squeezer.service.SqueezerCLIImpl this$0 -> b
    695:695:java.lang.Class getDataType() -> getDataType
    699:700:void clear() -> clear
    703:704:void add(java.util.Map) -> add
    707:715:boolean processList(boolean,int,int,java.util.Map) -> processList
uk.org.ngo.squeezer.service.SqueezerCLIImpl$PluginListHandler$1 -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$PluginListHandler$1:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$PluginListHandler this$1 -> a
uk.org.ngo.squeezer.service.SqueezerCLIImpl$SongListHandler -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$SongListHandler:
    java.util.List songs -> a
    uk.org.ngo.squeezer.service.SqueezerCLIImpl this$0 -> b
    638:638:java.lang.Class getDataType() -> getDataType
    642:643:void clear() -> clear
    646:647:void add(java.util.Map) -> add
    650:658:boolean processList(boolean,int,int,java.util.Map) -> processList
uk.org.ngo.squeezer.service.SqueezerCLIImpl$SongListHandler$1 -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$SongListHandler$1:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$SongListHandler this$1 -> a
uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo:
    java.lang.String item_delimiter -> a
    java.lang.String count_id -> b
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezerListHandler handler -> c
    347:347:uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezerListHandler access$1200(uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo) -> access$1200
    347:347:java.lang.String access$1300(uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo) -> access$1300
    347:347:java.lang.String access$1400(uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo) -> access$1400
uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezerListHandler -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$SqueezerListHandler:
    java.lang.Class getDataType() -> getDataType
    void clear() -> clear
    void add(java.util.Map) -> add
    boolean processList(boolean,int,int,java.util.Map) -> processList
uk.org.ngo.squeezer.service.SqueezerCLIImpl$YearListHandler -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$YearListHandler:
    java.util.List years -> a
    uk.org.ngo.squeezer.service.SqueezerCLIImpl this$0 -> b
    524:524:java.lang.Class getDataType() -> getDataType
    528:529:void clear() -> clear
    532:533:void add(java.util.Map) -> add
    536:544:boolean processList(boolean,int,int,java.util.Map) -> processList
uk.org.ngo.squeezer.service.SqueezerCLIImpl$YearListHandler$1 -> uk.org.ngo.squeezer.service.SqueezerCLIImpl$YearListHandler$1:
    uk.org.ngo.squeezer.service.SqueezerCLIImpl$YearListHandler this$1 -> a
uk.org.ngo.squeezer.service.SqueezerConnectionState -> uk.org.ngo.squeezer.service.SqueezerConnectionState:
    java.util.concurrent.atomic.AtomicInteger currentConnectionGeneration -> a
    java.util.concurrent.atomic.AtomicReference callback -> b
    java.util.concurrent.atomic.AtomicBoolean isConnected -> c
    java.util.concurrent.atomic.AtomicBoolean canRandomplay -> d
    java.util.concurrent.atomic.AtomicReference socketRef -> e
    java.util.concurrent.atomic.AtomicReference socketWriter -> f
    java.util.concurrent.atomic.AtomicReference activePlayer -> g
    java.util.concurrent.atomic.AtomicReference defaultPlayer -> h
    java.util.concurrent.atomic.AtomicReference currentHost -> i
    java.util.concurrent.atomic.AtomicReference httpPort -> j
    java.util.concurrent.atomic.AtomicReference cliPort -> k
    android.net.wifi.WifiManager$WifiLock wifiLock -> l
    64:65:void setWifiLock(android.net.wifi.WifiManager$WifiLock) -> setWifiLock
    69:87:void updateWifiLock(boolean) -> updateWifiLock
    93:108:void disconnect() -> disconnect
    111:121:void setConnectionState(boolean,boolean) -> setConnectionState
    124:124:uk.org.ngo.squeezer.IServiceCallback getCallback() -> getCallback
    128:129:void setCallback(uk.org.ngo.squeezer.IServiceCallback) -> setCallback
    132:133:void callbackCompareAndSet(uk.org.ngo.squeezer.IServiceCallback,uk.org.ngo.squeezer.IServiceCallback) -> callbackCompareAndSet
    136:136:uk.org.ngo.squeezer.model.SqueezerPlayer getActivePlayer() -> getActivePlayer
    140:141:void setActivePlayer(uk.org.ngo.squeezer.model.SqueezerPlayer) -> setActivePlayer
    148:149:void setDefaultPlayer(uk.org.ngo.squeezer.model.SqueezerPlayer) -> setDefaultPlayer
    152:152:java.io.PrintWriter getSocketWriter() -> getSocketWriter
    166:168:void setHttpPort(java.lang.Integer) -> setHttpPort
    171:172:void setCanRandomplay(boolean) -> setCanRandomplay
    175:175:boolean canRandomplay() -> canRandomplay
    179:179:boolean isConnected() -> isConnected
    183:185:void startListeningThread(uk.org.ngo.squeezer.service.SqueezeService) -> startListeningThread
    236:281:void startConnect(uk.org.ngo.squeezer.service.SqueezeService,java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.String) -> startConnect
    284:291:java.lang.String parseHost(java.lang.String) -> parseHost
    295:306:int parsePort(java.lang.String) -> parsePort
    311:311:java.lang.Integer getHttpPort() -> getHttpPort
    315:315:java.lang.String getCurrentHost() -> getCurrentHost
    37:37:java.util.concurrent.atomic.AtomicInteger access$100(uk.org.ngo.squeezer.service.SqueezerConnectionState) -> access$100
    37:37:java.util.concurrent.atomic.AtomicReference access$200(uk.org.ngo.squeezer.service.SqueezerConnectionState) -> access$200
    37:37:java.util.concurrent.atomic.AtomicReference access$300(uk.org.ngo.squeezer.service.SqueezerConnectionState) -> access$300
    37:37:void access$400(uk.org.ngo.squeezer.service.SqueezerConnectionState,boolean,boolean) -> access$400
uk.org.ngo.squeezer.service.SqueezerConnectionState$1 -> uk.org.ngo.squeezer.service.SqueezerConnectionState$1:
    uk.org.ngo.squeezer.service.SqueezeService val$service -> a
    java.lang.String val$cleanHostPort -> b
    java.lang.String val$host -> c
    int val$port -> d
    uk.org.ngo.squeezer.service.SqueezerConnectionState this$0 -> e
    256:278:void run() -> run
uk.org.ngo.squeezer.service.SqueezerConnectionState$ListeningThread -> uk.org.ngo.squeezer.service.SqueezerConnectionState$ListeningThread:
    uk.org.ngo.squeezer.service.SqueezeService service -> a
    java.net.Socket socket -> b
    int generationNumber -> c
    uk.org.ngo.squeezer.service.SqueezerConnectionState this$0 -> d
    201:230:void run() -> run
uk.org.ngo.squeezer.service.SqueezerPlayerState -> uk.org.ngo.squeezer.service.SqueezerPlayerState:
    java.util.concurrent.atomic.AtomicBoolean isPlaying -> a
    java.util.concurrent.atomic.AtomicBoolean isPoweredOn -> b
    java.util.concurrent.atomic.AtomicReference currentSong -> c
    java.util.concurrent.atomic.AtomicReference currentTimeSecond -> d
    java.util.concurrent.atomic.AtomicReference currentSongDuration -> e
    36:36:boolean isPlaying() -> isPlaying
    39:40:uk.org.ngo.squeezer.service.SqueezerPlayerState setPlaying(boolean) -> setPlaying
    44:44:boolean isPoweredOn() -> isPoweredOn
    47:48:uk.org.ngo.squeezer.service.SqueezerPlayerState setPoweredOn(boolean) -> setPoweredOn
    52:52:uk.org.ngo.squeezer.model.SqueezerSong getCurrentSong() -> getCurrentSong
    55:56:java.lang.String getCurrentSongName() -> getCurrentSongName
    59:60:uk.org.ngo.squeezer.service.SqueezerPlayerState setCurrentSong(uk.org.ngo.squeezer.model.SqueezerSong) -> setCurrentSong
    63:63:boolean setCurrentSongUpdated(uk.org.ngo.squeezer.model.SqueezerSong) -> setCurrentSongUpdated
    70:70:java.lang.Integer getCurrentTimeSecond(int) -> getCurrentTimeSecond
    73:74:uk.org.ngo.squeezer.service.SqueezerPlayerState setCurrentTimeSecond(java.lang.Integer) -> setCurrentTimeSecond
    78:78:java.lang.Integer getCurrentSongDuration() -> getCurrentSongDuration
    81:81:java.lang.Integer getCurrentSongDuration(int) -> getCurrentSongDuration
    84:85:uk.org.ngo.squeezer.service.SqueezerPlayerState setCurrentSongDuration(java.lang.Integer) -> setCurrentSongDuration
    89:93:void clear() -> clear
