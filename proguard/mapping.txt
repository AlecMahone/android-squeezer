android.support.v4.app.BackStackRecord -> android.support.v4.app.r:
    android.support.v4.app.FragmentManagerImpl mManager -> l
    android.support.v4.app.BackStackRecord$Op mHead -> a
    android.support.v4.app.BackStackRecord$Op mTail -> m
    int mNumOp -> b
    int mEnterAnim -> n
    int mExitAnim -> o
    int mTransition -> c
    int mTransitionStyle -> d
    boolean mAddToBackStack -> e
    boolean mAllowAddToBackStack -> p
    java.lang.String mName -> f
    boolean mCommitted -> q
    int mIndex -> g
    int mBreadCrumbTitleRes -> h
    java.lang.CharSequence mBreadCrumbTitleText -> i
    int mBreadCrumbShortTitleRes -> j
    java.lang.CharSequence mBreadCrumbShortTitleText -> k
    204:262:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    295:305:void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    308:309:android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    367:377:android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    496:516:void bumpBackStackNesting(int) -> a
    519:519:int commit() -> a
    523:523:int commitAllowingStateLoss() -> b
    527:536:int commitInternal(boolean) -> b
    540:622:void run() -> run
    625:695:void popFromBackStack(boolean) -> a
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.p:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    java.util.ArrayList removed -> g
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    93:126:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    130:130:int describeContents() -> describeContents
    134:143:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.n:
    146:146:java.lang.Object[] newArray(int) -> newArray
    146:146:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.a:
    int mStyle -> a
    int mTheme -> I
    boolean mCancelable -> J
    boolean mShowsDialog -> K
    int mBackStackId -> L
    android.app.Dialog mDialog -> M
    boolean mDestroyed -> N
    boolean mRemoved -> O
    121:124:void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    149:150:void dismiss() -> a
    153:171:void dismissInternal(boolean) -> b
    232:244:void onCreate(android.os.Bundle) -> a
    249:265:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    292:292:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    296:296:void onCancel(android.content.DialogInterface) -> onCancel
    299:306:void onDismiss(android.content.DialogInterface) -> onDismiss
    310:333:void onActivityCreated(android.os.Bundle) -> d
    337:342:void onStart() -> b
    346:368:void onSaveInstanceState(android.os.Bundle) -> e
    372:376:void onStop() -> c
    383:393:void onDestroyView() -> d
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> b
    android.view.View mAnimatingAway -> c
    int mStateAfterAnimating -> d
    android.os.Bundle mSavedFragmentState -> e
    android.util.SparseArray mSavedViewState -> f
    int mIndex -> g
    java.lang.String mWho -> I
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManager mFragmentManager -> s
    android.support.v4.app.FragmentActivity mImmediateActivity -> t
    android.support.v4.app.FragmentActivity mActivity -> u
    int mFragmentId -> v
    int mContainerId -> w
    java.lang.String mTag -> x
    boolean mHidden -> y
    boolean mDetached -> z
    boolean mRetainInstance -> A
    boolean mRetaining -> B
    boolean mHasMenu -> C
    boolean mCalled -> D
    int mNextAnim -> E
    android.view.ViewGroup mContainer -> F
    android.view.View mView -> G
    android.view.View mInnerView -> H
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> J
    boolean mLoadersStarted -> K
    boolean mCheckedForLoaderManager -> L
    353:353:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    372:393:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    400:404:void restoreViewState() -> f
    407:409:void setIndex(int) -> a
    412:412:boolean isInBackStack() -> g
    419:419:boolean equals(java.lang.Object) -> equals
    426:426:int hashCode() -> hashCode
    431:446:java.lang.String toString() -> toString
    462:462:java.lang.String getTag() -> h
    473:477:void setArguments(android.os.Bundle) -> f
    484:484:android.os.Bundle getArguments() -> i
    537:537:android.support.v4.app.FragmentActivity getActivity() -> j
    544:547:android.content.res.Resources getResources() -> a
    557:557:java.lang.CharSequence getText(int) -> b
    567:567:java.lang.String getString(int) -> c
    580:580:java.lang.String getString(int,java.lang.Object[]) -> a
    591:591:android.support.v4.app.FragmentManager getFragmentManager() -> k
    699:705:void setHasOptionsMenu$1385ff() -> l
    767:767:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    813:814:void onInflate$423a76cd() -> m
    821:822:void onAttach$63a22f9() -> n
    846:847:void onCreate(android.os.Bundle) -> a
    893:893:android.view.View getView() -> o
    910:911:void onActivityCreated(android.os.Bundle) -> d
    919:931:void onStart() -> b
    940:941:void onResume() -> p
    963:963:void onSaveInstanceState(android.os.Bundle) -> e
    966:967:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    975:976:void onPause() -> q
    984:985:void onStop() -> c
    988:989:void onLowMemory() -> onLowMemory
    1001:1002:void onDestroyView() -> d
    1009:1019:void onDestroy() -> r
    1028:1048:void initState() -> s
    1055:1056:void onDetach() -> t
    1072:1072:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1120:1120:boolean onOptionsItemSelected(android.view.MenuItem) -> a
    1151:1152:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1210:1278:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    1281:1285:void performStart() -> u
    1288:1289:void performStop() -> v
    1292:1306:void performReallyStop(boolean) -> a
    1309:1313:void performDestroyView() -> w
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.i:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    298:298:int describeContents() -> describeContents
    303:304:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.u:
    307:307:java.lang.Object[] newArray(int) -> newArray
    307:307:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> b
    android.support.v4.app.FragmentManagerImpl mFragments -> c
    boolean mCreated -> a
    boolean mResumed -> f
    boolean mStopped -> d
    boolean mReallyStopped -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.app.HCSparseArray mAllLoaderManagers -> e
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> k
    131:149:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    156:159:void onBackPressed() -> onBackPressed
    166:168:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    175:193:void onCreate(android.os.Bundle) -> onCreate
    200:211:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    219:296:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    304:312:void onDestroy() -> onDestroy
    319:328:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    336:338:void onLowMemory() -> onLowMemory
    345:357:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    366:372:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    379:386:void onPause() -> onPause
    393:397:void onResume() -> onResume
    404:408:void onPostResume() -> onPostResume
    415:425:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    434:462:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    470:475:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    483:515:void onStart() -> onStart
    522:528:void onStop() -> onStop
    535:545:void supportInvalidateOptionsMenu() -> k
    558:580:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    583:588:void doReallyStop(boolean) -> a
    627:627:android.support.v4.app.FragmentManager getSupportFragmentManager() -> l
    636:640:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    685:697:android.support.v4.app.LoaderManagerImpl getLoaderManager$3d2266e4(int) -> c
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.x:
    android.support.v4.app.FragmentActivity this$0 -> a
    76:89:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.l:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.t:
    java.lang.Object activity -> a
    java.util.HashMap children -> b
    java.util.ArrayList fragments -> c
    android.support.v4.app.HCSparseArray loaders -> d
android.support.v4.app.FragmentManager -> android.support.v4.app.k:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack$255f295(int) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.d:
    boolean DEBUG -> a
    boolean HONEYCOMB -> g
    java.util.ArrayList mPendingActions -> h
    java.lang.Runnable[] mTmpActions -> i
    boolean mExecutingActions -> j
    java.util.ArrayList mActive -> b
    java.util.ArrayList mAdded -> c
    java.util.ArrayList mAvailIndices -> k
    java.util.ArrayList mBackStack -> l
    java.util.ArrayList mCreatedMenus -> m
    java.util.ArrayList mBackStackIndices -> n
    java.util.ArrayList mAvailBackStackIndices -> o
    java.util.ArrayList mBackStackChangeListeners -> p
    int mCurState -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mNeedMenuInvalidate -> q
    boolean mStateSaved -> r
    boolean mDestroyed -> s
    java.lang.String mNoTransactionsBecause -> f
    android.os.Bundle mStateBundle -> t
    android.util.SparseArray mStateArray -> u
    java.lang.Runnable mExecCommit -> v
    android.view.animation.Interpolator DECELERATE_QUINT -> w
    android.view.animation.Interpolator DECELERATE_CUBIC -> x
    android.view.animation.Interpolator ACCELERATE_QUINT -> y
    android.view.animation.Interpolator ACCELERATE_CUBIC -> z
    417:417:android.support.v4.app.FragmentTransaction beginTransaction() -> a
    436:438:boolean popBackStackImmediate() -> b
    459:467:void popBackStack$255f295(int) -> a
    546:552:java.lang.String toString() -> toString
    557:661:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    672:682:android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    686:689:android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    694:748:android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    753:1017:void moveToState(android.support.v4.app.Fragment,int,int,int) -> a
    1020:1021:void moveToState(android.support.v4.app.Fragment) -> a
    1024:1025:void moveToState$2563266(int) -> e
    1028:1050:void moveToState(int,int,int,boolean) -> a
    1086:1102:void addFragment(android.support.v4.app.Fragment,boolean) -> a
    1105:1117:void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    1120:1134:void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    1139:1153:void showFragment(android.support.v4.app.Fragment,int,int) -> c
    1158:1171:void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    1174:1186:void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    1189:1205:android.support.v4.app.Fragment findFragmentById(int) -> b
    1209:1225:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    1241:1249:void checkStateLoss() -> r
    1252:1267:void enqueueAction(java.lang.Runnable,boolean) -> a
    1271:1287:int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    1291:1312:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    1316:1323:void freeBackStackIndex(int) -> c
    1330:1363:boolean execPendingActions() -> c
    1367:1372:void reportBackStackChanged() -> s
    1375:1380:void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    1383:1442:boolean popBackStackState$68507953$44bd8ea3(int,int) -> a
    1446:1460:java.util.ArrayList retainNonConfig() -> d
    1464:1477:void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    1508:1609:android.os.Parcelable saveAllState() -> e
    1615:1716:void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    1719:1721:void attachActivity(android.support.v4.app.FragmentActivity) -> a
    1724:1725:void noteStateNotSaved() -> f
    1728:1730:void dispatchCreate() -> g
    1733:1735:void dispatchActivityCreated() -> h
    1738:1740:void dispatchStart() -> i
    1743:1745:void dispatchResume() -> j
    1748:1749:void dispatchPause() -> k
    1755:1758:void dispatchStop() -> l
    1761:1769:void dispatchReallyStop(boolean) -> a
    1772:1775:void dispatchDestroy() -> m
    1778:1786:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    1789:1797:void dispatchLowMemory() -> n
    1800:1827:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1831:1841:boolean dispatchPrepareOptionsMenu$1eec55b9() -> o
    1845:1855:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    1859:1869:boolean dispatchContextItemSelected$1b88ab4c() -> p
    1873:1881:void dispatchOptionsMenuClosed$1eec55bd() -> q
    1884:1896:int reverseTransit(int) -> d
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.g:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    411:412:void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.f:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    464:465:void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.e:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    944:949:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    952:952:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    955:955:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    346:346:int describeContents() -> describeContents
    350:353:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.h:
    356:356:java.lang.Object[] newArray(int) -> newArray
    356:356:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> c
    int mIndex -> d
    boolean mFromLayout -> e
    int mFragmentId -> f
    int mContainerId -> g
    java.lang.String mTag -> h
    boolean mRetainInstance -> i
    boolean mDetached -> j
    android.os.Bundle mArguments -> k
    android.os.Bundle mSavedFragmentState -> a
    android.support.v4.app.Fragment mInstance -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    88:112:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    116:116:int describeContents() -> describeContents
    120:130:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.m:
    133:133:java.lang.Object[] newArray(int) -> newArray
    133:133:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.w:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.HCSparseArray -> android.support.v4.app.b:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    53:53:java.lang.Object get(int) -> a
    88:89:void remove(int) -> b
    95:99:void removeAt(int) -> c
    104:126:void gc() -> c
    185:189:int size() -> a
    198:202:int keyAt(int) -> d
    211:215:java.lang.Object valueAt(int) -> e
    268:277:void clear() -> b
    314:330:int binarySearch$76412d8d(int[],int,int) -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.c:
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.s:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.j:
    boolean DEBUG -> a
    android.support.v4.app.HCSparseArray mLoaders -> d
    android.support.v4.app.HCSparseArray mInactiveLoaders -> e
    android.support.v4.app.FragmentActivity mActivity -> b
    boolean mStarted -> f
    boolean mRetaining -> c
    470:471:void updateActivity(android.support.v4.app.FragmentActivity) -> a
    684:699:void doStart() -> a
    702:714:void doStop() -> b
    717:730:void doRetain() -> c
    733:741:void finishRetain() -> d
    744:747:void doReportNextStart() -> e
    750:753:void doReportStart() -> f
    756:768:void doDestroy() -> g
    772:778:java.lang.String toString() -> toString
    783:803:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.o:
    int mId -> a
    android.os.Bundle mArgs -> k
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> b
    android.support.v4.content.Loader mLoader -> c
    boolean mHaveData -> d
    boolean mDeliveredData -> l
    java.lang.Object mData -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mRetainingStarted -> h
    boolean mReportNextStart -> i
    boolean mDestroyed -> m
    boolean mListenerRegistered -> j
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    305:315:void stop() -> a
    318:350:void destroy() -> b
    405:422:void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    426:434:java.lang.String toString() -> toString
    438:461:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.v:
    32:41:android.view.ViewGroup wrap(android.view.View) -> a
    53:54:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    61:62:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.q:
android.support.v4.content.Loader -> android.support.v4.b.b:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    114:119:void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    127:134:void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    179:182:void startLoading() -> a
    227:228:void stopLoading() -> b
    275:280:void reset() -> c
    334:339:java.lang.String toString() -> toString
    351:357:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.b.a:
android.support.v4.os.ParcelableCompat -> android.support.v4.a.b:
    25:28:android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    40:40:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    45:45:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.a:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    40:40:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    44:44:java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    24:39:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    47:48:void close() -> close
    51:52:void flush() -> flush
    55:64:void write(char[],int,int) -> write
    67:71:void flushBuilder() -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.n:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    141:141:int getActionIndex(android.view.MotionEvent) -> a
    151:151:int findPointerIndex(android.view.MotionEvent,int) -> a
    160:160:int getPointerId(android.view.MotionEvent,int) -> b
    169:169:float getX(android.view.MotionEvent,int) -> c
    178:178:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.i:
    41:41:int findPointerIndex(android.view.MotionEvent,int) -> a
    45:45:int getPointerId(android.view.MotionEvent,int) -> b
    49:49:float getX(android.view.MotionEvent,int) -> c
    53:53:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.m:
    63:63:int findPointerIndex(android.view.MotionEvent,int) -> a
    67:67:int getPointerId(android.view.MotionEvent,int) -> b
    71:71:float getX(android.view.MotionEvent,int) -> c
    75:75:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.c:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.a:
    int getCount() -> a
    java.lang.Object instantiateItem$e9b6c8c() -> b
    boolean isViewFromObject$171eb1dd() -> c
    android.os.Parcelable saveState() -> d
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.p:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    90:90:float getYVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.g:
    43:43:float getYVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.j:
    57:57:float getYVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.d:
    float getYVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.f:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    72:72:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.k:
    38:38:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.o:
    48:48:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.b:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.util.ArrayList mItems -> a
    android.support.v4.view.PagerAdapter mAdapter -> b
    int mCurItem -> c
    int mRestoredCurItem -> d
    android.os.Parcelable mRestoredAdapterState -> e
    java.lang.ClassLoader mRestoredClassLoader -> f
    android.widget.Scroller mScroller -> g
    int mChildWidthMeasureSpec -> h
    int mChildHeightMeasureSpec -> i
    boolean mInLayout -> j
    boolean mScrollingCacheEnabled -> k
    boolean mPopulatePending -> l
    boolean mScrolling -> m
    boolean mIsBeingDragged -> n
    boolean mIsUnableToDrag -> o
    int mTouchSlop -> p
    float mInitialMotionX -> q
    float mLastMotionX -> r
    float mLastMotionY -> s
    int mActivePointerId -> t
    android.view.VelocityTracker mVelocityTracker -> u
    int mMinimumVelocity -> v
    int mMaximumVelocity -> w
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> x
    int mScrollState -> y
    203:208:void setScrollState(int) -> a
    248:284:void setCurrentItemInternal$4870cd2e(int,boolean) -> a
    319:327:void addNewItem(int,int) -> a
    379:453:void populate() -> a
    504:508:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    513:529:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    533:547:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    561:565:void onAttachedToWindow() -> onAttachedToWindow
    574:598:void onMeasure(int,int) -> onMeasure
    602:610:void onSizeChanged(int,int,int,int) -> onSizeChanged
    614:636:void onLayout(boolean,int,int,int,int) -> onLayout
    641:669:void computeScroll() -> computeScroll
    673:698:void completeScroll() -> b
    708:812:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    818:937:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    941:953:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    956:963:void endDrag() -> c
    966:978:void setScrollingCacheEnabled(boolean) -> a
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.h:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.l:
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    467:470:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    474:474:java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.e:
    480:480:java.lang.Object[] newArray(int) -> a
    480:480:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
com.danga.squeezer.IServiceCallback -> com.danga.squeezer.IServiceCallback:
    void onMusicChanged() -> a
    void onPlayerChanged(java.lang.String,java.lang.String) -> a
    void onConnectionChanged(boolean,boolean) -> a
    void onPlayStatusChanged(boolean) -> a
    void onTimeInSongChange(int,int) -> a
com.danga.squeezer.IServiceCallback$Stub -> com.danga.squeezer.IServiceCallback$Stub:
    23:30:com.danga.squeezer.IServiceCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:90:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.IServiceCallback$Stub$Proxy -> com.danga.squeezer.IServiceCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    101:101:android.os.IBinder asBinder() -> asBinder
    109:117:void onMusicChanged() -> a
    122:132:void onPlayerChanged(java.lang.String,java.lang.String) -> a
    137:147:void onConnectionChanged(boolean,boolean) -> a
    150:159:void onPlayStatusChanged(boolean) -> a
    162:172:void onTimeInSongChange(int,int) -> a
com.danga.squeezer.IconRowAdapter -> com.danga.squeezer.IconRowAdapter:
    android.app.Activity activity -> a
    int rowLayout -> b
    int iconId -> c
    int textId -> d
    int[] images -> e
    java.lang.String[] items -> f
    41:41:int getCount() -> getCount
    53:53:long getItemId(int) -> getItemId
    63:70:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    1:1:java.lang.Object getItem(int) -> getItem
com.danga.squeezer.IntEditTextPreference -> com.danga.squeezer.IntEditTextPreference:
    39:39:java.lang.String getPersistedString(java.lang.String) -> getPersistedString
    44:44:boolean persistString(java.lang.String) -> persistString
com.danga.squeezer.ReflectUtil -> com.danga.squeezer.ReflectUtil:
    43:48:java.lang.Class getGenericClass$7c989d85(java.lang.Class,java.lang.Class) -> a
    99:113:java.lang.reflect.Type[] genericInterfaceResolver(java.lang.Class,java.lang.Class,java.lang.reflect.Type[]) -> a
    126:147:java.lang.reflect.Type[] mapTypeArguments(java.lang.Class,java.lang.reflect.Type,java.lang.reflect.Type[]) -> a
com.danga.squeezer.RepeatingImageButton -> com.danga.squeezer.RepeatingImageButton:
    long mStartTime -> a
    int mRepeatCount -> b
    com.danga.squeezer.RepeatingImageButton$RepeatListener mListener -> c
    long mInterval -> d
    java.lang.Runnable mRepeater -> e
    65:68:boolean performLongClick() -> performLongClick
    73:81:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    86:96:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    109:113:void doRepeat(boolean) -> a
    108:108:void access$0$2b501f3b(com.danga.squeezer.RepeatingImageButton) -> a
    36:36:long access$1(com.danga.squeezer.RepeatingImageButton) -> b
com.danga.squeezer.RepeatingImageButton$1 -> com.danga.squeezer.RepeatingImageButton$1:
    com.danga.squeezer.RepeatingImageButton this$0 -> a
    101:105:void run() -> run
com.danga.squeezer.RepeatingImageButton$RepeatListener -> com.danga.squeezer.RepeatingImageButton$RepeatListener:
com.danga.squeezer.SettingsActivity -> com.danga.squeezer.SettingsActivity:
    java.lang.String TAG -> a
    com.danga.squeezer.service.ISqueezeService serviceStub -> b
    android.preference.EditTextPreference addrPref -> c
    android.content.ServiceConnection serviceConnection -> d
    55:86:void onCreate(android.os.Bundle) -> onCreate
    90:94:void onResume() -> onResume
    98:100:void onPause() -> onPause
    103:108:void updateAddressSummary(java.lang.String) -> a
    111:120:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    124:126:void show(android.content.Context) -> a
    41:41:void access$0(com.danga.squeezer.SettingsActivity,com.danga.squeezer.service.ISqueezeService) -> a
    41:41:com.danga.squeezer.service.ISqueezeService access$1(com.danga.squeezer.SettingsActivity) -> a
com.danga.squeezer.SettingsActivity$1 -> com.danga.squeezer.SettingsActivity$1:
    com.danga.squeezer.SettingsActivity this$0 -> a
    46:47:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    49:50:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.danga.squeezer.SettingsActivity$2 -> com.danga.squeezer.SettingsActivity$2:
    com.danga.squeezer.SettingsActivity this$0 -> a
    72:78:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.danga.squeezer.Squeezer -> com.danga.squeezer.Squeezer:
    com.danga.squeezer.Squeezer instance -> a
    38:40:void onCreate() -> onCreate
com.danga.squeezer.SqueezerActivity -> com.danga.squeezer.SqueezerActivity:
    java.util.concurrent.atomic.AtomicReference currentSong -> f
    android.widget.TextView albumText -> g
    android.widget.TextView artistText -> h
    android.widget.TextView trackText -> i
    android.widget.TextView currentTime -> j
    android.widget.TextView totalTime -> k
    android.view.MenuItem connectButton -> l
    android.view.MenuItem disconnectButton -> m
    android.view.MenuItem powerOnButton -> n
    android.view.MenuItem powerOffButton -> o
    android.view.MenuItem playersButton -> p
    android.view.MenuItem searchButton -> q
    android.widget.ImageButton homeButton -> r
    android.widget.ImageButton curPlayListButton -> s
    android.widget.ImageButton playPauseButton -> t
    android.widget.ImageButton nextButton -> u
    android.widget.ImageButton prevButton -> v
    android.widget.ImageView albumArt -> w
    android.widget.SeekBar seekBar -> x
    com.danga.squeezer.framework.SqueezerIconUpdater iconUpdater -> y
    android.content.BroadcastReceiver broadcastReceiver -> z
    boolean connectInProgress -> A
    java.lang.String connectingTo -> B
    android.app.ProgressDialog connectingDialog -> C
    boolean updateSeekBar -> D
    int secondsIn -> E
    int secondsTotal -> F
    android.os.Handler uiThreadHandler -> G
    com.google.android.apps.analytics.GoogleAnalyticsTracker tracker -> H
    com.danga.squeezer.IServiceCallback serviceCallback -> I
    138:138:android.os.Handler getUIThreadHandler() -> b
    143:286:void onCreate(android.os.Bundle) -> onCreate
    290:334:void setConnected(boolean,boolean) -> a
    337:348:void updatePlayPauseIcon() -> d
    352:364:void updateUIForPlayer() -> e
    368:380:void onServiceConnected() -> b_
    384:404:void onResume() -> onResume
    415:423:void updateTimeDisplayTo(int,int) -> a
    427:431:void updateSongInfoFromService() -> f
    434:443:void updateSongInfo(com.danga.squeezer.model.SqueezerSong) -> a
    452:460:int getSecondsElapsed() -> g
    464:472:int getSecondsTotal() -> h
    476:484:boolean setSecondsElapsed(int) -> a
    488:496:com.danga.squeezer.model.SqueezerSong getCurrentSong() -> i
    500:508:java.lang.String getActivePlayerName() -> m
    512:520:boolean isConnected() -> n
    524:532:boolean isPlaying() -> o
    536:544:boolean canPowerOn() -> p
    548:556:boolean canPowerOff() -> q
    561:571:void onPause() -> onPause
    575:578:boolean onSearchRequested() -> onSearchRequested
    583:599:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    669:710:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    715:720:java.lang.String getConfiguredCliIpPort() -> r
    725:726:boolean isAutoConnect() -> s
    731:741:void onUserInitiatesConnect() -> t
    744:765:void startVisibleConnection() -> u
    768:772:void show(android.content.Context) -> a
    776:783:void onDestroy() -> onDestroy
    511:511:boolean access$1(com.danga.squeezer.SqueezerActivity) -> a
    743:743:void access$2(com.danga.squeezer.SqueezerActivity) -> b
    117:117:int access$3(com.danga.squeezer.SqueezerActivity) -> c
    118:118:int access$4(com.danga.squeezer.SqueezerActivity) -> d
    414:414:void access$5(com.danga.squeezer.SqueezerActivity,int,int) -> a
    121:121:android.os.Handler access$6(com.danga.squeezer.SqueezerActivity) -> e
    289:289:void access$7(com.danga.squeezer.SqueezerActivity,boolean,boolean) -> a
    351:351:void access$8(com.danga.squeezer.SqueezerActivity) -> f
    426:426:void access$9(com.danga.squeezer.SqueezerActivity) -> g
    336:336:void access$10(com.danga.squeezer.SqueezerActivity) -> h
    117:117:void access$11(com.danga.squeezer.SqueezerActivity,int) -> a
    118:118:void access$12(com.danga.squeezer.SqueezerActivity,int) -> b
    113:113:void access$13(com.danga.squeezer.SqueezerActivity,android.app.ProgressDialog) -> a
    113:113:android.app.ProgressDialog access$14(com.danga.squeezer.SqueezerActivity) -> i
    112:112:java.lang.String access$15(com.danga.squeezer.SqueezerActivity) -> j
    111:111:boolean access$16(com.danga.squeezer.SqueezerActivity) -> k
    729:729:void access$17(com.danga.squeezer.SqueezerActivity) -> l
    487:487:com.danga.squeezer.model.SqueezerSong access$18(com.danga.squeezer.SqueezerActivity) -> m
    75:75:android.widget.TextView access$19(com.danga.squeezer.SqueezerActivity) -> n
    116:116:void access$20(com.danga.squeezer.SqueezerActivity,boolean) -> a
    475:475:boolean access$21(com.danga.squeezer.SqueezerActivity,int) -> c
    85:85:android.widget.ImageButton access$22(com.danga.squeezer.SqueezerActivity) -> o
    523:523:boolean access$23(com.danga.squeezer.SqueezerActivity) -> p
    499:499:java.lang.String access$24(com.danga.squeezer.SqueezerActivity) -> q
    79:79:android.view.MenuItem access$25(com.danga.squeezer.SqueezerActivity) -> r
    535:535:boolean access$26(com.danga.squeezer.SqueezerActivity) -> s
    80:80:android.view.MenuItem access$27(com.danga.squeezer.SqueezerActivity) -> t
    547:547:boolean access$28(com.danga.squeezer.SqueezerActivity) -> u
    407:407:void access$29(com.danga.squeezer.SqueezerActivity) -> v
com.danga.squeezer.SqueezerActivity$1 -> com.danga.squeezer.SqueezerActivity$1:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    96:107:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.danga.squeezer.SqueezerActivity$10 -> com.danga.squeezer.SqueezerActivity$10:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    236:241:void onClick(android.view.View) -> onClick
com.danga.squeezer.SqueezerActivity$11 -> com.danga.squeezer.SqueezerActivity$11:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    246:251:void onClick(android.view.View) -> onClick
com.danga.squeezer.SqueezerActivity$12 -> com.danga.squeezer.SqueezerActivity$12:
    com.danga.squeezer.model.SqueezerSong seekingSong -> a
    com.danga.squeezer.SqueezerActivity this$0 -> b
    259:262:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    266:268:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    274:281:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.danga.squeezer.SqueezerActivity$13 -> com.danga.squeezer.SqueezerActivity$13:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    339:346:void run() -> run
com.danga.squeezer.SqueezerActivity$14 -> com.danga.squeezer.SqueezerActivity$14:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    354:362:void run() -> run
com.danga.squeezer.SqueezerActivity$15 -> com.danga.squeezer.SqueezerActivity$15:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    372:378:void run() -> run
com.danga.squeezer.SqueezerActivity$16 -> com.danga.squeezer.SqueezerActivity$16:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    397:398:void run() -> run
com.danga.squeezer.SqueezerActivity$2 -> com.danga.squeezer.SqueezerActivity$2:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    128:131:void handleMessage(android.os.Message) -> handleMessage
com.danga.squeezer.SqueezerActivity$3 -> com.danga.squeezer.SqueezerActivity$3:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    789:795:void onConnectionChanged(boolean,boolean) -> a
    799:805:void onPlayerChanged(java.lang.String,java.lang.String) -> a
    808:813:void onMusicChanged() -> a
    817:818:void onPlayStatusChanged(boolean) -> a
    822:825:void onTimeInSongChange(int,int) -> a
com.danga.squeezer.SqueezerActivity$3$1 -> com.danga.squeezer.SqueezerActivity$3$1:
    com.danga.squeezer.SqueezerActivity$3 this$1 -> a
    boolean val$isConnected -> b
    boolean val$postConnect -> c
    792:793:void run() -> run
com.danga.squeezer.SqueezerActivity$3$2 -> com.danga.squeezer.SqueezerActivity$3$2:
    com.danga.squeezer.SqueezerActivity$3 this$1 -> a
    802:803:void run() -> run
com.danga.squeezer.SqueezerActivity$3$3 -> com.danga.squeezer.SqueezerActivity$3$3:
    com.danga.squeezer.SqueezerActivity$3 this$1 -> a
    810:811:void run() -> run
com.danga.squeezer.SqueezerActivity$4 -> com.danga.squeezer.SqueezerActivity$4:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    176:178:void onClick(android.view.View) -> onClick
com.danga.squeezer.SqueezerActivity$5 -> com.danga.squeezer.SqueezerActivity$5:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    183:185:void onClick(android.view.View) -> onClick
com.danga.squeezer.SqueezerActivity$6 -> com.danga.squeezer.SqueezerActivity$6:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    190:203:void onClick(android.view.View) -> onClick
com.danga.squeezer.SqueezerActivity$7 -> com.danga.squeezer.SqueezerActivity$7:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    208:212:void onClick(android.view.View) -> onClick
com.danga.squeezer.SqueezerActivity$8 -> com.danga.squeezer.SqueezerActivity$8:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    217:221:void onClick(android.view.View) -> onClick
com.danga.squeezer.SqueezerActivity$9 -> com.danga.squeezer.SqueezerActivity$9:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    226:231:void onClick(android.view.View) -> onClick
com.danga.squeezer.SqueezerActivity$AboutDialog -> com.danga.squeezer.SqueezerActivity$AboutDialog:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    605:621:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
com.danga.squeezer.SqueezerActivity$ConnectingDialog -> com.danga.squeezer.SqueezerActivity$ConnectingDialog:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    654:662:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
com.danga.squeezer.SqueezerActivity$EnableWifiDialog -> com.danga.squeezer.SqueezerActivity$EnableWifiDialog:
    com.danga.squeezer.SqueezerActivity this$0 -> a
    633:646:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
com.danga.squeezer.SqueezerActivity$EnableWifiDialog$1 -> com.danga.squeezer.SqueezerActivity$EnableWifiDialog$1:
    com.danga.squeezer.SqueezerActivity$EnableWifiDialog this$1 -> a
    638:643:void onClick(android.content.DialogInterface,int) -> onClick
com.danga.squeezer.SqueezerHomeActivity -> com.danga.squeezer.SqueezerHomeActivity:
    android.widget.ListView listView -> f
    android.widget.AdapterView$OnItemClickListener onHomeItemClick -> g
    39:44:void onCreate(android.os.Bundle) -> onCreate
    48:48:void onServiceConnected() -> b_
    90:94:void show(android.content.Context) -> a
com.danga.squeezer.SqueezerHomeActivity$1 -> com.danga.squeezer.SqueezerHomeActivity$1:
    com.danga.squeezer.SqueezerHomeActivity this$0 -> a
    65:75:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.danga.squeezer.SqueezerMusicActivity -> com.danga.squeezer.SqueezerMusicActivity:
    boolean canRandomplay -> f
    android.widget.ListView listView -> g
    android.widget.AdapterView$OnItemClickListener onMusicItemClick -> h
    55:60:void onCreate(android.os.Bundle) -> onCreate
    64:65:void onServiceConnected() -> b_
    68:99:void setMusicMenu() -> d
    50:50:boolean access$0(com.danga.squeezer.SqueezerMusicActivity) -> a
com.danga.squeezer.SqueezerMusicActivity$1 -> com.danga.squeezer.SqueezerMusicActivity$1:
    com.danga.squeezer.SqueezerMusicActivity this$0 -> a
    104:134:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.danga.squeezer.SqueezerRandomplayActivity -> com.danga.squeezer.SqueezerRandomplayActivity:
    android.widget.ListView listView -> f
    android.widget.AdapterView$OnItemClickListener onRandomplayItemClick -> g
    41:46:void onCreate(android.os.Bundle) -> onCreate
    50:50:void onServiceConnected() -> b_
com.danga.squeezer.SqueezerRandomplayActivity$1 -> com.danga.squeezer.SqueezerRandomplayActivity$1:
    com.danga.squeezer.SqueezerRandomplayActivity this$0 -> a
    64:73:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.danga.squeezer.SqueezerRandomplayActivity$RandomPlayType -> com.danga.squeezer.SqueezerRandomplayActivity$RandomPlayType:
    com.danga.squeezer.SqueezerRandomplayActivity$RandomPlayType tracks -> a
    com.danga.squeezer.SqueezerRandomplayActivity$RandomPlayType albums -> b
    com.danga.squeezer.SqueezerRandomplayActivity$RandomPlayType contributors -> c
    com.danga.squeezer.SqueezerRandomplayActivity$RandomPlayType year -> d
    com.danga.squeezer.SqueezerRandomplayActivity$RandomPlayType[] ENUM$VALUES -> e
    1:1:com.danga.squeezer.SqueezerRandomplayActivity$RandomPlayType[] values() -> values
    1:1:com.danga.squeezer.SqueezerRandomplayActivity$RandomPlayType valueOf(java.lang.String) -> valueOf
com.danga.squeezer.SqueezerSearchActivity -> com.danga.squeezer.SqueezerSearchActivity:
    android.widget.TextView loadingLabel -> f
    android.widget.ExpandableListView resultsExpandableListView -> g
    com.danga.squeezer.SqueezerSearchAdapter searchResultsAdapter -> h
    java.lang.String searchString -> i
    com.danga.squeezer.itemlists.IServiceArtistListCallback artistsCallback -> j
    com.danga.squeezer.itemlists.IServiceAlbumListCallback albumsCallback -> k
    com.danga.squeezer.itemlists.IServiceGenreListCallback genresCallback -> l
    com.danga.squeezer.itemlists.IServiceSongListCallback songsCallback -> m
    61:122:void onCreate(android.os.Bundle) -> onCreate
    126:130:void registerCallback() -> e
    134:138:void unregisterCallback() -> f
    142:156:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    161:163:void onServiceConnected() -> b_
    167:175:void onPause() -> onPause
    178:181:void show(android.content.Context) -> a
    187:191:void orderPage(int) -> a
    194:201:void doSearch(java.lang.String) -> a
    207:207:void access$0(com.danga.squeezer.SqueezerSearchActivity,int,int,java.util.List) -> a
    193:193:void access$1(com.danga.squeezer.SqueezerSearchActivity,java.lang.String) -> a
    56:56:com.danga.squeezer.SqueezerSearchAdapter access$2(com.danga.squeezer.SqueezerSearchActivity) -> a
    54:54:android.widget.TextView access$4(com.danga.squeezer.SqueezerSearchActivity) -> b
    55:55:android.widget.ExpandableListView access$5(com.danga.squeezer.SqueezerSearchActivity) -> c
com.danga.squeezer.SqueezerSearchActivity$1 -> com.danga.squeezer.SqueezerSearchActivity$1:
    com.danga.squeezer.SqueezerSearchActivity this$0 -> a
    220:221:void onArtistsReceived(int,int,java.util.List) -> a
com.danga.squeezer.SqueezerSearchActivity$2 -> com.danga.squeezer.SqueezerSearchActivity$2:
    com.danga.squeezer.SqueezerSearchActivity this$0 -> a
    226:227:void onAlbumsReceived(int,int,java.util.List) -> a
com.danga.squeezer.SqueezerSearchActivity$3 -> com.danga.squeezer.SqueezerSearchActivity$3:
    com.danga.squeezer.SqueezerSearchActivity this$0 -> a
    232:233:void onGenresReceived(int,int,java.util.List) -> a
com.danga.squeezer.SqueezerSearchActivity$4 -> com.danga.squeezer.SqueezerSearchActivity$4:
    com.danga.squeezer.SqueezerSearchActivity this$0 -> a
    238:239:void onSongsReceived(int,int,java.util.List) -> a
com.danga.squeezer.SqueezerSearchActivity$5 -> com.danga.squeezer.SqueezerSearchActivity$5:
    com.danga.squeezer.SqueezerSearchActivity this$0 -> a
    android.widget.EditText val$searchCriteriaText -> b
    74:78:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.danga.squeezer.SqueezerSearchActivity$6 -> com.danga.squeezer.SqueezerSearchActivity$6:
    com.danga.squeezer.SqueezerSearchActivity this$0 -> a
    android.widget.EditText val$searchCriteriaText -> b
    84:87:void onClick(android.view.View) -> onClick
com.danga.squeezer.SqueezerSearchActivity$7 -> com.danga.squeezer.SqueezerSearchActivity$7:
    com.danga.squeezer.SqueezerSearchActivity this$0 -> a
    92:105:boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.danga.squeezer.SqueezerSearchActivity$8 -> com.danga.squeezer.SqueezerSearchActivity$8:
    com.danga.squeezer.SqueezerSearchActivity this$0 -> a
    111:118:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
com.danga.squeezer.SqueezerSearchActivity$9 -> com.danga.squeezer.SqueezerSearchActivity$9:
    com.danga.squeezer.SqueezerSearchActivity this$0 -> a
    int val$count -> b
    int val$start -> c
    java.util.List val$items -> d
    210:213:void run() -> run
com.danga.squeezer.SqueezerSearchAdapter -> com.danga.squeezer.SqueezerSearchAdapter:
    int[] groupIcons -> a
    com.danga.squeezer.SqueezerSearchActivity activity -> b
    com.danga.squeezer.framework.SqueezerItemAdapter[] childAdapters -> c
    java.util.Map childAdapterMap -> d
    76:78:void clear() -> a
    82:86:void updateItems(int,int,java.util.List) -> a
    96:97:void setupContextMenu(android.view.ContextMenu,int,int) -> a
    100:101:void doItemContext(android.view.MenuItem,int,int) -> a
    104:104:com.danga.squeezer.framework.SqueezerItem getChild(int,int) -> a
    108:108:long getChildId(int,int) -> getChildId
    112:112:android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    116:116:int getChildrenCount(int) -> getChildrenCount
    120:120:java.lang.Object getGroup(int) -> getGroup
    124:124:int getGroupCount() -> getGroupCount
    128:128:long getGroupId(int) -> getGroupId
    132:140:android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    144:144:boolean hasStableIds() -> hasStableIds
    148:148:boolean isChildSelectable(int,int) -> isChildSelectable
    1:1:java.lang.Object getChild(int,int) -> getChild
com.danga.squeezer.SqueezerSearchAdapter$1 -> com.danga.squeezer.SqueezerSearchAdapter$1:
    com.danga.squeezer.SqueezerSearchAdapter this$0 -> a
    58:58:android.view.View getAdapterView(android.view.View,com.danga.squeezer.model.SqueezerSong) -> a
com.danga.squeezer.SqueezerSearchAdapter$2 -> com.danga.squeezer.SqueezerSearchAdapter$2:
    com.danga.squeezer.SqueezerSearchAdapter this$0 -> a
    64:64:android.view.View getAdapterView(android.view.View,com.danga.squeezer.model.SqueezerAlbum) -> a
com.danga.squeezer.Util -> com.danga.squeezer.Util:
    java.lang.StringBuilder sFormatBuilder -> a
    java.util.Formatter sFormatter -> b
    java.lang.Object[] sTimeArgs -> c
    41:42:int getAtomicInteger$35eecc02(java.util.concurrent.atomic.AtomicReference) -> a
    69:76:boolean atomicSongUpdated(java.util.concurrent.atomic.AtomicReference,com.danga.squeezer.model.SqueezerSong) -> a
    80:89:int parseDecimalInt(java.lang.String,int) -> a
    94:94:int parseDecimalIntOrZero(java.lang.String) -> a
    105:113:java.lang.String makeTimeString(long) -> a
    118:120:java.lang.String encode(java.lang.String) -> b
    126:128:java.lang.String decode(java.lang.String) -> c
    134:138:android.view.View getListItemView(android.app.Activity,android.view.View,java.lang.String) -> a
    143:148:android.view.View getSpinnerItemView(android.app.Activity,android.view.View,java.lang.String) -> b
com.danga.squeezer.VolumePanel -> com.danga.squeezer.VolumePanel:
    android.content.Context mContext -> a
    android.widget.Toast mToast -> b
    android.view.View mView -> c
    android.widget.TextView mMessage -> d
    android.widget.TextView mAdditionalMessage -> e
    android.widget.ImageView mLargeStreamIcon -> f
    android.widget.ProgressBar mLevel -> g
    97:109:void handleMessage(android.os.Message) -> handleMessage
com.danga.squeezer.actionbarcompat.ActionBarActivity -> com.danga.squeezer.actionbarcompat.ActionBarActivity:
    com.danga.squeezer.actionbarcompat.ActionBarHelper mActionBarHelper -> a
    41:41:com.danga.squeezer.actionbarcompat.ActionBarHelper getActionBarHelper() -> j
    47:47:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    53:55:void onCreate(android.os.Bundle) -> onCreate
    60:62:void onPostCreate(android.os.Bundle) -> onPostCreate
    72:75:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    81:83:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
com.danga.squeezer.actionbarcompat.ActionBarFragment -> com.danga.squeezer.actionbarcompat.ActionBarFragment:
    31:33:void onCreate(android.os.Bundle) -> a
    40:45:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    58:68:void add(android.support.v4.app.FragmentActivity,java.lang.Class) -> a
com.danga.squeezer.actionbarcompat.ActionBarHelper -> com.danga.squeezer.actionbarcompat.ActionBarHelper:
    android.app.Activity mActivity -> a
    44:49:com.danga.squeezer.actionbarcompat.ActionBarHelper createInstance(android.app.Activity) -> a
    61:61:void onCreate$79e5e33f() -> a
    67:67:void onPostCreate$79e5e33f() -> b
    75:75:boolean onCreateOptionsMenu(android.view.Menu) -> a
    82:82:void onTitleChanged$609be50a(java.lang.CharSequence) -> a
    com.danga.squeezer.actionbarcompat.ActionBarHelper setIcon(int) -> a
    110:110:android.view.MenuInflater getMenuInflater(android.view.MenuInflater) -> a
com.danga.squeezer.actionbarcompat.ActionBarHelperBase -> com.danga.squeezer.actionbarcompat.ActionBarHelperBase:
    java.util.Set mActionItemIds -> b
    android.graphics.drawable.Drawable homeIcon -> c
    64:65:void onCreate$79e5e33f() -> a
    70:83:void onPostCreate$79e5e33f() -> b
    135:140:boolean onCreateOptionsMenu(android.view.Menu) -> a
    146:150:void onTitleChanged$609be50a(java.lang.CharSequence) -> a
    155:156:com.danga.squeezer.actionbarcompat.ActionBarHelper setIcon(int) -> a
    172:172:android.view.MenuInflater getMenuInflater(android.view.MenuInflater) -> a
    180:180:android.view.ViewGroup getActionBarCompat() -> c
    190:247:android.view.View addActionItemCompatFromMenuItem(android.view.MenuItem) -> a
com.danga.squeezer.actionbarcompat.ActionBarHelperBase$1 -> com.danga.squeezer.actionbarcompat.ActionBarHelperBase$1:
    com.danga.squeezer.actionbarcompat.ActionBarHelperBase this$0 -> a
    android.view.MenuItem val$item -> b
    216:217:void onClick(android.view.View) -> onClick
com.danga.squeezer.actionbarcompat.ActionBarHelperBase$WrappedMenuInflater -> com.danga.squeezer.actionbarcompat.ActionBarHelperBase$WrappedMenuInflater:
    android.view.MenuInflater mInflater -> a
    com.danga.squeezer.actionbarcompat.ActionBarHelperBase this$0 -> b
    263:265:void inflate(int,android.view.Menu) -> inflate
com.danga.squeezer.actionbarcompat.ActionBarHelperHoneycomb -> com.danga.squeezer.actionbarcompat.ActionBarHelperHoneycomb:
    android.view.Menu mOptionsMenu -> b
    android.view.View mRefreshIndeterminateProgressView -> c
    43:44:boolean onCreateOptionsMenu(android.view.Menu) -> a
    84:84:com.danga.squeezer.actionbarcompat.ActionBarHelper setIcon(int) -> a
com.danga.squeezer.actionbarcompat.ActionBarHelperICS -> com.danga.squeezer.actionbarcompat.ActionBarHelperICS:
    46:48:com.danga.squeezer.actionbarcompat.ActionBarHelper setIcon(int) -> a
com.danga.squeezer.actionbarcompat.SimpleMenu -> com.danga.squeezer.actionbarcompat.SimpleMenu:
    android.content.Context mContext -> a
    android.content.res.Resources mResources -> b
    java.util.ArrayList mItems -> c
    50:50:android.content.Context getContext() -> a
    54:54:android.content.res.Resources getResources() -> b
    58:58:android.view.MenuItem add(java.lang.CharSequence) -> add
    62:62:android.view.MenuItem add(int) -> add
    66:66:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    70:70:android.view.MenuItem add(int,int,int,int) -> add
    77:79:android.view.MenuItem addInternal(int,int,java.lang.CharSequence) -> a
    107:108:void removeItem(int) -> removeItem
    118:119:void clear() -> clear
    122:130:android.view.MenuItem findItem(int) -> findItem
    134:134:int size() -> size
    138:138:android.view.MenuItem getItem(int) -> getItem
    144:144:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    148:148:android.view.SubMenu addSubMenu(int) -> addSubMenu
    152:152:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    156:156:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    161:161:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    165:165:void removeGroup(int) -> removeGroup
    169:169:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    173:173:void setGroupVisible(int,boolean) -> setGroupVisible
    177:177:void setGroupEnabled(int,boolean) -> setGroupEnabled
    181:181:boolean hasVisibleItems() -> hasVisibleItems
    185:185:void close() -> close
    189:189:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    193:193:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    197:197:boolean performIdentifierAction(int,int) -> performIdentifierAction
    201:201:void setQwertyMode(boolean) -> setQwertyMode
com.danga.squeezer.actionbarcompat.SimpleMenuItem -> com.danga.squeezer.actionbarcompat.SimpleMenuItem:
    com.danga.squeezer.actionbarcompat.SimpleMenu mMenu -> a
    int mId -> b
    int mOrder -> c
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    android.graphics.drawable.Drawable mIconDrawable -> f
    int mIconResId -> g
    boolean mEnabled -> h
    53:53:int getItemId() -> getItemId
    57:57:int getOrder() -> getOrder
    61:62:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    66:66:android.view.MenuItem setTitle(int) -> setTitle
    70:70:java.lang.CharSequence getTitle() -> getTitle
    74:75:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    79:79:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    83:85:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    89:91:android.view.MenuItem setIcon(int) -> setIcon
    95:103:android.graphics.drawable.Drawable getIcon() -> getIcon
    107:108:android.view.MenuItem setEnabled(boolean) -> setEnabled
    112:112:boolean isEnabled() -> isEnabled
    119:119:int getGroupId() -> getGroupId
    124:124:android.view.View getActionView() -> getActionView
    129:129:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    134:134:android.view.ActionProvider getActionProvider() -> getActionProvider
    139:139:boolean expandActionView() -> expandActionView
    144:144:boolean collapseActionView() -> collapseActionView
    149:149:boolean isActionViewExpanded() -> isActionViewExpanded
    154:154:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    159:159:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    164:164:android.content.Intent getIntent() -> getIntent
    169:169:android.view.MenuItem setShortcut(char,char) -> setShortcut
    174:174:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    179:179:char getNumericShortcut() -> getNumericShortcut
    184:184:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    189:189:char getAlphabeticShortcut() -> getAlphabeticShortcut
    194:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    199:199:boolean isCheckable() -> isCheckable
    204:204:android.view.MenuItem setChecked(boolean) -> setChecked
    209:209:boolean isChecked() -> isChecked
    214:214:android.view.MenuItem setVisible(boolean) -> setVisible
    219:219:boolean isVisible() -> isVisible
    224:224:boolean hasSubMenu() -> hasSubMenu
    229:229:android.view.SubMenu getSubMenu() -> getSubMenu
    234:234:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    239:239:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    244:244:void setShowAsAction(int) -> setShowAsAction
    248:248:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    253:253:android.view.MenuItem setActionView(android.view.View) -> setActionView
    258:258:android.view.MenuItem setActionView(int) -> setActionView
com.danga.squeezer.framework.SqueezerArtworkItem -> com.danga.squeezer.framework.SqueezerArtworkItem:
    java.lang.String artwork_track_id -> a
    24:24:java.lang.String getArtwork_track_id() -> c
    25:25:void setArtwork_track_id(java.lang.String) -> b
com.danga.squeezer.framework.SqueezerBaseActivity -> com.danga.squeezer.framework.SqueezerBaseActivity:
    com.danga.squeezer.service.ISqueezeService service -> f
    android.os.Handler uiThreadHandler -> g
    android.content.ServiceConnection serviceConnection -> h
    void onServiceConnected() -> b_
    53:53:com.danga.squeezer.service.ISqueezeService getService() -> a
    60:60:android.os.Handler getUIThreadHandler() -> b
    80:82:void onCreate(android.os.Bundle) -> onCreate
    86:89:void onResume() -> onResume
    93:97:void onPause() -> onPause
    110:119:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    124:130:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    134:144:boolean changeVolumeBy(int) -> a
    151:151:boolean play(com.danga.squeezer.framework.SqueezerItem) -> a
    155:155:boolean add(com.danga.squeezer.framework.SqueezerItem) -> b
    159:159:boolean insert(com.danga.squeezer.framework.SqueezerItem) -> c
    163:167:boolean playlistControl(com.danga.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd,com.danga.squeezer.framework.SqueezerItem) -> a
    40:40:void access$0(com.danga.squeezer.framework.SqueezerBaseActivity,com.danga.squeezer.service.ISqueezeService) -> a
com.danga.squeezer.framework.SqueezerBaseActivity$1 -> com.danga.squeezer.framework.SqueezerBaseActivity$1:
    com.danga.squeezer.framework.SqueezerBaseActivity this$0 -> a
com.danga.squeezer.framework.SqueezerBaseActivity$2 -> com.danga.squeezer.framework.SqueezerBaseActivity$2:
    com.danga.squeezer.framework.SqueezerBaseActivity this$0 -> a
    66:72:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    74:75:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.danga.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd -> com.danga.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd:
    com.danga.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd load -> a
    com.danga.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd add -> b
    com.danga.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd insert -> c
    com.danga.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd[] ENUM$VALUES -> d
    1:1:com.danga.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd[] values() -> values
    1:1:com.danga.squeezer.framework.SqueezerBaseActivity$PlaylistControlCmd valueOf(java.lang.String) -> valueOf
com.danga.squeezer.framework.SqueezerBaseItemView -> com.danga.squeezer.framework.SqueezerBaseItemView:
    com.danga.squeezer.framework.SqueezerItemListActivity activity -> a
    com.danga.squeezer.framework.SqueezerItemAdapter adapter -> b
    java.lang.Class itemClass -> c
    android.os.Parcelable$Creator creator -> d
    55:55:com.danga.squeezer.framework.SqueezerItemListActivity getActivity() -> a
    59:59:com.danga.squeezer.framework.SqueezerItemAdapter getAdapter() -> d
    63:64:void setAdapter(com.danga.squeezer.framework.SqueezerItemAdapter) -> a
    68:73:java.lang.Class getItemClass() -> b
    78:91:android.os.Parcelable$Creator getCreator() -> c
    95:95:android.view.View getAdapterView(android.view.View,com.danga.squeezer.framework.SqueezerItem) -> a
    99:99:android.view.View getAdapterView(android.view.View,java.lang.String) -> a
    108:131:boolean doItemContext(android.view.MenuItem,int,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.framework.SqueezerBaseListActivity -> com.danga.squeezer.framework.SqueezerBaseListActivity:
    com.danga.squeezer.framework.SqueezerItemAdapter itemAdapter -> f
    android.widget.ListView listView -> g
    android.widget.TextView loadingLabel -> h
    com.danga.squeezer.framework.SqueezerItemView itemView -> i
    59:90:void onCreate(android.os.Bundle) -> onCreate
    com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    103:103:void prepareActivity(android.os.Bundle) -> a
    107:117:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    122:124:void onServiceConnected() -> b_
    128:136:void onPause() -> onPause
    144:144:com.danga.squeezer.framework.SqueezerItemAdapter getItemAdapter() -> g
    148:148:com.danga.squeezer.framework.SqueezerItemAdapter createItemListAdapter(com.danga.squeezer.framework.SqueezerItemView) -> a
    156:160:void orderItems() -> h
    163:170:void onItemsReceived(int,int,java.util.List) -> a
    51:51:com.danga.squeezer.framework.SqueezerItemView access$0(com.danga.squeezer.framework.SqueezerBaseListActivity) -> a
    51:51:android.widget.ListView access$1(com.danga.squeezer.framework.SqueezerBaseListActivity) -> b
    51:51:android.widget.TextView access$2(com.danga.squeezer.framework.SqueezerBaseListActivity) -> c
com.danga.squeezer.framework.SqueezerBaseListActivity$1 -> com.danga.squeezer.framework.SqueezerBaseListActivity$1:
    com.danga.squeezer.framework.SqueezerBaseListActivity this$0 -> a
    69:77:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.danga.squeezer.framework.SqueezerBaseListActivity$2 -> com.danga.squeezer.framework.SqueezerBaseListActivity$2:
    com.danga.squeezer.framework.SqueezerBaseListActivity this$0 -> a
    82:84:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
com.danga.squeezer.framework.SqueezerBaseListActivity$3 -> com.danga.squeezer.framework.SqueezerBaseListActivity$3:
    com.danga.squeezer.framework.SqueezerBaseListActivity this$0 -> a
    int val$count -> b
    int val$start -> c
    java.util.List val$items -> d
    165:168:void run() -> run
com.danga.squeezer.framework.SqueezerFilterableListActivity -> com.danga.squeezer.framework.SqueezerFilterableListActivity:
    28:30:void onCreate(android.os.Bundle) -> onCreate
    34:35:boolean onSearchRequested() -> onSearchRequested
com.danga.squeezer.framework.SqueezerIconUpdater -> com.danga.squeezer.framework.SqueezerIconUpdater:
    java.util.concurrent.ScheduledThreadPoolExecutor backgroundExecutor -> a
    com.danga.squeezer.framework.SqueezerBaseActivity activity -> b
    45:80:void updateIcon(android.widget.ImageView,java.lang.Object,java.lang.String) -> a
    82:82:android.graphics.Bitmap access$0(java.net.URL,int) -> a
    40:40:com.danga.squeezer.framework.SqueezerBaseActivity access$1(com.danga.squeezer.framework.SqueezerIconUpdater) -> a
com.danga.squeezer.framework.SqueezerIconUpdater$1 -> com.danga.squeezer.framework.SqueezerIconUpdater$1:
    com.danga.squeezer.framework.SqueezerIconUpdater this$0 -> a
    android.widget.ImageView val$icon -> b
    java.lang.Object val$item -> c
    java.lang.String val$urlString -> d
    55:78:void run() -> run
com.danga.squeezer.framework.SqueezerIconUpdater$1$1 -> com.danga.squeezer.framework.SqueezerIconUpdater$1$1:
    com.danga.squeezer.framework.SqueezerIconUpdater$1 this$1 -> a
    android.widget.ImageView val$icon -> b
    java.lang.Object val$item -> c
    android.graphics.Bitmap val$bitmap -> d
    65:71:void run() -> run
com.danga.squeezer.framework.SqueezerItem -> com.danga.squeezer.framework.SqueezerItem:
    java.lang.String id -> a
    31:31:void setId(java.lang.String) -> a
    32:32:java.lang.String getId() -> a
    java.lang.String getName() -> b
    37:37:int describeContents() -> describeContents
    42:42:int hashCode() -> hashCode
    47:51:boolean equals(java.lang.Object) -> equals
com.danga.squeezer.framework.SqueezerItemAdapter -> com.danga.squeezer.framework.SqueezerItemAdapter:
    com.danga.squeezer.framework.SqueezerItemView itemView -> a
    int count -> b
    java.util.Map pages -> c
    boolean emptyItem -> d
    java.lang.String loadingText -> e
    int pageSize -> f
    77:77:int getPageSize() -> a
    112:114:void clear() -> b
    117:120:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    125:125:java.lang.String getQuantityString(int) -> a
    129:129:com.danga.squeezer.framework.SqueezerItemListActivity getActivity() -> c
    133:137:void setupContextMenu(android.view.ContextMenu,int) -> a
    140:140:boolean doItemContext(android.view.MenuItem,int) -> a
    144:144:com.danga.squeezer.framework.SqueezerItemView getItemView() -> d
    148:148:int getCount() -> getCount
    152:157:com.danga.squeezer.framework.SqueezerItem[] getPage(int) -> c
    175:180:com.danga.squeezer.framework.SqueezerItem getItem(int) -> b
    184:184:long getItemId(int) -> getItemId
    188:190:java.lang.String getHeader() -> e
    199:199:void updateHeader() -> f
    215:225:void update(int,int,java.util.List) -> a
    232:237:int findItem(com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:java.lang.Object getItem(int) -> getItem
com.danga.squeezer.framework.SqueezerItemListActivity -> com.danga.squeezer.framework.SqueezerItemListActivity:
    java.util.Set orderedPages -> f
    boolean listBusy -> g
    46:48:void onCreate(android.os.Bundle) -> onCreate
    void registerCallback() -> e
    void unregisterCallback() -> f
    void orderPage(int) -> a
    82:90:void maybeOrderPage(int) -> b
    96:98:void reorderItems() -> i
    106:123:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    126:126:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.danga.squeezer.framework.SqueezerItemListAdapter -> com.danga.squeezer.framework.SqueezerItemListAdapter:
    41:42:void updateHeader() -> f
com.danga.squeezer.framework.SqueezerItemView -> com.danga.squeezer.framework.SqueezerItemView:
    com.danga.squeezer.framework.SqueezerItemListActivity getActivity() -> a
    java.lang.String getQuantityString(int) -> a
    android.view.View getAdapterView(android.view.View,com.danga.squeezer.framework.SqueezerItem) -> a
    android.view.View getAdapterView(android.view.View,java.lang.String) -> a
    java.lang.Class getItemClass() -> b
    android.os.Parcelable$Creator getCreator() -> c
    void setAdapter(com.danga.squeezer.framework.SqueezerItemAdapter) -> a
    void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
    void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    boolean doItemContext(android.view.MenuItem,int,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.framework.SqueezerOrderableListActivity -> com.danga.squeezer.framework.SqueezerOrderableListActivity:
    29:31:void onCreate(android.os.Bundle) -> onCreate
com.danga.squeezer.itemlists.GenreSpinner -> com.danga.squeezer.itemlists.GenreSpinner:
    java.lang.String TAG -> b
    com.danga.squeezer.itemlists.GenreSpinner$GenreSpinnerCallback callback -> a
    com.danga.squeezer.framework.SqueezerItemListActivity activity -> c
    android.widget.Spinner spinner -> d
    com.danga.squeezer.itemlists.IServiceGenreListCallback genreListCallback -> e
    48:55:void orderItems(int) -> a
    58:65:void registerCallback() -> a
    68:75:void unregisterCallback() -> b
    36:36:com.danga.squeezer.framework.SqueezerItemListActivity access$0(com.danga.squeezer.itemlists.GenreSpinner) -> a
    37:37:android.widget.Spinner access$1(com.danga.squeezer.itemlists.GenreSpinner) -> b
    47:47:void access$2(com.danga.squeezer.itemlists.GenreSpinner,int) -> a
com.danga.squeezer.itemlists.GenreSpinner$1 -> com.danga.squeezer.itemlists.GenreSpinner$1:
    com.danga.squeezer.framework.SqueezerItemAdapter adapter -> b
    com.danga.squeezer.itemlists.GenreSpinner this$0 -> a
    81:108:void onGenresReceived(int,int,java.util.List) -> a
    78:78:com.danga.squeezer.framework.SqueezerItemAdapter access$0(com.danga.squeezer.itemlists.GenreSpinner$1) -> a
    78:78:void access$1(com.danga.squeezer.itemlists.GenreSpinner$1,com.danga.squeezer.framework.SqueezerItemAdapter) -> a
com.danga.squeezer.itemlists.GenreSpinner$1$1 -> com.danga.squeezer.itemlists.GenreSpinner$1$1:
    com.danga.squeezer.itemlists.GenreSpinner$1 this$1 -> a
    int val$count -> b
    int val$start -> c
    java.util.List val$list -> d
    83:106:void run() -> run
com.danga.squeezer.itemlists.GenreSpinner$1$1$1 -> com.danga.squeezer.itemlists.GenreSpinner$1$1$1:
    com.danga.squeezer.itemlists.GenreSpinner$1$1 this$2 -> a
    91:91:android.view.View getAdapterView(android.view.View,java.lang.String) -> a
    1:1:android.view.View getAdapterView(android.view.View,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.GenreSpinner$GenreSpinnerCallback -> com.danga.squeezer.itemlists.GenreSpinner$GenreSpinnerCallback:
    com.danga.squeezer.service.ISqueezeService getService() -> a
    android.os.Handler getUIThreadHandler() -> b
    com.danga.squeezer.model.SqueezerGenre getGenre() -> c
com.danga.squeezer.itemlists.IServiceAlbumListCallback -> com.danga.squeezer.itemlists.IServiceAlbumListCallback:
    void onAlbumsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServiceAlbumListCallback$Stub -> com.danga.squeezer.itemlists.IServiceAlbumListCallback$Stub:
    23:30:com.danga.squeezer.itemlists.IServiceAlbumListCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.itemlists.IServiceAlbumListCallback$Stub$Proxy -> com.danga.squeezer.itemlists.IServiceAlbumListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:88:void onAlbumsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServiceArtistListCallback -> com.danga.squeezer.itemlists.IServiceArtistListCallback:
    void onArtistsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServiceArtistListCallback$Stub -> com.danga.squeezer.itemlists.IServiceArtistListCallback$Stub:
    23:30:com.danga.squeezer.itemlists.IServiceArtistListCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.itemlists.IServiceArtistListCallback$Stub$Proxy -> com.danga.squeezer.itemlists.IServiceArtistListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:88:void onArtistsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServiceGenreListCallback -> com.danga.squeezer.itemlists.IServiceGenreListCallback:
    void onGenresReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServiceGenreListCallback$Stub -> com.danga.squeezer.itemlists.IServiceGenreListCallback$Stub:
    23:30:com.danga.squeezer.itemlists.IServiceGenreListCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.itemlists.IServiceGenreListCallback$Stub$Proxy -> com.danga.squeezer.itemlists.IServiceGenreListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:88:void onGenresReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServicePlayerListCallback -> com.danga.squeezer.itemlists.IServicePlayerListCallback:
    void onPlayersReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServicePlayerListCallback$Stub -> com.danga.squeezer.itemlists.IServicePlayerListCallback$Stub:
    23:30:com.danga.squeezer.itemlists.IServicePlayerListCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.itemlists.IServicePlayerListCallback$Stub$Proxy -> com.danga.squeezer.itemlists.IServicePlayerListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:88:void onPlayersReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback -> com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback:
    void onRenameFailed(java.lang.String) -> a
    void onCreateFailed(java.lang.String) -> b
com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback$Stub -> com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback$Stub:
    23:30:com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:62:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback$Stub$Proxy -> com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    73:73:android.os.IBinder asBinder() -> asBinder
    81:90:void onRenameFailed(java.lang.String) -> a
    93:102:void onCreateFailed(java.lang.String) -> b
com.danga.squeezer.itemlists.IServicePlaylistsCallback -> com.danga.squeezer.itemlists.IServicePlaylistsCallback:
    void onPlaylistsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServicePlaylistsCallback$Stub -> com.danga.squeezer.itemlists.IServicePlaylistsCallback$Stub:
    23:30:com.danga.squeezer.itemlists.IServicePlaylistsCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.itemlists.IServicePlaylistsCallback$Stub$Proxy -> com.danga.squeezer.itemlists.IServicePlaylistsCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:88:void onPlaylistsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServicePluginItemListCallback -> com.danga.squeezer.itemlists.IServicePluginItemListCallback:
    void onPluginItemsReceived(int,int,java.util.Map,java.util.List) -> a
com.danga.squeezer.itemlists.IServicePluginItemListCallback$Stub -> com.danga.squeezer.itemlists.IServicePluginItemListCallback$Stub:
    23:30:com.danga.squeezer.itemlists.IServicePluginItemListCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:61:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.itemlists.IServicePluginItemListCallback$Stub$Proxy -> com.danga.squeezer.itemlists.IServicePluginItemListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    72:72:android.os.IBinder asBinder() -> asBinder
    80:92:void onPluginItemsReceived(int,int,java.util.Map,java.util.List) -> a
com.danga.squeezer.itemlists.IServicePluginListCallback -> com.danga.squeezer.itemlists.IServicePluginListCallback:
    void onPluginsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServicePluginListCallback$Stub -> com.danga.squeezer.itemlists.IServicePluginListCallback$Stub:
    23:30:com.danga.squeezer.itemlists.IServicePluginListCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.itemlists.IServicePluginListCallback$Stub$Proxy -> com.danga.squeezer.itemlists.IServicePluginListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:88:void onPluginsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServiceSongListCallback -> com.danga.squeezer.itemlists.IServiceSongListCallback:
    void onSongsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServiceSongListCallback$Stub -> com.danga.squeezer.itemlists.IServiceSongListCallback$Stub:
    23:30:com.danga.squeezer.itemlists.IServiceSongListCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.itemlists.IServiceSongListCallback$Stub$Proxy -> com.danga.squeezer.itemlists.IServiceSongListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:88:void onSongsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServiceYearListCallback -> com.danga.squeezer.itemlists.IServiceYearListCallback:
    void onYearsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.IServiceYearListCallback$Stub -> com.danga.squeezer.itemlists.IServiceYearListCallback$Stub:
    23:30:com.danga.squeezer.itemlists.IServiceYearListCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.itemlists.IServiceYearListCallback$Stub$Proxy -> com.danga.squeezer.itemlists.IServiceYearListCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    69:69:android.os.IBinder asBinder() -> asBinder
    77:88:void onYearsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.SqueezerAbstractSongListActivity -> com.danga.squeezer.itemlists.SqueezerAbstractSongListActivity:
    com.danga.squeezer.itemlists.IServiceSongListCallback songListCallback -> f
    30:31:void registerCallback() -> e
    35:36:void unregisterCallback() -> f
com.danga.squeezer.itemlists.SqueezerAbstractSongListActivity$1 -> com.danga.squeezer.itemlists.SqueezerAbstractSongListActivity$1:
    com.danga.squeezer.itemlists.SqueezerAbstractSongListActivity this$0 -> a
    40:41:void onSongsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.SqueezerAlbumArtView -> com.danga.squeezer.itemlists.SqueezerAlbumArtView:
    36:38:void updateAlbumArt(android.widget.ImageView,com.danga.squeezer.framework.SqueezerArtworkItem) -> a
    41:52:java.lang.String getAlbumArtUrl(java.lang.String) -> a
com.danga.squeezer.itemlists.SqueezerAlbumListActivity -> com.danga.squeezer.itemlists.SqueezerAlbumListActivity:
    com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder sortOrder -> f
    java.lang.String searchString -> g
    com.danga.squeezer.model.SqueezerSong song -> h
    com.danga.squeezer.model.SqueezerArtist artist -> i
    com.danga.squeezer.model.SqueezerYear year -> j
    com.danga.squeezer.model.SqueezerGenre genre -> k
    com.danga.squeezer.itemlists.GenreSpinner genreSpinner -> l
    com.danga.squeezer.itemlists.YearSpinner yearSpinner -> m
    com.danga.squeezer.itemlists.IServiceAlbumListCallback albumListCallback -> n
    48:48:java.lang.String getSearchString() -> m
    49:49:void setSearchString(java.lang.String) -> a
    52:52:com.danga.squeezer.model.SqueezerSong getSong() -> n
    56:56:com.danga.squeezer.model.SqueezerArtist getArtist() -> o
    60:60:com.danga.squeezer.model.SqueezerYear getYear() -> p
    61:61:void setYear(com.danga.squeezer.model.SqueezerYear) -> a
    64:64:com.danga.squeezer.model.SqueezerGenre getGenre() -> c
    65:65:void setGenre(com.danga.squeezer.model.SqueezerGenre) -> a
    69:70:void setGenreSpinner(android.widget.Spinner) -> a
    74:75:void setYearSpinner(android.widget.Spinner) -> b
    79:79:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    84:98:void prepareActivity(android.os.Bundle) -> a
    102:105:void registerCallback() -> e
    109:112:void unregisterCallback() -> f
    116:117:void orderPage(int) -> a
    120:120:com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder getSortOrder() -> q
    124:126:void setSortOrder(com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder) -> a
    129:130:void showFilterDialog() -> a_
    133:134:void showOrderDialog() -> r
    137:141:void show(android.content.Context,com.danga.squeezer.framework.SqueezerItem[]) -> a
com.danga.squeezer.itemlists.SqueezerAlbumListActivity$1 -> com.danga.squeezer.itemlists.SqueezerAlbumListActivity$1:
    com.danga.squeezer.itemlists.SqueezerAlbumListActivity this$0 -> a
    145:146:void onAlbumsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.SqueezerAlbumView -> com.danga.squeezer.itemlists.SqueezerAlbumView:
    android.view.LayoutInflater layoutInflater -> a
    44:63:android.view.View getAdapterView(android.view.View,com.danga.squeezer.model.SqueezerAlbum) -> a
    80:80:java.lang.String getQuantityString(int) -> a
    1:1:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:android.view.View getAdapterView(android.view.View,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.SqueezerAlbumView$ViewHolder -> com.danga.squeezer.itemlists.SqueezerAlbumView$ViewHolder:
    android.widget.TextView label1 -> a
    android.widget.TextView label2 -> b
    android.widget.ImageView icon -> c
com.danga.squeezer.itemlists.SqueezerApplicationListActivity -> com.danga.squeezer.itemlists.SqueezerApplicationListActivity:
    30:30:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    35:36:void orderPage(int) -> a
com.danga.squeezer.itemlists.SqueezerApplicationView -> com.danga.squeezer.itemlists.SqueezerApplicationView:
    31:31:java.lang.String getQuantityString(int) -> a
    1:1:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.SqueezerArtistListActivity -> com.danga.squeezer.itemlists.SqueezerArtistListActivity:
    java.lang.String searchString -> f
    com.danga.squeezer.model.SqueezerAlbum album -> g
    com.danga.squeezer.model.SqueezerGenre genre -> h
    com.danga.squeezer.itemlists.GenreSpinner genreSpinner -> i
    com.danga.squeezer.itemlists.IServiceArtistListCallback artistsListCallback -> j
    40:40:java.lang.String getSearchString() -> m
    41:41:void setSearchString(java.lang.String) -> a
    44:44:com.danga.squeezer.model.SqueezerAlbum getAlbum() -> n
    48:48:com.danga.squeezer.model.SqueezerGenre getGenre() -> c
    49:49:void setGenre(com.danga.squeezer.model.SqueezerGenre) -> a
    53:54:void setGenreSpinner(android.widget.Spinner) -> a
    59:59:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    64:74:void prepareActivity(android.os.Bundle) -> a
    78:80:void registerCallback() -> e
    84:86:void unregisterCallback() -> f
    90:91:void orderPage(int) -> a
    94:95:void showFilterDialog() -> a_
    98:102:void show(android.content.Context,com.danga.squeezer.framework.SqueezerItem[]) -> a
com.danga.squeezer.itemlists.SqueezerArtistListActivity$1 -> com.danga.squeezer.itemlists.SqueezerArtistListActivity$1:
    com.danga.squeezer.itemlists.SqueezerArtistListActivity this$0 -> a
    106:107:void onArtistsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.SqueezerArtistView -> com.danga.squeezer.itemlists.SqueezerArtistView:
    48:48:java.lang.String getQuantityString(int) -> a
    1:1:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.SqueezerCurrentPlaylistActivity -> com.danga.squeezer.itemlists.SqueezerCurrentPlaylistActivity:
    47:47:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    95:96:void orderPage(int) -> a
    100:101:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    106:120:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
com.danga.squeezer.itemlists.SqueezerCurrentPlaylistActivity$1 -> com.danga.squeezer.itemlists.SqueezerCurrentPlaylistActivity$1:
    com.danga.squeezer.itemlists.SqueezerCurrentPlaylistActivity this$0 -> a
    51:53:void onItemSelected(int,com.danga.squeezer.model.SqueezerSong) -> a
    57:64:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.model.SqueezerSong) -> a
    68:88:boolean doItemContext(android.view.MenuItem,int,com.danga.squeezer.model.SqueezerSong) -> a
com.danga.squeezer.itemlists.SqueezerGenreListActivity -> com.danga.squeezer.itemlists.SqueezerGenreListActivity:
    com.danga.squeezer.itemlists.IServiceGenreListCallback genreListCallback -> f
    33:33:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    38:39:void registerCallback() -> e
    43:44:void unregisterCallback() -> f
    48:49:void orderPage(int) -> a
com.danga.squeezer.itemlists.SqueezerGenreListActivity$1 -> com.danga.squeezer.itemlists.SqueezerGenreListActivity$1:
    com.danga.squeezer.itemlists.SqueezerGenreListActivity this$0 -> a
    59:60:void onGenresReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.SqueezerGenreView -> com.danga.squeezer.itemlists.SqueezerGenreView:
    36:36:java.lang.String getQuantityString(int) -> a
    1:1:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.SqueezerIconicItemView -> com.danga.squeezer.itemlists.SqueezerIconicItemView:
    com.danga.squeezer.framework.SqueezerIconUpdater iconUpdater -> a
    35:36:void updateIcon(android.widget.ImageView,java.lang.Object,java.lang.String) -> a
com.danga.squeezer.itemlists.SqueezerPlayerListActivity -> com.danga.squeezer.itemlists.SqueezerPlayerListActivity:
    com.danga.squeezer.itemlists.IServicePlayerListCallback playerListCallback -> f
    33:33:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    38:39:void registerCallback() -> e
    43:44:void unregisterCallback() -> f
    48:49:void orderPage(int) -> a
com.danga.squeezer.itemlists.SqueezerPlayerListActivity$1 -> com.danga.squeezer.itemlists.SqueezerPlayerListActivity$1:
    com.danga.squeezer.itemlists.SqueezerPlayerListActivity this$0 -> a
    58:59:void onPlayersReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.SqueezerPlayerView -> com.danga.squeezer.itemlists.SqueezerPlayerView:
    android.view.LayoutInflater layoutInflater -> a
    java.util.Map modelIcons -> b
    71:71:java.lang.String getQuantityString(int) -> a
    1:1:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:android.view.View getAdapterView(android.view.View,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.SqueezerPlayerView$ViewHolder -> com.danga.squeezer.itemlists.SqueezerPlayerView$ViewHolder:
    android.widget.TextView label -> a
    android.widget.ImageView icon -> b
com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity -> com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity:
    com.danga.squeezer.model.SqueezerPlaylist playlist -> f
    java.lang.String oldname -> g
    com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback playlistMaintenanceCallback -> h
    53:53:com.danga.squeezer.model.SqueezerPlaylist getPlaylist() -> c
    57:57:void setOldname(java.lang.String) -> a
    61:61:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    110:118:void prepareActivity(android.os.Bundle) -> a
    122:123:void orderPage(int) -> a
    127:129:void registerCallback() -> e
    133:136:void unregisterCallback() -> f
    140:141:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    146:154:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    52:52:com.danga.squeezer.model.SqueezerPlaylist access$0(com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity) -> a
    55:55:java.lang.String access$1(com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity) -> b
    157:157:void access$2(com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity,java.lang.String) -> a
com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity$1 -> com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity$1:
    com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity this$0 -> a
    168:170:void onRenameFailed(java.lang.String) -> a
    173:174:void onCreateFailed(java.lang.String) -> b
com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity$2 -> com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity$2:
    com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity this$0 -> a
    64:73:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.model.SqueezerSong) -> a
    77:103:boolean doItemContext(android.view.MenuItem,int,com.danga.squeezer.model.SqueezerSong) -> a
com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity$3 -> com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity$3:
    com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity this$0 -> a
    java.lang.String val$msg -> b
    160:161:void run() -> run
com.danga.squeezer.itemlists.SqueezerPlaylistView -> com.danga.squeezer.itemlists.SqueezerPlaylistView:
    com.danga.squeezer.itemlists.SqueezerPlaylistsActivity activity -> a
    46:46:java.lang.String getQuantityString(int) -> a
    1:1:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:boolean doItemContext(android.view.MenuItem,int,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.SqueezerPlaylistsActivity -> com.danga.squeezer.itemlists.SqueezerPlaylistsActivity:
    com.danga.squeezer.model.SqueezerPlaylist currentPlaylist -> f
    java.lang.String oldname -> g
    com.danga.squeezer.itemlists.IServicePlaylistsCallback playlistsCallback -> h
    com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback playlistMaintenanceCallback -> i
    36:36:com.danga.squeezer.model.SqueezerPlaylist getCurrentPlaylist() -> m
    37:37:void setCurrentPlaylist(com.danga.squeezer.model.SqueezerPlaylist) -> a
    41:41:void setOldname(java.lang.String) -> a
    45:45:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    50:52:void registerCallback() -> e
    56:58:void unregisterCallback() -> f
    62:63:void orderPage(int) -> a
    67:68:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    73:78:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    35:35:com.danga.squeezer.model.SqueezerPlaylist access$0(com.danga.squeezer.itemlists.SqueezerPlaylistsActivity) -> a
    39:39:java.lang.String access$1(com.danga.squeezer.itemlists.SqueezerPlaylistsActivity) -> b
    92:92:void access$2(com.danga.squeezer.itemlists.SqueezerPlaylistsActivity,java.lang.String) -> a
com.danga.squeezer.itemlists.SqueezerPlaylistsActivity$1 -> com.danga.squeezer.itemlists.SqueezerPlaylistsActivity$1:
    com.danga.squeezer.itemlists.SqueezerPlaylistsActivity this$0 -> a
    88:89:void onPlaylistsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.SqueezerPlaylistsActivity$2 -> com.danga.squeezer.itemlists.SqueezerPlaylistsActivity$2:
    com.danga.squeezer.itemlists.SqueezerPlaylistsActivity this$0 -> a
    104:106:void onRenameFailed(java.lang.String) -> a
    109:110:void onCreateFailed(java.lang.String) -> b
com.danga.squeezer.itemlists.SqueezerPlaylistsActivity$3 -> com.danga.squeezer.itemlists.SqueezerPlaylistsActivity$3:
    com.danga.squeezer.itemlists.SqueezerPlaylistsActivity this$0 -> a
    java.lang.String val$msg -> b
    95:97:void run() -> run
com.danga.squeezer.itemlists.SqueezerPluginItemListActivity -> com.danga.squeezer.itemlists.SqueezerPluginItemListActivity:
    com.danga.squeezer.model.SqueezerPlugin plugin -> f
    com.danga.squeezer.model.SqueezerPluginItem parent -> g
    java.lang.String search -> h
    com.danga.squeezer.itemlists.IServicePluginItemListCallback pluginItemListCallback -> i
    47:47:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    52:52:com.danga.squeezer.framework.SqueezerItemAdapter createItemListAdapter(com.danga.squeezer.framework.SqueezerItemView) -> a
    57:82:void prepareActivity(android.os.Bundle) -> a
    85:90:void orderItems(java.lang.String) -> a
    94:95:void orderItems() -> h
    99:100:void registerCallback() -> e
    104:105:void unregisterCallback() -> f
    109:110:void orderPage(int) -> a
    114:118:void show(com.danga.squeezer.model.SqueezerPluginItem) -> a
    153:153:boolean play(com.danga.squeezer.model.SqueezerPluginItem) -> b
    161:161:boolean insert(com.danga.squeezer.model.SqueezerPluginItem) -> c
    165:165:boolean add(com.danga.squeezer.model.SqueezerPluginItem) -> d
    169:173:boolean pluginPlaylistControl(com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd,com.danga.squeezer.model.SqueezerPluginItem) -> a
    42:42:void access$0(com.danga.squeezer.itemlists.SqueezerPluginItemListActivity,com.danga.squeezer.model.SqueezerPluginItem) -> a
    84:84:void access$1(com.danga.squeezer.itemlists.SqueezerPluginItemListActivity,java.lang.String) -> a
com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$1 -> com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$1:
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity this$0 -> a
    128:146:void onPluginItemsReceived(int,int,java.util.Map,java.util.List) -> a
com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$1$1 -> com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$1$1:
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$1 this$1 -> a
    java.util.Map val$parameters -> b
    131:132:void run() -> run
com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$1$2 -> com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$1$2:
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$1 this$1 -> a
    140:141:void run() -> run
com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$2 -> com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$2:
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity this$0 -> a
    android.widget.EditText val$searchCriteriaText -> b
    66:70:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$3 -> com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$3:
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity this$0 -> a
    android.widget.EditText val$searchCriteriaText -> b
    76:79:void onClick(android.view.View) -> onClick
com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd -> com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd:
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd play -> a
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd load -> d
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd add -> b
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd insert -> c
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd[] ENUM$VALUES -> e
    1:1:com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd[] values() -> values
    1:1:com.danga.squeezer.itemlists.SqueezerPluginItemListActivity$PluginPlaylistControlCmd valueOf(java.lang.String) -> valueOf
com.danga.squeezer.itemlists.SqueezerPluginItemView -> com.danga.squeezer.itemlists.SqueezerPluginItemView:
    com.danga.squeezer.itemlists.SqueezerPluginItemListActivity activity -> a
    android.view.LayoutInflater layoutInflater -> b
    71:71:java.lang.String getQuantityString(int) -> a
    1:1:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:android.view.View getAdapterView(android.view.View,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:boolean doItemContext(android.view.MenuItem,int,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.SqueezerPluginItemView$ViewHolder -> com.danga.squeezer.itemlists.SqueezerPluginItemView$ViewHolder:
    android.widget.TextView label -> a
    android.widget.ImageView icon -> b
    android.widget.ImageView groupIcon -> c
com.danga.squeezer.itemlists.SqueezerPluginListActivity -> com.danga.squeezer.itemlists.SqueezerPluginListActivity:
    com.danga.squeezer.itemlists.IServicePluginListCallback pluginListCallback -> f
    36:37:void registerCallback() -> e
    41:42:void unregisterCallback() -> f
com.danga.squeezer.itemlists.SqueezerPluginListActivity$1 -> com.danga.squeezer.itemlists.SqueezerPluginListActivity$1:
    com.danga.squeezer.itemlists.SqueezerPluginListActivity this$0 -> a
    30:31:void onPluginsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.SqueezerPluginView -> com.danga.squeezer.itemlists.SqueezerPluginView:
    android.view.LayoutInflater layoutInflater -> a
    59:68:java.lang.String getIconUrl(java.lang.String) -> a
    1:1:android.view.View getAdapterView(android.view.View,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.SqueezerPluginView$ViewHolder -> com.danga.squeezer.itemlists.SqueezerPluginView$ViewHolder:
    android.widget.TextView label -> a
    android.widget.ImageView icon -> b
com.danga.squeezer.itemlists.SqueezerRadioListActivity -> com.danga.squeezer.itemlists.SqueezerRadioListActivity:
    31:31:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    36:37:void orderPage(int) -> a
com.danga.squeezer.itemlists.SqueezerRadioView -> com.danga.squeezer.itemlists.SqueezerRadioView:
    33:33:java.lang.String getQuantityString(int) -> a
    1:1:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.SqueezerSongListActivity -> com.danga.squeezer.itemlists.SqueezerSongListActivity:
    com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder sortOrder -> f
    java.lang.String searchString -> g
    com.danga.squeezer.model.SqueezerAlbum album -> h
    com.danga.squeezer.model.SqueezerArtist artist -> i
    com.danga.squeezer.model.SqueezerYear year -> j
    com.danga.squeezer.model.SqueezerGenre genre -> k
    com.danga.squeezer.itemlists.GenreSpinner genreSpinner -> l
    com.danga.squeezer.itemlists.YearSpinner yearSpinner -> m
    com.danga.squeezer.itemlists.SqueezerSongView songViewLogic -> n
    50:50:java.lang.String getSearchString() -> m
    51:51:void setSearchString(java.lang.String) -> a
    54:54:com.danga.squeezer.model.SqueezerAlbum getAlbum() -> n
    58:58:com.danga.squeezer.model.SqueezerArtist getArtist() -> o
    62:62:com.danga.squeezer.model.SqueezerYear getYear() -> p
    63:63:void setYear(com.danga.squeezer.model.SqueezerYear) -> a
    66:66:com.danga.squeezer.model.SqueezerGenre getGenre() -> c
    67:67:void setGenre(com.danga.squeezer.model.SqueezerGenre) -> a
    71:72:void setGenreSpinner(android.widget.Spinner) -> a
    76:77:void setYearSpinner(android.widget.Spinner) -> b
    83:87:void show(android.content.Context,com.danga.squeezer.framework.SqueezerItem[]) -> a
    92:93:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    98:115:void prepareActivity(android.os.Bundle) -> a
    119:122:void registerCallback() -> e
    126:129:void unregisterCallback() -> f
    133:134:void orderPage(int) -> a
    137:137:com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder getSortOrder() -> q
    141:143:void setSortOrder(com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder) -> a
    147:150:void onCreate(android.os.Bundle) -> onCreate
    154:155:boolean onSearchRequested() -> onSearchRequested
    159:160:void showFilterDialog() -> a_
    163:164:void showOrderDialog() -> r
com.danga.squeezer.itemlists.SqueezerSongView -> com.danga.squeezer.itemlists.SqueezerSongView:
    android.view.LayoutInflater layoutInflater -> a
    boolean browseByAlbum -> b
    boolean browseByArtist -> c
    38:38:void setBrowseByAlbum(boolean) -> a
    41:41:void setBrowseByArtist(boolean) -> b
    52:72:android.view.View getAdapterView(android.view.View,com.danga.squeezer.model.SqueezerSong) -> a
    76:77:void onItemSelected(int,com.danga.squeezer.model.SqueezerSong) -> a
    80:90:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.model.SqueezerSong) -> a
    94:105:boolean doItemContext(android.view.MenuItem,int,com.danga.squeezer.model.SqueezerSong) -> a
    109:109:java.lang.String getQuantityString(int) -> a
    1:1:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:android.view.View getAdapterView(android.view.View,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:boolean doItemContext(android.view.MenuItem,int,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.SqueezerSongView$ViewHolder -> com.danga.squeezer.itemlists.SqueezerSongView$ViewHolder:
    android.widget.TextView label1 -> a
    android.widget.TextView label2 -> b
    android.widget.ImageView icon -> c
com.danga.squeezer.itemlists.SqueezerYearListActivity -> com.danga.squeezer.itemlists.SqueezerYearListActivity:
    com.danga.squeezer.itemlists.IServiceYearListCallback yearListCallback -> f
    33:33:com.danga.squeezer.framework.SqueezerItemView createItemView() -> d
    38:39:void registerCallback() -> e
    43:44:void unregisterCallback() -> f
    48:49:void orderPage(int) -> a
com.danga.squeezer.itemlists.SqueezerYearListActivity$1 -> com.danga.squeezer.itemlists.SqueezerYearListActivity$1:
    com.danga.squeezer.itemlists.SqueezerYearListActivity this$0 -> a
    59:60:void onYearsReceived(int,int,java.util.List) -> a
com.danga.squeezer.itemlists.SqueezerYearView -> com.danga.squeezer.itemlists.SqueezerYearView:
    35:35:java.lang.String getQuantityString(int) -> a
    1:1:void setupContextMenu(android.view.ContextMenu,int,com.danga.squeezer.framework.SqueezerItem) -> a
    1:1:void onItemSelected(int,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.YearSpinner -> com.danga.squeezer.itemlists.YearSpinner:
    java.lang.String TAG -> b
    com.danga.squeezer.itemlists.YearSpinner$YearSpinnerCallback callback -> a
    com.danga.squeezer.framework.SqueezerItemListActivity activity -> c
    android.widget.Spinner spinner -> d
    com.danga.squeezer.itemlists.IServiceYearListCallback yearListCallback -> e
    48:55:void orderItems(int) -> a
    58:65:void registerCallback() -> a
    68:75:void unregisterCallback() -> b
    36:36:com.danga.squeezer.framework.SqueezerItemListActivity access$0(com.danga.squeezer.itemlists.YearSpinner) -> a
    37:37:android.widget.Spinner access$1(com.danga.squeezer.itemlists.YearSpinner) -> b
    47:47:void access$2(com.danga.squeezer.itemlists.YearSpinner,int) -> a
com.danga.squeezer.itemlists.YearSpinner$1 -> com.danga.squeezer.itemlists.YearSpinner$1:
    com.danga.squeezer.framework.SqueezerItemAdapter adapter -> b
    com.danga.squeezer.itemlists.YearSpinner this$0 -> a
    81:106:void onYearsReceived(int,int,java.util.List) -> a
    78:78:com.danga.squeezer.framework.SqueezerItemAdapter access$0(com.danga.squeezer.itemlists.YearSpinner$1) -> a
    78:78:void access$1(com.danga.squeezer.itemlists.YearSpinner$1,com.danga.squeezer.framework.SqueezerItemAdapter) -> a
com.danga.squeezer.itemlists.YearSpinner$1$1 -> com.danga.squeezer.itemlists.YearSpinner$1$1:
    com.danga.squeezer.itemlists.YearSpinner$1 this$1 -> a
    int val$count -> b
    int val$start -> c
    java.util.List val$list -> d
    83:104:void run() -> run
com.danga.squeezer.itemlists.YearSpinner$1$1$1 -> com.danga.squeezer.itemlists.YearSpinner$1$1$1:
    com.danga.squeezer.itemlists.YearSpinner$1$1 this$2 -> a
    91:91:android.view.View getAdapterView(android.view.View,java.lang.String) -> a
    1:1:android.view.View getAdapterView(android.view.View,com.danga.squeezer.framework.SqueezerItem) -> a
com.danga.squeezer.itemlists.YearSpinner$YearSpinnerCallback -> com.danga.squeezer.itemlists.YearSpinner$YearSpinnerCallback:
    com.danga.squeezer.service.ISqueezeService getService() -> a
    android.os.Handler getUIThreadHandler() -> b
    com.danga.squeezer.model.SqueezerYear getYear() -> p
com.danga.squeezer.itemlists.dialogs.SqueezerAlbumFilterDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerAlbumFilterDialog:
    com.danga.squeezer.itemlists.SqueezerAlbumListActivity activity -> I
    android.widget.Spinner genreSpinnerView -> J
    android.widget.Spinner yearSpinnerView -> K
    android.widget.EditText editText -> L
    22:43:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    48:52:void filter() -> e
com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog:
    16:30:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$1 -> com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$1:
    com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog this$0 -> a
    com.danga.squeezer.itemlists.SqueezerAlbumListActivity val$activity -> b
    26:28:void onClick(android.content.DialogInterface,int) -> onClick
com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder -> com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder:
    com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder album -> a
    com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder artflow -> b
    com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder __new -> c
    com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder[] ENUM$VALUES -> d
    1:1:com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder[] values() -> values
    1:1:com.danga.squeezer.itemlists.dialogs.SqueezerAlbumOrderDialog$AlbumsSortOrder valueOf(java.lang.String) -> valueOf
com.danga.squeezer.itemlists.dialogs.SqueezerArtistFilterDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerArtistFilterDialog:
    com.danga.squeezer.itemlists.SqueezerArtistListActivity activity -> I
    android.widget.EditText editText -> J
    android.widget.Spinner genreSpinnerView -> K
    20:36:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    41:44:void filter() -> e
com.danga.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog:
    android.widget.EditText editText -> a
    boolean commit(java.lang.String) -> a
    21:44:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
com.danga.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog$1 -> com.danga.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog$1:
    com.danga.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog this$0 -> a
    29:34:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.danga.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog$2 -> com.danga.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog$2:
    com.danga.squeezer.itemlists.dialogs.SqueezerBaseEditTextDialog this$0 -> a
    39:40:void onClick(android.content.DialogInterface,int) -> onClick
com.danga.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog:
    android.view.View filterForm -> a
    void filter() -> e
    21:46:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
com.danga.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog$1 -> com.danga.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog$1:
    com.danga.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog this$0 -> a
    30:35:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.danga.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog$2 -> com.danga.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog$2:
    com.danga.squeezer.itemlists.dialogs.SqueezerBaseFilterDialog this$0 -> a
    41:42:void onClick(android.content.DialogInterface,int) -> onClick
com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog:
    com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity activity -> a
    19:36:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    15:15:com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity access$0(com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog) -> a
com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog$1 -> com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog$1:
    com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistDeleteDialog this$0 -> a
    27:32:void onClick(android.content.DialogInterface,int) -> onClick
com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistItemMoveDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistItemMoveDialog:
    com.danga.squeezer.itemlists.SqueezerAbstractSongListActivity activity -> I
    int fromIndex -> J
    com.danga.squeezer.model.SqueezerPlaylist playlist -> K
    21:31:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    36:49:boolean commit(java.lang.String) -> a
com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistRenameDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistRenameDialog:
    com.danga.squeezer.itemlists.SqueezerPlaylistSongsActivity activity -> I
    17:24:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    30:37:boolean commit(java.lang.String) -> a
com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistSaveDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistSaveDialog:
    com.danga.squeezer.framework.SqueezerBaseActivity activity -> I
    17:24:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    30:34:boolean commit(java.lang.String) -> a
com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog:
    com.danga.squeezer.itemlists.SqueezerPlaylistsActivity activity -> a
    19:36:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    15:15:com.danga.squeezer.itemlists.SqueezerPlaylistsActivity access$0(com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog) -> a
com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog$1 -> com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog$1:
    com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistsDeleteDialog this$0 -> a
    27:32:void onClick(android.content.DialogInterface,int) -> onClick
com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistsNewDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistsNewDialog:
    com.danga.squeezer.itemlists.SqueezerPlaylistsActivity activity -> I
    17:24:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    30:35:boolean commit(java.lang.String) -> a
com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistsRenameDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerPlaylistsRenameDialog:
    com.danga.squeezer.itemlists.SqueezerPlaylistsActivity activity -> I
    17:24:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    30:37:boolean commit(java.lang.String) -> a
com.danga.squeezer.itemlists.dialogs.SqueezerSongFilterDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerSongFilterDialog:
    com.danga.squeezer.itemlists.SqueezerSongListActivity activity -> I
    android.widget.Spinner genreSpinnerView -> J
    android.widget.Spinner yearSpinnerView -> K
    android.widget.EditText editText -> L
    22:43:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    48:52:void filter() -> e
com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog -> com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog:
    16:29:android.app.Dialog onCreateDialog(android.os.Bundle) -> c
com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$1 -> com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$1:
    com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog this$0 -> a
    com.danga.squeezer.itemlists.SqueezerSongListActivity val$activity -> b
    25:27:void onClick(android.content.DialogInterface,int) -> onClick
com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder -> com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder:
    com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder title -> a
    com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder tracknum -> b
    com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder[] ENUM$VALUES -> c
    1:1:com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder[] values() -> values
    1:1:com.danga.squeezer.itemlists.dialogs.SqueezerSongOrderDialog$SongsSortOrder valueOf(java.lang.String) -> valueOf
com.danga.squeezer.menu.SqueezerFilterMenuItemFragment -> com.danga.squeezer.menu.SqueezerFilterMenuItemFragment:
    com.danga.squeezer.menu.SqueezerFilterMenuItemFragment$SqueezerFilterableListActivity activity -> a
    17:19:void onCreate(android.os.Bundle) -> a
    23:25:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    29:34:boolean onOptionsItemSelected(android.view.MenuItem) -> a
com.danga.squeezer.menu.SqueezerFilterMenuItemFragment$SqueezerFilterableListActivity -> com.danga.squeezer.menu.SqueezerFilterMenuItemFragment$SqueezerFilterableListActivity:
    void showFilterDialog() -> a_
com.danga.squeezer.menu.SqueezerMenuFragment -> com.danga.squeezer.menu.SqueezerMenuFragment:
    18:20:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    24:35:boolean onOptionsItemSelected(android.view.MenuItem) -> a
com.danga.squeezer.menu.SqueezerOrderMenuItemFragment -> com.danga.squeezer.menu.SqueezerOrderMenuItemFragment:
    com.danga.squeezer.menu.SqueezerOrderMenuItemFragment$SqueezerOrderableListActivity activity -> a
    17:19:void onCreate(android.os.Bundle) -> a
    23:25:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    29:34:boolean onOptionsItemSelected(android.view.MenuItem) -> a
com.danga.squeezer.menu.SqueezerOrderMenuItemFragment$SqueezerOrderableListActivity -> com.danga.squeezer.menu.SqueezerOrderMenuItemFragment$SqueezerOrderableListActivity:
    void showOrderDialog() -> r
com.danga.squeezer.model.SqueezerAlbum -> com.danga.squeezer.model.SqueezerAlbum:
    java.lang.String name -> a
    java.lang.String artist -> b
    int year -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    29:29:java.lang.String getName() -> b
    33:33:java.lang.String getArtist() -> d
    37:37:int getYear() -> e
    72:77:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    82:82:java.lang.String toString() -> toString
com.danga.squeezer.model.SqueezerAlbum$1 -> com.danga.squeezer.model.SqueezerAlbum$1:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.danga.squeezer.model.SqueezerArtist -> com.danga.squeezer.model.SqueezerArtist:
    java.lang.String name -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    27:27:java.lang.String getName() -> b
    54:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    61:61:java.lang.String toString() -> toString
com.danga.squeezer.model.SqueezerArtist$1 -> com.danga.squeezer.model.SqueezerArtist$1:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.danga.squeezer.model.SqueezerGenre -> com.danga.squeezer.model.SqueezerGenre:
    java.lang.String name -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    27:27:java.lang.String getName() -> b
    49:51:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    55:55:java.lang.String toString() -> toString
com.danga.squeezer.model.SqueezerGenre$1 -> com.danga.squeezer.model.SqueezerGenre$1:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.danga.squeezer.model.SqueezerPlayer -> com.danga.squeezer.model.SqueezerPlayer:
    java.lang.String ip -> a
    java.lang.String name -> b
    boolean canpoweroff -> c
    java.lang.String model -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    33:33:java.lang.String getName() -> b
    37:37:boolean isCanpoweroff() -> c
    41:41:java.lang.String getModel() -> d
    69:74:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    79:79:java.lang.String toString() -> toString
com.danga.squeezer.model.SqueezerPlayer$1 -> com.danga.squeezer.model.SqueezerPlayer$1:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.danga.squeezer.model.SqueezerPlaylist -> com.danga.squeezer.model.SqueezerPlaylist:
    java.lang.String name -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    27:27:java.lang.String getName() -> b
    28:28:com.danga.squeezer.model.SqueezerPlaylist setName(java.lang.String) -> b
    49:51:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    55:55:java.lang.String toString() -> toString
com.danga.squeezer.model.SqueezerPlaylist$1 -> com.danga.squeezer.model.SqueezerPlaylist$1:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.danga.squeezer.model.SqueezerPlugin -> com.danga.squeezer.model.SqueezerPlugin:
    java.lang.String name -> a
    java.lang.String icon -> b
    int weight -> c
    java.lang.String type -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    28:28:java.lang.String getName() -> b
    32:32:java.lang.String getIcon() -> c
    42:42:boolean isSearchable() -> d
    69:74:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    78:78:java.lang.String toString() -> toString
com.danga.squeezer.model.SqueezerPlugin$1 -> com.danga.squeezer.model.SqueezerPlugin$1:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.danga.squeezer.model.SqueezerPluginItem -> com.danga.squeezer.model.SqueezerPluginItem:
    java.lang.String name -> a
    java.lang.String description -> b
    java.lang.String image -> c
    boolean hasitems -> d
    java.lang.String type -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    28:28:java.lang.String getName() -> b
    36:36:java.lang.String getImage() -> c
    40:40:boolean isHasitems() -> d
    74:80:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    84:84:java.lang.String toString() -> toString
com.danga.squeezer.model.SqueezerPluginItem$1 -> com.danga.squeezer.model.SqueezerPluginItem$1:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.danga.squeezer.model.SqueezerSong -> com.danga.squeezer.model.SqueezerSong:
    java.lang.String name -> a
    java.lang.String artist -> b
    java.lang.String album -> c
    int year -> d
    java.lang.String artist_id -> e
    java.lang.String album_id -> f
    boolean remote -> g
    java.lang.String artwork_url -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    32:32:java.lang.String getName() -> b
    36:36:java.lang.String getArtist() -> d
    40:40:java.lang.String getAlbum() -> e
    44:44:int getYear() -> f
    48:48:java.lang.String getArtist_id() -> g
    52:52:java.lang.String getAlbum_id() -> h
    56:56:boolean isRemote() -> i
    65:74:java.lang.String getArtworkUrl(com.danga.squeezer.service.ISqueezeService) -> a
    111:119:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    124:124:java.lang.String toString() -> toString
com.danga.squeezer.model.SqueezerSong$1 -> com.danga.squeezer.model.SqueezerSong$1:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.danga.squeezer.model.SqueezerYear -> com.danga.squeezer.model.SqueezerYear:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    44:45:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    49:49:java.lang.String getName() -> b
    54:54:java.lang.String toString() -> toString
com.danga.squeezer.model.SqueezerYear$1 -> com.danga.squeezer.model.SqueezerYear$1:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.danga.squeezer.service.ISqueezeService -> com.danga.squeezer.service.ISqueezeService:
    void registerCallback(com.danga.squeezer.IServiceCallback) -> a
    void unregisterCallback(com.danga.squeezer.IServiceCallback) -> b
    void startConnect(java.lang.String) -> a
    void disconnect() -> b
    boolean isConnected() -> a
    void preferenceChanged(java.lang.String) -> f
    void setActivePlayer(com.danga.squeezer.model.SqueezerPlayer) -> a
    java.lang.String getActivePlayerName() -> o
    boolean canPowerOn() -> e
    boolean canPowerOff() -> f
    boolean powerOn() -> c
    boolean powerOff() -> d
    boolean canRandomplay() -> g
    boolean isPlaying() -> n
    boolean togglePausePlay() -> h
    boolean play() -> i
    boolean stop() -> j
    boolean nextTrack() -> k
    boolean previousTrack() -> l
    boolean playlistControl(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean randomPlay(java.lang.String) -> b
    boolean playlistIndex(int) -> b
    boolean playlistRemove(int) -> c
    boolean playlistMove(int,int) -> a
    boolean playlistClear() -> m
    boolean playlistSave(java.lang.String) -> c
    boolean pluginPlaylistControl(com.danga.squeezer.model.SqueezerPlugin,java.lang.String,java.lang.String) -> a
    int getSecondsTotal() -> r
    int getSecondsElapsed() -> q
    boolean setSecondsElapsed(int) -> d
    com.danga.squeezer.model.SqueezerSong currentSong() -> p
    java.lang.String getAlbumArtUrl(java.lang.String) -> d
    java.lang.String getIconUrl(java.lang.String) -> e
    int adjustVolumeBy(int) -> a
    boolean players(int) -> e
    void registerPlayerListCallback(com.danga.squeezer.itemlists.IServicePlayerListCallback) -> a
    void unregisterPlayerListCallback(com.danga.squeezer.itemlists.IServicePlayerListCallback) -> b
    boolean albums(int,java.lang.String,java.lang.String,com.danga.squeezer.model.SqueezerArtist,com.danga.squeezer.model.SqueezerYear,com.danga.squeezer.model.SqueezerGenre,com.danga.squeezer.model.SqueezerSong) -> a
    void registerAlbumListCallback(com.danga.squeezer.itemlists.IServiceAlbumListCallback) -> a
    void unregisterAlbumListCallback(com.danga.squeezer.itemlists.IServiceAlbumListCallback) -> b
    boolean artists(int,java.lang.String,com.danga.squeezer.model.SqueezerAlbum,com.danga.squeezer.model.SqueezerGenre) -> a
    void registerArtistListCallback(com.danga.squeezer.itemlists.IServiceArtistListCallback) -> a
    void unregisterArtistListCallback(com.danga.squeezer.itemlists.IServiceArtistListCallback) -> b
    boolean years(int) -> f
    void registerYearListCallback(com.danga.squeezer.itemlists.IServiceYearListCallback) -> a
    void unregisterYearListCallback(com.danga.squeezer.itemlists.IServiceYearListCallback) -> b
    boolean genres(int) -> g
    void registerGenreListCallback(com.danga.squeezer.itemlists.IServiceGenreListCallback) -> a
    void unregisterGenreListCallback(com.danga.squeezer.itemlists.IServiceGenreListCallback) -> b
    boolean songs(int,java.lang.String,java.lang.String,com.danga.squeezer.model.SqueezerAlbum,com.danga.squeezer.model.SqueezerArtist,com.danga.squeezer.model.SqueezerYear,com.danga.squeezer.model.SqueezerGenre) -> a
    boolean currentPlaylist(int) -> h
    boolean playlistSongs(int,com.danga.squeezer.model.SqueezerPlaylist) -> a
    void registerSongListCallback(com.danga.squeezer.itemlists.IServiceSongListCallback) -> a
    void unregisterSongListCallback(com.danga.squeezer.itemlists.IServiceSongListCallback) -> b
    boolean playlists(int) -> i
    void registerPlaylistsCallback(com.danga.squeezer.itemlists.IServicePlaylistsCallback) -> a
    void unregisterPlaylistsCallback(com.danga.squeezer.itemlists.IServicePlaylistsCallback) -> b
    void registerPlaylistMaintenanceCallback(com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> a
    void unregisterPlaylistMaintenanceCallback(com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> b
    boolean playlistsNew(java.lang.String) -> g
    boolean playlistsRename(com.danga.squeezer.model.SqueezerPlaylist,java.lang.String) -> a
    boolean playlistsDelete(com.danga.squeezer.model.SqueezerPlaylist) -> a
    boolean playlistsMove(com.danga.squeezer.model.SqueezerPlaylist,int,int) -> a
    boolean playlistsRemove(com.danga.squeezer.model.SqueezerPlaylist,int) -> a
    boolean search(int,java.lang.String) -> a
    boolean radios(int) -> j
    boolean apps(int) -> k
    void registerPluginListCallback(com.danga.squeezer.itemlists.IServicePluginListCallback) -> a
    void unregisterPluginListCallback(com.danga.squeezer.itemlists.IServicePluginListCallback) -> b
    boolean pluginItems(int,com.danga.squeezer.model.SqueezerPlugin,com.danga.squeezer.model.SqueezerPluginItem,java.lang.String) -> a
    void registerPluginItemListCallback(com.danga.squeezer.itemlists.IServicePluginItemListCallback) -> a
    void unregisterPluginItemListCallback(com.danga.squeezer.itemlists.IServicePluginItemListCallback) -> b
com.danga.squeezer.service.ISqueezeService$Stub -> com.danga.squeezer.service.ISqueezeService$Stub:
    23:30:com.danga.squeezer.service.ISqueezeService asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:863:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.danga.squeezer.service.ISqueezeService$Stub$Proxy -> com.danga.squeezer.service.ISqueezeService$Stub$Proxy:
    android.os.IBinder mRemote -> a
    874:874:android.os.IBinder asBinder() -> asBinder
    884:896:void registerCallback(com.danga.squeezer.IServiceCallback) -> a
    899:911:void unregisterCallback(com.danga.squeezer.IServiceCallback) -> b
    917:929:void startConnect(java.lang.String) -> a
    932:943:void disconnect() -> b
    946:959:boolean isConnected() -> a
    965:977:void preferenceChanged(java.lang.String) -> f
    982:1000:void setActivePlayer(com.danga.squeezer.model.SqueezerPlayer) -> a
    1005:1018:java.lang.String getActivePlayerName() -> o
    1025:1038:boolean canPowerOn() -> e
    1042:1055:boolean canPowerOff() -> f
    1059:1072:boolean powerOn() -> c
    1076:1089:boolean powerOff() -> d
    1093:1106:boolean canRandomplay() -> g
    1110:1123:boolean isPlaying() -> n
    1127:1140:boolean togglePausePlay() -> h
    1144:1157:boolean play() -> i
    1161:1174:boolean stop() -> j
    1178:1191:boolean nextTrack() -> k
    1195:1208:boolean previousTrack() -> l
    1212:1228:boolean playlistControl(java.lang.String,java.lang.String,java.lang.String) -> a
    1232:1246:boolean randomPlay(java.lang.String) -> b
    1250:1264:boolean playlistIndex(int) -> b
    1268:1282:boolean playlistRemove(int) -> c
    1286:1301:boolean playlistMove(int,int) -> a
    1305:1318:boolean playlistClear() -> m
    1322:1336:boolean playlistSave(java.lang.String) -> c
    1340:1362:boolean pluginPlaylistControl(com.danga.squeezer.model.SqueezerPlugin,java.lang.String,java.lang.String) -> a
    1368:1381:int getSecondsTotal() -> r
    1385:1398:int getSecondsElapsed() -> q
    1402:1416:boolean setSecondsElapsed(int) -> d
    1420:1438:com.danga.squeezer.model.SqueezerSong currentSong() -> p
    1442:1456:java.lang.String getAlbumArtUrl(java.lang.String) -> d
    1460:1474:java.lang.String getIconUrl(java.lang.String) -> e
    1482:1496:int adjustVolumeBy(int) -> a
    1502:1516:boolean players(int) -> e
    1520:1532:void registerPlayerListCallback(com.danga.squeezer.itemlists.IServicePlayerListCallback) -> a
    1535:1547:void unregisterPlayerListCallback(com.danga.squeezer.itemlists.IServicePlayerListCallback) -> b
    1563:1607:boolean albums(int,java.lang.String,java.lang.String,com.danga.squeezer.model.SqueezerArtist,com.danga.squeezer.model.SqueezerYear,com.danga.squeezer.model.SqueezerGenre,com.danga.squeezer.model.SqueezerSong) -> a
    1611:1623:void registerAlbumListCallback(com.danga.squeezer.itemlists.IServiceAlbumListCallback) -> a
    1626:1638:void unregisterAlbumListCallback(com.danga.squeezer.itemlists.IServiceAlbumListCallback) -> b
    1643:1672:boolean artists(int,java.lang.String,com.danga.squeezer.model.SqueezerAlbum,com.danga.squeezer.model.SqueezerGenre) -> a
    1676:1688:void registerArtistListCallback(com.danga.squeezer.itemlists.IServiceArtistListCallback) -> a
    1691:1703:void unregisterArtistListCallback(com.danga.squeezer.itemlists.IServiceArtistListCallback) -> b
    1708:1722:boolean years(int) -> f
    1726:1738:void registerYearListCallback(com.danga.squeezer.itemlists.IServiceYearListCallback) -> a
    1741:1753:void unregisterYearListCallback(com.danga.squeezer.itemlists.IServiceYearListCallback) -> b
    1758:1772:boolean genres(int) -> g
    1776:1788:void registerGenreListCallback(com.danga.squeezer.itemlists.IServiceGenreListCallback) -> a
    1791:1803:void unregisterGenreListCallback(com.danga.squeezer.itemlists.IServiceGenreListCallback) -> b
    1808:1852:boolean songs(int,java.lang.String,java.lang.String,com.danga.squeezer.model.SqueezerAlbum,com.danga.squeezer.model.SqueezerArtist,com.danga.squeezer.model.SqueezerYear,com.danga.squeezer.model.SqueezerGenre) -> a
    1856:1870:boolean currentPlaylist(int) -> h
    1874:1895:boolean playlistSongs(int,com.danga.squeezer.model.SqueezerPlaylist) -> a
    1899:1911:void registerSongListCallback(com.danga.squeezer.itemlists.IServiceSongListCallback) -> a
    1914:1926:void unregisterSongListCallback(com.danga.squeezer.itemlists.IServiceSongListCallback) -> b
    1931:1945:boolean playlists(int) -> i
    1949:1961:void registerPlaylistsCallback(com.danga.squeezer.itemlists.IServicePlaylistsCallback) -> a
    1964:1976:void unregisterPlaylistsCallback(com.danga.squeezer.itemlists.IServicePlaylistsCallback) -> b
    1981:1993:void registerPlaylistMaintenanceCallback(com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> a
    1996:2008:void unregisterPlaylistMaintenanceCallback(com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> b
    2011:2025:boolean playlistsNew(java.lang.String) -> g
    2029:2050:boolean playlistsRename(com.danga.squeezer.model.SqueezerPlaylist,java.lang.String) -> a
    2054:2074:boolean playlistsDelete(com.danga.squeezer.model.SqueezerPlaylist) -> a
    2078:2100:boolean playlistsMove(com.danga.squeezer.model.SqueezerPlaylist,int,int) -> a
    2104:2125:boolean playlistsRemove(com.danga.squeezer.model.SqueezerPlaylist,int) -> a
    2131:2146:boolean search(int,java.lang.String) -> a
    2152:2166:boolean radios(int) -> j
    2170:2184:boolean apps(int) -> k
    2188:2200:void registerPluginListCallback(com.danga.squeezer.itemlists.IServicePluginListCallback) -> a
    2203:2215:void unregisterPluginListCallback(com.danga.squeezer.itemlists.IServicePluginListCallback) -> b
    2218:2247:boolean pluginItems(int,com.danga.squeezer.model.SqueezerPlugin,com.danga.squeezer.model.SqueezerPluginItem,java.lang.String) -> a
    2251:2263:void registerPluginItemListCallback(com.danga.squeezer.itemlists.IServicePluginItemListCallback) -> a
    2266:2278:void unregisterPluginItemListCallback(com.danga.squeezer.itemlists.IServicePluginItemListCallback) -> b
com.danga.squeezer.service.SqueezeService -> com.danga.squeezer.service.SqueezeService:
    java.util.Map itemKeys -> p
    java.util.concurrent.ScheduledThreadPoolExecutor executor -> q
    java.util.concurrent.atomic.AtomicReference playerListCallback -> a
    java.util.concurrent.atomic.AtomicReference albumListCallback -> b
    java.util.concurrent.atomic.AtomicReference artistListCallback -> c
    java.util.concurrent.atomic.AtomicReference yearListCallback -> d
    java.util.concurrent.atomic.AtomicReference genreListCallback -> e
    java.util.concurrent.atomic.AtomicReference songListCallback -> f
    java.util.concurrent.atomic.AtomicReference playlistsCallback -> g
    java.util.concurrent.atomic.AtomicReference playlistMaintenanceCallback -> h
    java.util.concurrent.atomic.AtomicReference pluginListCallback -> i
    java.util.concurrent.atomic.AtomicReference pluginItemListCallback -> j
    com.danga.squeezer.service.SqueezerConnectionState connectionState -> k
    com.danga.squeezer.service.SqueezerPlayerState playerState -> l
    com.danga.squeezer.service.SqueezerCLIImpl cli -> m
    com.danga.squeezer.VolumePanel mVolumePanel -> r
    int scrobbleType -> s
    boolean debugLogging -> n
    android.content.SharedPreferences preferences -> o
    java.util.Map globalHandlers -> t
    java.util.Map prefixedHandlers -> u
    java.util.Map playerSpecificHandlers -> v
    java.util.Map prefixedPlayerSpecificHandlers -> w
    com.danga.squeezer.service.ISqueezeService$Stub squeezeService -> x
    116:131:void onCreate() -> onCreate
    134:136:void getPreferences() -> d
    140:140:android.os.IBinder onBind(android.content.Intent) -> onBind
    145:148:void onDestroy() -> onDestroy
    151:154:void disconnect() -> a
    162:223:java.util.Map initializeGlobalHandlers() -> e
    227:237:java.util.Map initializePrefixedHandlers() -> f
    241:289:java.util.Map initializePlayerSpecificHandlers() -> g
    293:303:java.util.Map initializePrefixedPlayerSpecificHandlers() -> h
    312:343:void onLineReceived(java.lang.String) -> a
    392:406:java.util.HashMap parseTokens(java.util.List) -> b
    435:479:void changeActivePlayer(com.danga.squeezer.model.SqueezerPlayer) -> a
    490:495:void updatePlayerSubscriptionState() -> i
    498:503:void onCliPortConnectionEstablished() -> b
    506:519:void setPlayingState(boolean) -> a
    522:579:void updateOngoingNotification() -> j
    593:595:void clearOngoingNotification() -> k
    482:482:void access$0(com.danga.squeezer.service.SqueezeService) -> a
    86:86:java.util.concurrent.ScheduledThreadPoolExecutor access$1(com.danga.squeezer.service.SqueezeService) -> b
    73:73:java.util.Map access$2() -> c
    521:521:void access$3(com.danga.squeezer.service.SqueezeService) -> c
    133:133:void access$4(com.danga.squeezer.service.SqueezeService) -> d
    391:391:java.util.HashMap access$5$6aacefe6(java.util.List) -> a
    345:345:void access$6(com.danga.squeezer.service.SqueezeService,int) -> a
    505:505:void access$7(com.danga.squeezer.service.SqueezeService,boolean) -> a
    409:409:void access$9(com.danga.squeezer.service.SqueezeService,java.util.List) -> a
    358:358:void access$10(com.danga.squeezer.service.SqueezeService,java.util.List) -> b
com.danga.squeezer.service.SqueezeService$1 -> com.danga.squeezer.service.SqueezeService$1:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    600:603:void registerCallback(com.danga.squeezer.IServiceCallback) -> a
    606:609:void unregisterCallback(com.danga.squeezer.IServiceCallback) -> b
    612:617:int adjustVolumeBy(int) -> a
    621:621:boolean isConnected() -> a
    625:626:void startConnect(java.lang.String) -> a
    629:631:void disconnect() -> b
    634:636:boolean powerOn() -> c
    640:642:boolean powerOff() -> d
    646:646:boolean canPowerOn() -> e
    650:650:boolean canPowerOff() -> f
    654:655:boolean canPower() -> s
    659:659:boolean canRandomplay() -> g
    663:676:boolean togglePausePlay() -> h
    681:685:boolean play() -> i
    690:693:boolean stop() -> j
    697:699:boolean nextTrack() -> k
    703:705:boolean previousTrack() -> l
    709:711:boolean playlistControl(java.lang.String,java.lang.String,java.lang.String) -> a
    716:718:boolean randomPlay(java.lang.String) -> b
    722:724:boolean playlistIndex(int) -> b
    728:730:boolean playlistRemove(int) -> c
    734:736:boolean playlistMove(int,int) -> a
    740:742:boolean playlistClear() -> m
    746:748:boolean playlistSave(java.lang.String) -> c
    752:754:boolean pluginPlaylistControl(com.danga.squeezer.model.SqueezerPlugin,java.lang.String,java.lang.String) -> a
    759:759:boolean isPlaying() -> n
    763:764:void setActivePlayer(com.danga.squeezer.model.SqueezerPlayer) -> a
    767:768:java.lang.String getActivePlayerName() -> o
    772:772:com.danga.squeezer.model.SqueezerSong currentSong() -> p
    776:778:java.lang.String getAlbumArtUrl(java.lang.String) -> d
    786:788:java.lang.String getIconUrl(java.lang.String) -> e
    792:792:int getSecondsElapsed() -> q
    796:801:boolean setSecondsElapsed(int) -> d
    805:805:int getSecondsTotal() -> r
    809:815:void preferenceChanged(java.lang.String) -> f
    820:822:boolean players(int) -> e
    827:829:void registerPlayerListCallback(com.danga.squeezer.itemlists.IServicePlayerListCallback) -> a
    832:835:void unregisterPlayerListCallback(com.danga.squeezer.itemlists.IServicePlayerListCallback) -> b
    841:856:boolean albums(int,java.lang.String,java.lang.String,com.danga.squeezer.model.SqueezerArtist,com.danga.squeezer.model.SqueezerYear,com.danga.squeezer.model.SqueezerGenre,com.danga.squeezer.model.SqueezerSong) -> a
    860:862:void registerAlbumListCallback(com.danga.squeezer.itemlists.IServiceAlbumListCallback) -> a
    865:868:void unregisterAlbumListCallback(com.danga.squeezer.itemlists.IServiceAlbumListCallback) -> b
    874:883:boolean artists(int,java.lang.String,com.danga.squeezer.model.SqueezerAlbum,com.danga.squeezer.model.SqueezerGenre) -> a
    887:889:void registerArtistListCallback(com.danga.squeezer.itemlists.IServiceArtistListCallback) -> a
    892:895:void unregisterArtistListCallback(com.danga.squeezer.itemlists.IServiceArtistListCallback) -> b
    900:902:boolean years(int) -> f
    906:908:void registerYearListCallback(com.danga.squeezer.itemlists.IServiceYearListCallback) -> a
    911:914:void unregisterYearListCallback(com.danga.squeezer.itemlists.IServiceYearListCallback) -> b
    919:921:boolean genres(int) -> g
    925:927:void registerGenreListCallback(com.danga.squeezer.itemlists.IServiceGenreListCallback) -> a
    930:933:void unregisterGenreListCallback(com.danga.squeezer.itemlists.IServiceGenreListCallback) -> b
    939:955:boolean songs(int,java.lang.String,java.lang.String,com.danga.squeezer.model.SqueezerAlbum,com.danga.squeezer.model.SqueezerArtist,com.danga.squeezer.model.SqueezerYear,com.danga.squeezer.model.SqueezerGenre) -> a
    960:962:boolean currentPlaylist(int) -> h
    967:969:boolean playlistSongs(int,com.danga.squeezer.model.SqueezerPlaylist) -> a
    973:975:void registerSongListCallback(com.danga.squeezer.itemlists.IServiceSongListCallback) -> a
    978:981:void unregisterSongListCallback(com.danga.squeezer.itemlists.IServiceSongListCallback) -> b
    986:988:boolean playlists(int) -> i
    992:994:void registerPlaylistsCallback(com.danga.squeezer.itemlists.IServicePlaylistsCallback) -> a
    997:1000:void unregisterPlaylistsCallback(com.danga.squeezer.itemlists.IServicePlaylistsCallback) -> b
    1004:1006:void registerPlaylistMaintenanceCallback(com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> a
    1009:1011:void unregisterPlaylistMaintenanceCallback(com.danga.squeezer.itemlists.IServicePlaylistMaintenanceCallback) -> b
    1014:1016:boolean playlistsDelete(com.danga.squeezer.model.SqueezerPlaylist) -> a
    1020:1023:boolean playlistsMove(com.danga.squeezer.model.SqueezerPlaylist,int,int) -> a
    1027:1029:boolean playlistsNew(java.lang.String) -> g
    1033:1035:boolean playlistsRemove(com.danga.squeezer.model.SqueezerPlaylist,int) -> a
    1039:1041:boolean playlistsRename(com.danga.squeezer.model.SqueezerPlaylist,java.lang.String) -> a
    1047:1052:boolean search(int,java.lang.String) -> a
    1057:1059:boolean radios(int) -> j
    1064:1066:boolean apps(int) -> k
    1070:1072:void registerPluginListCallback(com.danga.squeezer.itemlists.IServicePluginListCallback) -> a
    1075:1078:void unregisterPluginListCallback(com.danga.squeezer.itemlists.IServicePluginListCallback) -> b
    1083:1090:boolean pluginItems(int,com.danga.squeezer.model.SqueezerPlugin,com.danga.squeezer.model.SqueezerPluginItem,java.lang.String) -> a
    1094:1096:void registerPluginItemListCallback(com.danga.squeezer.itemlists.IServicePluginItemListCallback) -> a
    1099:1102:void unregisterPluginItemListCallback(com.danga.squeezer.itemlists.IServicePluginItemListCallback) -> b
com.danga.squeezer.service.SqueezeService$10 -> com.danga.squeezer.service.SqueezeService$10:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    266:267:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$11 -> com.danga.squeezer.service.SqueezeService$11:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    271:272:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$12 -> com.danga.squeezer.service.SqueezeService$12:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    276:281:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$13 -> com.danga.squeezer.service.SqueezeService$13:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    285:286:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$14 -> com.danga.squeezer.service.SqueezeService$14:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    com.danga.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd val$cmd -> b
    298:299:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$15 -> com.danga.squeezer.service.SqueezeService$15:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    java.lang.String val$playerId -> b
    465:470:void run() -> run
com.danga.squeezer.service.SqueezeService$2 -> com.danga.squeezer.service.SqueezeService$2:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    com.danga.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd val$cmd -> b
    167:168:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$3 -> com.danga.squeezer.service.SqueezeService$3:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    173:206:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$4 -> com.danga.squeezer.service.SqueezeService$4:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    210:213:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$5 -> com.danga.squeezer.service.SqueezeService$5:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    217:220:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$6 -> com.danga.squeezer.service.SqueezeService$6:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    com.danga.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd val$cmd -> b
    232:233:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$7 -> com.danga.squeezer.service.SqueezeService$7:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    com.danga.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd val$cmd -> b
    246:247:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$8 -> com.danga.squeezer.service.SqueezeService$8:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    252:257:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$9 -> com.danga.squeezer.service.SqueezeService$9:
    com.danga.squeezer.service.SqueezeService this$0 -> a
    261:262:void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezeService$SqueezerCmdHandler -> com.danga.squeezer.service.SqueezeService$SqueezerCmdHandler:
    void handle(java.util.List) -> a
com.danga.squeezer.service.SqueezerCLIImpl -> com.danga.squeezer.service.SqueezerCLIImpl:
    com.danga.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd[] extQueryFormatCmds -> a
    java.util.Map extQueryFormatCmdMap -> b
    com.danga.squeezer.service.SqueezeService service -> c
    int pageSize -> d
    int _correlationid -> e
    java.util.Map cmdCorrelationIds -> f
    java.util.Map typeCorrelationIds -> g
    226:229:java.util.Map initializeExtQueryFormatCmdMap() -> b
    241:242:void initialize() -> a
    250:263:void sendCommand(java.lang.String[]) -> a
    266:270:void sendPlayerCommand(java.lang.String) -> a
    273:274:boolean checkCorrelation(java.lang.Integer,int) -> a
    284:285:void cancelRequests(java.lang.Class) -> a
    311:318:void requestItems(java.lang.String,java.lang.String,int,java.util.List) -> a
    321:322:void requestItems(java.lang.String,int,java.util.List) -> a
    325:326:void requestItems(java.lang.String,int) -> a
    329:333:void requestPlayerItems(java.lang.String,int,java.util.List) -> b
    422:515:void parseSqueezerList(com.danga.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd,java.util.List) -> a
    233:233:com.danga.squeezer.service.SqueezeService access$0(com.danga.squeezer.service.SqueezerCLIImpl) -> a
com.danga.squeezer.service.SqueezerCLIImpl$1 -> com.danga.squeezer.service.SqueezerCLIImpl$1:
    com.danga.squeezer.model.SqueezerPlayer defaultPlayer -> a
    java.lang.String lastConnectedPlayer -> b
    java.util.List players -> c
    com.danga.squeezer.service.SqueezerCLIImpl this$0 -> d
    94:94:java.lang.Class getDataType() -> a
    98:102:void clear() -> b
    105:110:void add(java.util.Map) -> a
    113:127:boolean processList$482070a(int,int,java.util.Map) -> a
com.danga.squeezer.service.SqueezerCLIImpl$1$1 -> com.danga.squeezer.service.SqueezerCLIImpl$1$1:
    com.danga.squeezer.service.SqueezerCLIImpl$1 this$1 -> a
com.danga.squeezer.service.SqueezerCLIImpl$AlbumListHandler -> com.danga.squeezer.service.SqueezerCLIImpl$AlbumListHandler:
    java.util.List albums -> a
    com.danga.squeezer.service.SqueezerCLIImpl this$0 -> b
    609:609:java.lang.Class getDataType() -> a
    613:614:void clear() -> b
    617:618:void add(java.util.Map) -> a
    621:629:boolean processList$482070a(int,int,java.util.Map) -> a
com.danga.squeezer.service.SqueezerCLIImpl$AlbumListHandler$1 -> com.danga.squeezer.service.SqueezerCLIImpl$AlbumListHandler$1:
    com.danga.squeezer.service.SqueezerCLIImpl$AlbumListHandler this$1 -> a
com.danga.squeezer.service.SqueezerCLIImpl$ArtistListHandler -> com.danga.squeezer.service.SqueezerCLIImpl$ArtistListHandler:
    java.util.List artists -> a
    com.danga.squeezer.service.SqueezerCLIImpl this$0 -> b
    580:580:java.lang.Class getDataType() -> a
    584:586:void clear() -> b
    589:590:void add(java.util.Map) -> a
    593:601:boolean processList$482070a(int,int,java.util.Map) -> a
com.danga.squeezer.service.SqueezerCLIImpl$ArtistListHandler$1 -> com.danga.squeezer.service.SqueezerCLIImpl$ArtistListHandler$1:
    com.danga.squeezer.service.SqueezerCLIImpl$ArtistListHandler this$1 -> a
com.danga.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd -> com.danga.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd:
    boolean playerSpecific -> a
    boolean prefixed -> b
    java.lang.String cmd -> c
    java.util.Set taggedParameters -> d
    com.danga.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo[] parserInfos -> e
    com.danga.squeezer.service.SqueezerCLIImpl this$0 -> f
    53:53:com.danga.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo[] access$2(com.danga.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd) -> a
    52:52:java.util.Set access$3(com.danga.squeezer.service.SqueezerCLIImpl$ExtendedQueryFormatCmd) -> b
com.danga.squeezer.service.SqueezerCLIImpl$GenreListHandler -> com.danga.squeezer.service.SqueezerCLIImpl$GenreListHandler:
    java.util.List genres -> a
    com.danga.squeezer.service.SqueezerCLIImpl this$0 -> b
    551:551:java.lang.Class getDataType() -> a
    555:556:void clear() -> b
    559:560:void add(java.util.Map) -> a
    563:571:boolean processList$482070a(int,int,java.util.Map) -> a
com.danga.squeezer.service.SqueezerCLIImpl$GenreListHandler$1 -> com.danga.squeezer.service.SqueezerCLIImpl$GenreListHandler$1:
    com.danga.squeezer.service.SqueezerCLIImpl$GenreListHandler this$1 -> a
com.danga.squeezer.service.SqueezerCLIImpl$PlaylistsHandler -> com.danga.squeezer.service.SqueezerCLIImpl$PlaylistsHandler:
    java.util.List playlists -> a
    com.danga.squeezer.service.SqueezerCLIImpl this$0 -> b
    665:665:java.lang.Class getDataType() -> a
    669:670:void clear() -> b
    673:674:void add(java.util.Map) -> a
    677:685:boolean processList$482070a(int,int,java.util.Map) -> a
com.danga.squeezer.service.SqueezerCLIImpl$PlaylistsHandler$1 -> com.danga.squeezer.service.SqueezerCLIImpl$PlaylistsHandler$1:
    com.danga.squeezer.service.SqueezerCLIImpl$PlaylistsHandler this$1 -> a
com.danga.squeezer.service.SqueezerCLIImpl$PluginItemListHandler -> com.danga.squeezer.service.SqueezerCLIImpl$PluginItemListHandler:
    java.util.List pluginItems -> a
    com.danga.squeezer.service.SqueezerCLIImpl this$0 -> b
    723:723:java.lang.Class getDataType() -> a
    727:728:void clear() -> b
    731:732:void add(java.util.Map) -> a
    735:743:boolean processList$482070a(int,int,java.util.Map) -> a
com.danga.squeezer.service.SqueezerCLIImpl$PluginItemListHandler$1 -> com.danga.squeezer.service.SqueezerCLIImpl$PluginItemListHandler$1:
    com.danga.squeezer.service.SqueezerCLIImpl$PluginItemListHandler this$1 -> a
com.danga.squeezer.service.SqueezerCLIImpl$PluginListHandler -> com.danga.squeezer.service.SqueezerCLIImpl$PluginListHandler:
    java.util.List plugins -> a
    com.danga.squeezer.service.SqueezerCLIImpl this$0 -> b
    694:694:java.lang.Class getDataType() -> a
    698:699:void clear() -> b
    702:703:void add(java.util.Map) -> a
    706:714:boolean processList$482070a(int,int,java.util.Map) -> a
com.danga.squeezer.service.SqueezerCLIImpl$PluginListHandler$1 -> com.danga.squeezer.service.SqueezerCLIImpl$PluginListHandler$1:
    com.danga.squeezer.service.SqueezerCLIImpl$PluginListHandler this$1 -> a
com.danga.squeezer.service.SqueezerCLIImpl$SongListHandler -> com.danga.squeezer.service.SqueezerCLIImpl$SongListHandler:
    java.util.List songs -> a
    com.danga.squeezer.service.SqueezerCLIImpl this$0 -> b
    637:637:java.lang.Class getDataType() -> a
    641:642:void clear() -> b
    645:646:void add(java.util.Map) -> a
    649:657:boolean processList$482070a(int,int,java.util.Map) -> a
com.danga.squeezer.service.SqueezerCLIImpl$SongListHandler$1 -> com.danga.squeezer.service.SqueezerCLIImpl$SongListHandler$1:
    com.danga.squeezer.service.SqueezerCLIImpl$SongListHandler this$1 -> a
com.danga.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo -> com.danga.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo:
    java.lang.String item_delimiter -> a
    java.lang.String count_id -> b
    com.danga.squeezer.service.SqueezerCLIImpl$SqueezerListHandler handler -> c
    349:349:com.danga.squeezer.service.SqueezerCLIImpl$SqueezerListHandler access$0(com.danga.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo) -> a
    348:348:java.lang.String access$1(com.danga.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo) -> b
    347:347:java.lang.String access$2(com.danga.squeezer.service.SqueezerCLIImpl$SqueezeParserInfo) -> c
com.danga.squeezer.service.SqueezerCLIImpl$SqueezerListHandler -> com.danga.squeezer.service.SqueezerCLIImpl$SqueezerListHandler:
    java.lang.Class getDataType() -> a
    void clear() -> b
    void add(java.util.Map) -> a
    boolean processList$482070a(int,int,java.util.Map) -> a
com.danga.squeezer.service.SqueezerCLIImpl$YearListHandler -> com.danga.squeezer.service.SqueezerCLIImpl$YearListHandler:
    java.util.List years -> a
    com.danga.squeezer.service.SqueezerCLIImpl this$0 -> b
    523:523:java.lang.Class getDataType() -> a
    527:528:void clear() -> b
    531:532:void add(java.util.Map) -> a
    535:543:boolean processList$482070a(int,int,java.util.Map) -> a
com.danga.squeezer.service.SqueezerCLIImpl$YearListHandler$1 -> com.danga.squeezer.service.SqueezerCLIImpl$YearListHandler$1:
    com.danga.squeezer.service.SqueezerCLIImpl$YearListHandler this$1 -> a
com.danga.squeezer.service.SqueezerConnectionState -> com.danga.squeezer.service.SqueezerConnectionState:
    java.util.concurrent.atomic.AtomicInteger currentConnectionGeneration -> a
    java.util.concurrent.atomic.AtomicReference callback -> b
    java.util.concurrent.atomic.AtomicBoolean isConnected -> c
    java.util.concurrent.atomic.AtomicBoolean canRandomplay -> d
    java.util.concurrent.atomic.AtomicReference socketRef -> e
    java.util.concurrent.atomic.AtomicReference socketWriter -> f
    java.util.concurrent.atomic.AtomicReference activePlayer -> g
    java.util.concurrent.atomic.AtomicReference defaultPlayer -> h
    java.util.concurrent.atomic.AtomicReference currentHost -> i
    java.util.concurrent.atomic.AtomicReference httpPort -> j
    java.util.concurrent.atomic.AtomicReference cliPort -> k
    android.net.wifi.WifiManager$WifiLock wifiLock -> l
    65:66:void setWifiLock(android.net.wifi.WifiManager$WifiLock) -> a
    70:78:void updateWifiLock(boolean) -> a
    81:96:void disconnect() -> a
    99:109:void setConnectionState(boolean,boolean) -> a
    112:112:com.danga.squeezer.IServiceCallback getCallback() -> b
    116:117:void setCallback(com.danga.squeezer.IServiceCallback) -> a
    120:121:void callbackCompareAndSet$1543eceb(com.danga.squeezer.IServiceCallback) -> b
    124:124:com.danga.squeezer.model.SqueezerPlayer getActivePlayer() -> c
    128:129:void setActivePlayer(com.danga.squeezer.model.SqueezerPlayer) -> a
    136:137:void setDefaultPlayer$16fdfa98() -> d
    140:140:java.io.PrintWriter getSocketWriter() -> e
    154:156:void setHttpPort(java.lang.Integer) -> a
    159:160:void setCanRandomplay(boolean) -> b
    163:163:boolean canRandomplay() -> f
    167:167:boolean isConnected() -> g
    171:173:void startListeningThread(com.danga.squeezer.service.SqueezeService) -> a
    224:269:void startConnect(com.danga.squeezer.service.SqueezeService,java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.String) -> a
    283:294:int parsePort(java.lang.String) -> a
    299:299:java.lang.Integer getHttpPort() -> h
    303:303:java.lang.String getCurrentHost() -> i
    46:46:java.util.concurrent.atomic.AtomicInteger access$0(com.danga.squeezer.service.SqueezerConnectionState) -> a
    52:52:java.util.concurrent.atomic.AtomicReference access$1(com.danga.squeezer.service.SqueezerConnectionState) -> b
    53:53:java.util.concurrent.atomic.AtomicReference access$2(com.danga.squeezer.service.SqueezerConnectionState) -> c
    98:98:void access$3$4f2274c8(com.danga.squeezer.service.SqueezerConnectionState,boolean) -> a
com.danga.squeezer.service.SqueezerConnectionState$1 -> com.danga.squeezer.service.SqueezerConnectionState$1:
    com.danga.squeezer.service.SqueezerConnectionState this$0 -> a
    com.danga.squeezer.service.SqueezeService val$service -> b
    java.lang.String val$cleanHostPort -> c
    java.lang.String val$host -> d
    int val$port -> e
    244:266:void run() -> run
com.danga.squeezer.service.SqueezerConnectionState$ListeningThread -> com.danga.squeezer.service.SqueezerConnectionState$ListeningThread:
    com.danga.squeezer.service.SqueezeService service -> a
    java.net.Socket socket -> b
    int generationNumber -> c
    com.danga.squeezer.service.SqueezerConnectionState this$0 -> d
    189:196:void run() -> run
com.danga.squeezer.service.SqueezerPlayerState -> com.danga.squeezer.service.SqueezerPlayerState:
    java.util.concurrent.atomic.AtomicBoolean isPlaying -> a
    java.util.concurrent.atomic.AtomicBoolean isPoweredOn -> b
    java.util.concurrent.atomic.AtomicReference currentSong -> c
    java.util.concurrent.atomic.AtomicReference currentTimeSecond -> d
    java.util.concurrent.atomic.AtomicReference currentSongDuration -> e
    35:35:boolean isPlaying() -> a
    38:39:com.danga.squeezer.service.SqueezerPlayerState setPlaying(boolean) -> a
    43:43:boolean isPoweredOn() -> b
    46:47:com.danga.squeezer.service.SqueezerPlayerState setPoweredOn(boolean) -> b
    51:51:com.danga.squeezer.model.SqueezerSong getCurrentSong() -> c
    54:55:java.lang.String getCurrentSongName() -> d
    62:62:boolean setCurrentSongUpdated(com.danga.squeezer.model.SqueezerSong) -> a
    69:69:java.lang.Integer getCurrentTimeSecond$61acf5d5() -> e
    72:73:com.danga.squeezer.service.SqueezerPlayerState setCurrentTimeSecond(java.lang.Integer) -> a
    77:77:java.lang.Integer getCurrentSongDuration() -> f
    80:80:java.lang.Integer getCurrentSongDuration$61acf5d5() -> g
    83:84:com.danga.squeezer.service.SqueezerPlayerState setCurrentSongDuration(java.lang.Integer) -> b
    88:92:void clear() -> h
com.google.android.apps.analytics.AnalyticsParameterEncoder -> com.google.android.apps.analytics.b:
    java.lang.String encode(java.lang.String,java.lang.String) -> a
com.google.android.apps.analytics.AnalyticsReceiver -> com.google.android.apps.analytics.AnalyticsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.android.apps.analytics.CustomVariable -> com.google.android.apps.analytics.h:
    int scope -> a
    java.lang.String name -> b
    java.lang.String value -> c
    int index -> d
    int getScope() -> a
    java.lang.String getName() -> b
    java.lang.String getValue() -> c
    int getIndex() -> d
com.google.android.apps.analytics.CustomVariableBuffer -> com.google.android.apps.analytics.i:
    com.google.android.apps.analytics.CustomVariable[] customVariables -> a
    boolean isIndexAvailable(int) -> a
    void setCustomVariable(com.google.android.apps.analytics.CustomVariable) -> a
    com.google.android.apps.analytics.CustomVariable getCustomVariableAt(int) -> b
    com.google.android.apps.analytics.CustomVariable[] getCustomVariableArray() -> a
    void throwOnInvalidIndex(int) -> c
    boolean hasCustomVariables() -> b
com.google.android.apps.analytics.Dispatcher -> com.google.android.apps.analytics.a:
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    void init(com.google.android.apps.analytics.Dispatcher$Callbacks) -> a
    void stop() -> a
    void setDryRun(boolean) -> a
com.google.android.apps.analytics.Dispatcher$Callbacks -> com.google.android.apps.analytics.aa:
    void hitDispatched(long) -> a
    void dispatchFinished() -> a
com.google.android.apps.analytics.Event -> com.google.android.apps.analytics.v:
    long eventId -> i
    java.lang.String accountId -> a
    int randomVal -> j
    int timestampFirst -> k
    int timestampPrevious -> l
    int timestampCurrent -> m
    int visits -> n
    int userId -> o
    boolean anonymizeIp -> p
    java.lang.String category -> b
    java.lang.String action -> c
    java.lang.String label -> d
    int value -> e
    int screenWidth -> f
    int screenHeight -> g
    com.google.android.apps.analytics.CustomVariableBuffer customVariableBuffer -> h
    com.google.android.apps.analytics.Transaction transaction -> q
    com.google.android.apps.analytics.Item item -> r
    void setRandomVal(int) -> a
    int getRandomVal() -> a
    void setTimestampFirst(int) -> b
    int getTimestampFirst() -> b
    void setTimestampPrevious(int) -> c
    int getTimestampPrevious() -> c
    void setTimestampCurrent(int) -> d
    int getTimestampCurrent() -> d
    void setVisits(int) -> e
    int getVisits() -> e
    void setUserId(int) -> f
    int getUserId() -> f
    void setAnonymizeIp(boolean) -> a
    boolean getAnonymizeIp() -> g
    java.lang.String toString() -> toString
    com.google.android.apps.analytics.Transaction getTransaction() -> h
    void setTransaction(com.google.android.apps.analytics.Transaction) -> a
    com.google.android.apps.analytics.Item getItem() -> i
    void setItem(com.google.android.apps.analytics.Item) -> a
    boolean isSessionInitialized() -> j
com.google.android.apps.analytics.GoogleAnalyticsTracker -> com.google.android.apps.analytics.j:
    com.google.android.apps.analytics.GoogleAnalyticsTracker INSTANCE -> a
    boolean debug -> b
    boolean dryRun -> c
    boolean anonymizeIp -> d
    int sampleRate -> e
    java.lang.String accountId -> f
    android.content.Context parent -> g
    android.net.ConnectivityManager connetivityManager -> h
    java.lang.String userAgentProduct -> i
    java.lang.String userAgentVersion -> j
    int dispatchPeriod -> k
    com.google.android.apps.analytics.HitStore hitStore -> l
    com.google.android.apps.analytics.Dispatcher dispatcher -> m
    boolean powerSaveMode -> n
    boolean dispatcherIsBusy -> o
    com.google.android.apps.analytics.CustomVariableBuffer customVariableBuffer -> p
    java.util.Map transactionMap -> q
    java.util.Map itemMap -> r
    android.os.Handler handler -> s
    java.lang.Runnable dispatchRunner -> t
    com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance() -> a
    void startNewSession(java.lang.String,android.content.Context) -> a
    void trackPageView(java.lang.String) -> a
    void maybeScheduleNextDispatch() -> f
    void cancelPendingDispatches() -> g
    boolean dispatch() -> b
    void dispatchFinished() -> c
    void stopSession() -> d
    boolean getDebug() -> e
    android.os.Handler access$000(com.google.android.apps.analytics.GoogleAnalyticsTracker) -> a
    com.google.android.apps.analytics.HitStore access$100(com.google.android.apps.analytics.GoogleAnalyticsTracker) -> b
com.google.android.apps.analytics.GoogleAnalyticsTracker$1 -> com.google.android.apps.analytics.l:
    com.google.android.apps.analytics.GoogleAnalyticsTracker this$0 -> a
    void run() -> run
com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks -> com.google.android.apps.analytics.c:
    com.google.android.apps.analytics.GoogleAnalyticsTracker this$0 -> a
    void dispatchFinished() -> a
    void hitDispatched(long) -> a
com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks$1 -> com.google.android.apps.analytics.n:
    com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks this$1 -> a
    void run() -> run
com.google.android.apps.analytics.Hit -> com.google.android.apps.analytics.o:
    java.lang.String hitString -> a
    long hitId -> b
com.google.android.apps.analytics.HitBuilder -> com.google.android.apps.analytics.g:
    void appendStringValue(java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    void appendCurrencyValue(java.lang.StringBuilder,java.lang.String,double) -> a
    java.lang.String constructHitRequestPath(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer) -> a
    java.lang.String getCustomVariableParams(com.google.android.apps.analytics.Event) -> a
    void createX10Project(com.google.android.apps.analytics.CustomVariable[],java.lang.StringBuilder,int) -> a
    java.lang.String x10Escape(java.lang.String) -> a
    java.lang.String getEscapedCookieString(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer) -> b
com.google.android.apps.analytics.HitStore -> com.google.android.apps.analytics.t:
    void putEvent(com.google.android.apps.analytics.Event) -> a
    com.google.android.apps.analytics.Hit[] peekHits() -> a
    void deleteHit(long) -> a
    int getNumStoredHits() -> b
    boolean setReferrer(java.lang.String) -> a
    void startNewVisit() -> c
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
com.google.android.apps.analytics.Item -> com.google.android.apps.analytics.u:
    java.lang.String orderId -> a
    java.lang.String itemSKU -> b
    java.lang.String itemName -> c
    java.lang.String itemCategory -> d
    double itemPrice -> e
    long itemCount -> f
    java.lang.String getOrderId() -> a
    java.lang.String getItemSKU() -> b
    java.lang.String getItemName() -> c
    java.lang.String getItemCategory() -> d
    double getItemPrice() -> e
    long getItemCount() -> f
com.google.android.apps.analytics.Item$Builder -> com.google.android.apps.analytics.q:
    java.lang.String orderId -> a
    java.lang.String itemSKU -> b
    double itemPrice -> c
    long itemCount -> d
    java.lang.String itemName -> e
    java.lang.String itemCategory -> f
    com.google.android.apps.analytics.Item$Builder setItemName(java.lang.String) -> a
    com.google.android.apps.analytics.Item$Builder setItemCategory(java.lang.String) -> b
    java.lang.String access$000(com.google.android.apps.analytics.Item$Builder) -> a
    java.lang.String access$100(com.google.android.apps.analytics.Item$Builder) -> b
    double access$200(com.google.android.apps.analytics.Item$Builder) -> c
    long access$300(com.google.android.apps.analytics.Item$Builder) -> d
    java.lang.String access$400(com.google.android.apps.analytics.Item$Builder) -> e
    java.lang.String access$500(com.google.android.apps.analytics.Item$Builder) -> f
com.google.android.apps.analytics.NetworkDispatcher -> com.google.android.apps.analytics.s:
    java.lang.String userAgent -> a
    org.apache.http.HttpHost googleAnalyticsHost -> b
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread dispatcherThread -> c
    boolean dryRun -> d
    void init(com.google.android.apps.analytics.Dispatcher$Callbacks) -> a
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    void setDryRun(boolean) -> a
    boolean isDryRun() -> b
    void stop() -> a
    org.apache.http.HttpHost access$200(com.google.android.apps.analytics.NetworkDispatcher) -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread -> com.google.android.apps.analytics.f:
    android.os.Handler handlerExecuteOnDispatcherThread -> a
    com.google.android.apps.analytics.PipelinedRequester pipelinedRequester -> b
    java.lang.String userAgent -> c
    int lastStatusCode -> d
    int maxEventsPerRequest -> e
    long retryInterval -> f
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask currentTask -> g
    com.google.android.apps.analytics.Dispatcher$Callbacks callbacks -> h
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks requesterCallBacks -> i
    com.google.android.apps.analytics.NetworkDispatcher parent -> j
    void onLooperPrepared() -> onLooperPrepared
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$402(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask) -> a
    int access$500(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> a
    long access$600(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> b
    long access$630$78cf8d4e(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> c
    long access$602$78cf8d4e(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> d
    com.google.android.apps.analytics.NetworkDispatcher access$700(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> e
    com.google.android.apps.analytics.PipelinedRequester access$800(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> f
    com.google.android.apps.analytics.Dispatcher$Callbacks access$900(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> g
    int access$1000(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> h
    java.lang.String access$1100(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> i
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks access$1200(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> j
    int access$1002$78cf9110(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> k
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$400(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> l
    int access$502(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,int) -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask -> com.google.android.apps.analytics.d:
    java.util.LinkedList hits -> a
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread this$0 -> b
    void run() -> run
    com.google.android.apps.analytics.Hit removeNextHit() -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks -> com.google.android.apps.analytics.x:
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread this$0 -> a
    void pipelineModeChanged$1385ff() -> a
    void requestSent() -> b
    void serverError(int) -> a
com.google.android.apps.analytics.PersistentHitStore -> com.google.android.apps.analytics.e:
    com.google.android.apps.analytics.PersistentHitStore$DataBaseHelper databaseHelper -> a
    int storeId -> b
    long timestampFirst -> c
    long timestampPrevious -> d
    long timestampCurrent -> e
    int visits -> f
    int numStoredHits -> g
    boolean sessionStarted -> h
    boolean useStoredVisitorVars -> i
    boolean anonymizeIp -> j
    int sampleRate -> k
    java.lang.String CREATE_EVENTS_TABLE -> l
    java.lang.String CREATE_SESSION_TABLE -> m
    java.lang.String CREATE_CUSTOM_VARIABLES_TABLE -> n
    java.lang.String CREATE_CUSTOM_VAR_CACHE_TABLE -> o
    java.lang.String CREATE_TRANSACTION_EVENTS_TABLE -> p
    java.lang.String CREATE_ITEM_EVENTS_TABLE -> q
    java.lang.String CREATE_HITS_TABLE -> r
    void deleteHit(long) -> a
    com.google.android.apps.analytics.Hit[] peekHits() -> a
    com.google.android.apps.analytics.Hit[] peekHits$7612f821() -> k
    com.google.android.apps.analytics.Event[] peekEvents$3798dea(android.database.sqlite.SQLiteDatabase,int) -> a
    com.google.android.apps.analytics.Transaction getTransaction(long,android.database.sqlite.SQLiteDatabase) -> a
    com.google.android.apps.analytics.Item getItem(long,android.database.sqlite.SQLiteDatabase) -> b
    com.google.android.apps.analytics.CustomVariableBuffer getCustomVariables(long,android.database.sqlite.SQLiteDatabase) -> c
    void putEvent(com.google.android.apps.analytics.Event) -> a
    void putEvent(com.google.android.apps.analytics.Event,android.database.sqlite.SQLiteDatabase,boolean) -> a
    com.google.android.apps.analytics.CustomVariableBuffer getVisitorVarBuffer() -> l
    int getNumStoredHits() -> b
    void loadExistingSession(android.database.sqlite.SQLiteDatabase) -> a
    void startNewVisit() -> c
    com.google.android.apps.analytics.Referrer readCurrentReferrer(android.database.sqlite.SQLiteDatabase) -> b
    boolean setReferrerDatabase(android.database.sqlite.SQLiteDatabase,android.content.ContentValues) -> a
    boolean setReferrer(java.lang.String) -> a
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
    java.lang.String access$000() -> d
    java.lang.String access$100() -> e
    java.lang.String access$200() -> f
    java.lang.String access$300() -> g
    java.lang.String access$400() -> h
    java.lang.String access$500() -> i
    java.lang.String access$600() -> j
com.google.android.apps.analytics.PersistentHitStore$DataBaseHelper -> com.google.android.apps.analytics.m:
    int databaseVersion -> a
    com.google.android.apps.analytics.PersistentHitStore store -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void createCustomVariableTables(android.database.sqlite.SQLiteDatabase) -> a
    void createECommerceTables(android.database.sqlite.SQLiteDatabase) -> b
    void createHitTable(android.database.sqlite.SQLiteDatabase) -> c
    void createReferrerTable(android.database.sqlite.SQLiteDatabase) -> d
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
com.google.android.apps.analytics.PipelinedRequester -> com.google.android.apps.analytics.k:
    org.apache.http.impl.DefaultHttpClientConnection connection -> b
    com.google.android.apps.analytics.PipelinedRequester$Callbacks callbacks -> a
    int lastStatusCode -> c
    boolean canPipeline -> d
    org.apache.http.HttpHost host -> e
    org.apache.http.conn.scheme.SocketFactory socketFactory -> f
    void addRequest(org.apache.http.HttpRequest) -> a
    void sendRequests() -> a
    void finishedCurrentRequests() -> b
    void closeConnection() -> c
com.google.android.apps.analytics.PipelinedRequester$Callbacks -> com.google.android.apps.analytics.y:
    void pipelineModeChanged$1385ff() -> a
    void serverError(int) -> a
    void requestSent() -> b
com.google.android.apps.analytics.Referrer -> com.google.android.apps.analytics.r:
    java.lang.String referrer -> a
    long timeStamp -> b
    int visit -> c
    int index -> d
    java.lang.String getReferrerString() -> a
    long getTimeStamp() -> b
    int getVisit() -> c
    int getIndex() -> d
com.google.android.apps.analytics.Transaction -> com.google.android.apps.analytics.p:
    java.lang.String orderId -> a
    java.lang.String storeName -> b
    double totalCost -> c
    double totalTax -> d
    double shippingCost -> e
    java.lang.String getOrderId() -> a
    java.lang.String getStoreName() -> b
    double getTotalCost() -> c
    double getTotalTax() -> d
    double getShippingCost() -> e
com.google.android.apps.analytics.Transaction$Builder -> com.google.android.apps.analytics.z:
    java.lang.String orderId -> a
    java.lang.String storeName -> b
    double totalCost -> c
    double totalTax -> d
    double shippingCost -> e
    com.google.android.apps.analytics.Transaction$Builder setStoreName(java.lang.String) -> a
    com.google.android.apps.analytics.Transaction$Builder setTotalTax(double) -> a
    com.google.android.apps.analytics.Transaction$Builder setShippingCost(double) -> b
    java.lang.String access$000(com.google.android.apps.analytics.Transaction$Builder) -> a
    double access$100(com.google.android.apps.analytics.Transaction$Builder) -> b
    java.lang.String access$200(com.google.android.apps.analytics.Transaction$Builder) -> c
    double access$300(com.google.android.apps.analytics.Transaction$Builder) -> d
    double access$400(com.google.android.apps.analytics.Transaction$Builder) -> e
com.google.android.apps.analytics.Utils -> com.google.android.apps.analytics.w:
    java.lang.String addQueueTimeParameter(java.lang.String,long) -> a
com.pocketjourney.view.TransparentPanel -> com.pocketjourney.view.TransparentPanel:
    android.graphics.Paint innerPaint -> a
    60:65:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
org.acra.ACRA -> org.acra.ACRA:
    boolean DEV_LOGGING -> DEV_LOGGING
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String RES_NOTIF_ICON -> RES_NOTIF_ICON
    java.lang.String RES_NOTIF_TICKER_TEXT -> RES_NOTIF_TICKER_TEXT
    java.lang.String RES_NOTIF_TITLE -> RES_NOTIF_TITLE
    java.lang.String RES_NOTIF_TEXT -> RES_NOTIF_TEXT
    java.lang.String RES_DIALOG_ICON -> RES_DIALOG_ICON
    java.lang.String RES_DIALOG_TITLE -> RES_DIALOG_TITLE
    java.lang.String RES_DIALOG_TEXT -> RES_DIALOG_TEXT
    java.lang.String RES_DIALOG_COMMENT_PROMPT -> RES_DIALOG_COMMENT_PROMPT
    java.lang.String RES_DIALOG_OK_TOAST -> RES_DIALOG_OK_TOAST
    java.lang.String RES_TOAST_TEXT -> RES_TOAST_TEXT
    int NOTIF_CRASH_ID -> NOTIF_CRASH_ID
    java.lang.String PREF_DISABLE_ACRA -> PREF_DISABLE_ACRA
    java.lang.String PREF_ENABLE_ACRA -> PREF_ENABLE_ACRA
    java.lang.String PREF_ENABLE_SYSTEM_LOGS -> PREF_ENABLE_SYSTEM_LOGS
    java.lang.String PREF_ENABLE_DEVICE_ID -> PREF_ENABLE_DEVICE_ID
    java.lang.String PREF_USER_EMAIL_ADDRESS -> PREF_USER_EMAIL_ADDRESS
    java.lang.String PREF_ALWAYS_ACCEPT -> PREF_ALWAYS_ACCEPT
    android.app.Application mApplication -> mApplication
    org.acra.annotation.ReportsCrashes mReportsCrashes -> mReportsCrashes
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mPrefListener -> mPrefListener
    android.text.format.Time mAppStartDate -> mAppStartDate
    org.acra.ReportField[] DEFAULT_MAIL_REPORT_FIELDS -> DEFAULT_MAIL_REPORT_FIELDS
    org.acra.ReportField[] DEFAULT_REPORT_FIELDS -> DEFAULT_REPORT_FIELDS
    java.lang.String NULL_VALUE -> NULL_VALUE
    186:249:void init(android.app.Application) -> init
    257:301:void initAcra() -> initAcra
    304:319:void checkCrashResources() -> checkCrashResources
    331:336:android.content.SharedPreferences getACRASharedPreferences() -> getACRASharedPreferences
    346:346:org.acra.annotation.ReportsCrashes getConfig() -> getConfig
    77:77:void access$000() -> access$000
org.acra.ACRA$1 -> org.acra.b:
    201:220:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.acra.ACRA$2 -> org.acra.a:
    int[] $SwitchMap$org$acra$ReportingInteractionMode -> a
org.acra.ACRAConfigurationException -> org.acra.s:
org.acra.Compatibility -> org.acra.q:
    40:52:int getAPILevel() -> a
org.acra.ConfigurationInspector -> org.acra.l:
    android.util.SparseArray mHardKeyboardHiddenValues -> a
    android.util.SparseArray mKeyboardValues -> b
    android.util.SparseArray mKeyboardHiddenValues -> c
    android.util.SparseArray mNavigationValues -> d
    android.util.SparseArray mNavigationHiddenValues -> e
    android.util.SparseArray mOrientationValues -> f
    android.util.SparseArray mScreenLayoutValues -> g
    android.util.SparseArray mTouchScreenValues -> h
    android.util.SparseArray mUiModeValues -> i
    java.util.HashMap mValueArrays -> j
    120:139:java.lang.String toString(android.content.res.Configuration) -> a
    196:211:java.lang.String activeFlags(android.util.SparseArray,int) -> a
org.acra.CrashReportData -> org.acra.o:
    org.acra.CrashReportData defaults -> a
    java.lang.String lineSeparator -> b
    93:130:void dumpString(java.lang.StringBuilder,java.lang.String,boolean) -> a
    142:146:java.lang.String getProperty(org.acra.ReportField) -> a
    252:265:void load(java.io.InputStream) -> a
    269:282:boolean isEbcdic(java.io.BufferedInputStream) -> a
    314:472:void load(java.io.Reader) -> a
    534:552:void store(java.io.OutputStream,java.lang.String) -> a
org.acra.CrashReportDialog -> org.acra.CrashReportDialog:
    android.content.SharedPreferences prefs -> b
    android.widget.EditText userComment -> c
    android.widget.EditText userEmail -> d
    java.lang.String mReportFileName -> a
    62:189:void onCreate(android.os.Bundle) -> onCreate
    48:48:android.widget.EditText access$000(org.acra.CrashReportDialog) -> a
    48:48:android.content.SharedPreferences access$100(org.acra.CrashReportDialog) -> b
    48:48:android.widget.EditText access$200(org.acra.CrashReportDialog) -> c
org.acra.CrashReportDialog$1 -> org.acra.h:
    org.acra.CrashReportDialog this$0 -> a
    131:161:void onClick(android.view.View) -> onClick
org.acra.CrashReportDialog$2 -> org.acra.i:
    org.acra.CrashReportDialog this$0 -> a
    171:173:void onClick(android.view.View) -> onClick
org.acra.DeviceFeaturesCollector -> org.acra.r:
    35:61:java.lang.String getFeatures(android.content.Context) -> a
org.acra.DropBoxCollector -> org.acra.c:
    java.lang.String[] SYSTEM_TAGS -> a
    56:124:java.lang.String read(android.content.Context,java.lang.String[]) -> a
org.acra.DumpSysCollector -> org.acra.f:
    40:60:java.lang.String collectMemInfo() -> a
org.acra.ErrorReporter -> org.acra.ErrorReporter:
    boolean enabled -> a
    java.util.ArrayList mReportSenders -> b
    org.acra.CrashReportData mCrashProperties -> c
    java.util.Map mCustomParameters -> d
    java.lang.String SILENT_SUFFIX -> e
    java.lang.Thread$UncaughtExceptionHandler mDfltExceptionHandler -> f
    org.acra.ErrorReporter mInstanceSingleton -> g
    android.content.Context mContext -> h
    java.lang.String mInitialConfiguration -> i
    org.acra.ReportingInteractionMode mReportingInteractionMode -> j
    245:256:void approvePendingReports() -> a
    266:267:void addCustomData(java.lang.String,java.lang.String) -> addCustomData
    324:331:java.lang.String createCustomInfoString() -> g
    340:343:org.acra.ErrorReporter getInstance() -> b
    357:365:void init(android.content.Context) -> a
    614:664:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    681:761:org.acra.ErrorReporter$ReportsSenderWorker handleException(java.lang.Throwable,org.acra.ReportingInteractionMode) -> a
    807:833:void notifySendReport(java.lang.String) -> a
    847:863:void sendCrashReport$5e3fe510(org.acra.CrashReportData) -> a
    878:899:java.lang.String saveCrashReportFile(java.lang.String,org.acra.CrashReportData) -> a
    908:928:java.lang.String[] getCrashReportFilesList() -> h
    942:976:void checkAndSendReports(android.content.Context,boolean) -> a
    980:988:org.acra.CrashReportData loadCrashReport(android.content.Context,java.lang.String) -> a
    992:996:void deleteFile(android.content.Context,java.lang.String) -> b
    1005:1006:void setReportingInteractionMode(org.acra.ReportingInteractionMode) -> a
    1012:1046:void checkReportsOnApplicationStart() -> c
    1074:1075:void deletePendingReports() -> d
    1104:1117:void deletePendingReports$49601cee(boolean,int) -> a
    1123:1132:void disable() -> e
    1173:1173:boolean isApproved(java.lang.String) -> b
    1224:1225:void addReportSender(org.acra.sender.ReportSender) -> a
    1277:1278:void setAppStartDate(android.text.format.Time) -> a
    88:88:android.content.Context access$000() -> f
    88:88:void access$100(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
org.acra.ErrorReporter$1 -> org.acra.j:
    org.acra.ErrorReporter this$0 -> a
    714:717:void run() -> run
org.acra.ErrorReporter$2 -> org.acra.k:
    org.acra.ErrorReporter this$0 -> a
    920:920:boolean accept(java.io.File,java.lang.String) -> accept
org.acra.ErrorReporter$ReportsSenderWorker -> org.acra.p:
    java.lang.String mCommentedReportFileName -> a
    java.lang.String mUserComment -> b
    java.lang.String mUserEmail -> c
    boolean mSendOnlySilentReports -> d
    boolean mApprovePendingReports -> e
    org.acra.ErrorReporter this$0 -> f
    135:148:void run() -> run
    175:177:void setUserComment(java.lang.String,java.lang.String) -> a
    188:190:void setUserEmail(java.lang.String,java.lang.String) -> b
    196:197:void setApprovePendingReports() -> a
org.acra.LogCatCollector -> org.acra.n:
    59:97:java.lang.String collectLogCat(java.lang.String) -> a
org.acra.ReflectionCollector -> org.acra.g:
    39:54:java.lang.String collectConstants(java.lang.Class) -> a
    63:82:java.lang.String collectStaticGettersResults(java.lang.Class) -> b
org.acra.ReportField -> org.acra.m:
    org.acra.ReportField REPORT_ID -> a
    org.acra.ReportField APP_VERSION_CODE -> b
    org.acra.ReportField APP_VERSION_NAME -> c
    org.acra.ReportField PACKAGE_NAME -> d
    org.acra.ReportField FILE_PATH -> e
    org.acra.ReportField PHONE_MODEL -> f
    org.acra.ReportField ANDROID_VERSION -> g
    org.acra.ReportField BUILD -> h
    org.acra.ReportField BRAND -> i
    org.acra.ReportField PRODUCT -> j
    org.acra.ReportField TOTAL_MEM_SIZE -> k
    org.acra.ReportField AVAILABLE_MEM_SIZE -> l
    org.acra.ReportField CUSTOM_DATA -> m
    org.acra.ReportField STACK_TRACE -> n
    org.acra.ReportField INITIAL_CONFIGURATION -> o
    org.acra.ReportField CRASH_CONFIGURATION -> p
    org.acra.ReportField DISPLAY -> q
    org.acra.ReportField USER_COMMENT -> r
    org.acra.ReportField USER_APP_START_DATE -> s
    org.acra.ReportField USER_CRASH_DATE -> t
    org.acra.ReportField DUMPSYS_MEMINFO -> u
    org.acra.ReportField DROPBOX -> v
    org.acra.ReportField LOGCAT -> w
    org.acra.ReportField EVENTSLOG -> x
    org.acra.ReportField RADIOLOG -> y
    org.acra.ReportField IS_SILENT -> z
    org.acra.ReportField DEVICE_ID -> A
    org.acra.ReportField INSTALLATION_ID -> B
    org.acra.ReportField USER_EMAIL -> C
    org.acra.ReportField DEVICE_FEATURES -> D
    org.acra.ReportField ENVIRONMENT -> E
    org.acra.ReportField SETTINGS_SYSTEM -> F
    org.acra.ReportField SETTINGS_SECURE -> G
    org.acra.ReportField SHARED_PREFERENCES -> H
    org.acra.ReportField[] $VALUES -> I
    26:26:org.acra.ReportField[] values() -> values
    26:26:org.acra.ReportField valueOf(java.lang.String) -> valueOf
org.acra.ReportingInteractionMode -> org.acra.ReportingInteractionMode:
    org.acra.ReportingInteractionMode SILENT -> SILENT
    org.acra.ReportingInteractionMode NOTIFICATION -> NOTIFICATION
    org.acra.ReportingInteractionMode TOAST -> TOAST
    org.acra.ReportingInteractionMode[] $VALUES -> $VALUES
    30:30:org.acra.ReportingInteractionMode[] values() -> values
    30:30:org.acra.ReportingInteractionMode valueOf(java.lang.String) -> valueOf
org.acra.SettingsCollector -> org.acra.e:
    45:65:java.lang.String collectSystemSettings(android.content.Context) -> a
    78:95:java.lang.String collectSecureSettings(android.content.Context) -> b
org.acra.SharedPreferencesCollector -> org.acra.d:
    13:42:java.lang.String collect(android.content.Context) -> a
org.acra.annotation.ReportsCrashes -> org.acra.c.a:
    java.lang.String formKey() -> a
    java.lang.String formUri() -> b
    org.acra.ReportingInteractionMode mode() -> c
    int resDialogCommentPrompt() -> d
    int resDialogEmailPrompt() -> e
    int resDialogIcon() -> f
    int resDialogOkToast() -> g
    int resDialogText() -> h
    int resDialogTitle() -> i
    int resNotifIcon() -> j
    int resNotifText() -> k
    int resNotifTickerText() -> l
    int resNotifTitle() -> m
    int resToastText() -> n
    java.lang.String sharedPreferencesName() -> o
    int sharedPreferencesMode() -> p
    boolean includeDropBoxSystemTags() -> q
    java.lang.String[] additionalDropBoxTags() -> r
    int dropboxCollectionMinutes() -> s
    java.lang.String[] logcatArguments() -> t
    java.lang.String formUriBasicAuthLogin() -> u
    java.lang.String formUriBasicAuthPassword() -> v
    org.acra.ReportField[] customReportContent() -> w
    java.lang.String mailTo() -> x
    boolean deleteUnapprovedReportsOnApplicationStart() -> y
    int socketTimeout() -> z
    boolean forceCloseDialogAfterToast() -> A
    java.lang.String[] additionalSharedPreferences() -> B
org.acra.sender.EmailIntentSender -> org.acra.b.e:
    android.content.Context mContext -> a
    41:51:void send(org.acra.CrashReportData) -> a
    54:64:java.lang.String buildBody(org.acra.CrashReportData) -> b
org.acra.sender.GoogleFormSender -> org.acra.b.f:
    android.net.Uri mFormUri -> a
    52:64:void send(org.acra.CrashReportData) -> a
org.acra.sender.GoogleFormSender$1 -> org.acra.b.c:
    int[] $SwitchMap$org$acra$ReportField -> a
org.acra.sender.HttpPostSender -> org.acra.b.d:
    android.net.Uri mFormUri -> a
    java.util.Map mMapping -> b
    100:106:void send(org.acra.CrashReportData) -> a
org.acra.sender.ReportSender -> org.acra.b.b:
    void send(org.acra.CrashReportData) -> a
org.acra.sender.ReportSenderException -> org.acra.b.a:
org.acra.util.BoundedLinkedList -> org.acra.a.c:
    int maxSize -> a
    46:49:boolean add(java.lang.Object) -> add
    59:63:void add(int,java.lang.Object) -> add
    72:77:boolean addAll(java.util.Collection) -> addAll
    93:93:boolean addAll(int,java.util.Collection) -> addAll
    104:104:void addFirst(java.lang.Object) -> addFirst
    114:115:void addLast(java.lang.Object) -> addLast
    124:130:java.lang.String toString() -> toString
org.acra.util.FakeSocketFactory -> org.acra.a.d:
    javax.net.ssl.SSLContext sslcontext -> a
    28:32:javax.net.ssl.SSLContext createEasySSLContext() -> a
    37:40:javax.net.ssl.SSLContext getSSLContext() -> b
    46:63:java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    68:68:java.net.Socket createSocket() -> createSocket
    73:73:boolean isSecure(java.net.Socket) -> isSecure
    79:79:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.acra.util.HttpRequest -> org.acra.a.b:
    org.apache.http.impl.client.DefaultHttpClient httpClient -> a
    org.apache.http.protocol.HttpContext localContext -> b
    org.apache.http.client.methods.HttpPost httpPost -> c
    org.apache.http.client.methods.HttpGet httpGet -> e
    org.apache.http.auth.UsernamePasswordCredentials creds -> d
org.acra.util.HttpUtils -> org.acra.a.a:
    43:60:void doPost(java.util.Map,java.net.URL,java.lang.String,java.lang.String) -> a
    63:63:boolean isNull(java.lang.String) -> a
org.acra.util.Installation -> org.acra.a.f:
    java.lang.String sID -> a
    31:41:java.lang.String id(android.content.Context) -> a
    45:52:java.lang.String readInstallationFile(java.io.File) -> a
org.acra.util.NaiveTrustManager -> org.acra.a.e:
    34:34:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    47:47:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    59:59:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
